{"schema_version":"1.0.0","elements":[{"description":"Px-vis component which creates a radar (spider) chart.\n\n### Usage - Auto-generating your axes from data\n\n    <px-vis-radar\n        width=\"[[width]]\"\n        height=\"[[height]]\"\n        axes='[\"Axes_1\",\"Axes_2\",\"Axes_n\"]'\n        chart-data=\"[[chartData]]\"\n        series-key=\"[[timestampKey]]\">\n    </px-vis-radar>\n\n\n### Usage - Specifying your axes manually\n\n    <px-vis-radar\n        width=\"[[width]]\"\n        height=\"[[height]]\"\n        chart-data=\"[[chartData]]\"\n        series-key=\"[[timestampKey]]\"\n        generate-axes-from-data>\n    </px-vis-radar>\n\n### Styling\nThe following custom properties are available for styling:\n\nCustom property | Description\n----------------|-------------\n  `--px-vis-axis-brush-outline-color` | The stroke (border) color for the brushed box on an axis\n  `--px-vis-axis-brush-fill-color` | The fill (background) color for the brushed box on an axis\n  `--px-vis-axis-brush-fill-opacity` | The opacity of the brushed box on an axis\n  |\n  |\n  |\n  `--px-vis-axis-color` | The color for the axis lines, axis ticks, and axis tick labels\n  `--px-vis-axis-title-color` | The color for the axis title\n  `--px-vis-axis-inline-title-color` | The color for the axis title\n  `--px-vis-axis-inline-type-color` | The color for the axis lines, axis ticks, and axis tick labels when using 'inline' labelPosition\n  `--px-vis-axis-inline-box-color` | The color for the tick boxes when using 'inline' labelPosition\n  |\n  |\n  |\n  `--px-vis-cursor-line-color` | The color for the lines which track the cursor/data\n  |\n  |\n  |\n  `--px-vis-gridlines-color` | The color for the gridlines\n  |\n  |\n  |\n  `--px-vis-register-series-name` | The color of the data series name\n  `--px-vis-register-data-value` | The color of the data series value\n  `--px-vis-register-box` | The color of the box around the register when a scrollbar is present\n  |\n  |\n  |\n  `--px-vis-series-color-0` | These are the colors used to represent the data series on the charts. Used in numerical order by default. Colors MUST start at 0 and cannot contain gaps between numbers.\n  `--px-vis-series-color-1` |\n  `--px-vis-series-color-2` |\n  `--px-vis-series-color-n` |\n  |\n  |\n  |\n  `--px-tooltip-background-color` | The color of the tooltip\n  `--px-tooltip-text-color` | The color of the tooltip text\n  `--px-tooltip-light-background-color` | The color of the light version tooltip\n  `--px-tooltip-light-text-color` | The color of the light version tooltip text\n  `--px-tooltip-light-border-color`| The color of the light version tooltip border\n  |\n  |\n  |\n  `--px-vis-font-family` | The font family for all labels and text","summary":"","path":"../px-vis-radar/px-vis-radar.html","properties":[{"name":"width","type":"number","description":"The width of the elem; generally the width of the charting area for most components","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":63,"column":4},"end":{"line":66,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.baseSize"},{"name":"height","type":"number","description":"The height of the component; generally the height of the charting area for most components.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":72,"column":4},"end":{"line":75,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.baseSize"},{"name":"_defaultMargin","type":"Object","description":"Copy of the default margin for checking if it has changed","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":95,"column":4},"end":{"line":105,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.margins"},{"name":"margin","type":"Object","description":"Defines the base margin for the chart. Calcs are run to add to the margin to accommodate axes and other elements which exist within the SVG frame, but outside the chart frame.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":110,"column":4},"end":{"line":120,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.margins"},{"name":"offset","type":"Array","description":"An optional offset for a variety of elements","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":143,"column":4},"end":{"line":148,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[0,0]","inheritedFrom":"PxVisBehavior.sizing"},{"name":"svg","type":"Object","description":"svg is a holder for the d3 instantiated svg container to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":46,"column":4},"end":{"line":49,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_uniqueIdsUsed","type":"Array","description":"Array of unique IDs generated for this comp. cleaned from global\nstore on detached","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2202,"column":5},"end":{"line":2207,"column":6}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"PxVisBehavior.uniqueIds"},{"name":"pxSvgElem","type":"Object","description":"The SVG element inside the chart - not a D3 selected element.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":54,"column":4},"end":{"line":57,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"pxSvgElemLower","type":"Object","description":"The SVG element inside the chart - not a D3 selected element. Used when there are two svgs in a chart","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":293,"column":4},"end":{"line":296,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.svgLower"},{"name":"canvasLayersConfig","type":"Object","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2760,"column":4},"end":{"line":2763,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehavior.canvasLayersConfig"},{"name":"canvasContext","type":"Object","description":"canvasContext is a holder for the instantiated canvas context to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":319,"column":4},"end":{"line":322,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"canvasLayers","type":"Object","description":"An array of the generated layers","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":328,"column":4},"end":{"line":332,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"_isAttached","type":"boolean","description":"Boolean tracking if we are attached","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2360,"column":4},"end":{"line":2363,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehavior.isAttached"},{"name":"renderToSvg","type":"boolean","description":"Boolean to specify if drawings should render to svg instead of canvas","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":354,"column":4},"end":{"line":357,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorD3.canvas"},{"name":"x","type":"Function","description":"x is a holder for the d3 instantiated scale object\nMust be set in the svg component and passed to all components so they know the drawing scale.\nThis can be set declaratively\n\nSee: https://github.com/d3/d3/blob/master/API.md#scales-d3-scale","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":445,"column":4},"end":{"line":448,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"y","type":"Object","description":"y is a holder for the d3 instantiated scale object\nMust be set in the svg component and passed to all components so they know the drawing scale.\nThis can be set declaratively\n\nSee: https://github.com/d3/d3/blob/master/API.md#scales-d3-scale","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":459,"column":4},"end":{"line":462,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"isMultiY","type":"boolean","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":463,"column":4},"end":{"line":467,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"chartData","type":"Array","description":"container for the data object that drives the chart / component\nGenerally loaded with an iron-ajax tag (but doesnt have to be)\nThis can be set declaratively","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":390,"column":6},"end":{"line":392,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.dataset"},{"name":"axes","type":"Array","description":"Represents all axes plotted by the chart, including muted ones.\nIt doesn't guarantee to have the same order as the current visual\nrepresentation.\nCan be set by the developer to define which axes to plot","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1586,"column":4},"end":{"line":1588,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.dimensions"},{"name":"dimensions","type":"Array","description":"An array of dimensions (axes) which the chart uses. This array represents\nthe current state of all axes: muted axes won't be included and the\narray is ordered based on the current visual representation.\nDo not set at a chart level, only read","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1595,"column":4},"end":{"line":1598,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.dimensions"},{"name":"seriesKey","type":"string","description":"A `Required` dev set string which defines which data key to use for the series lines\n\n This depends on your data and could be *x*, *Timestamp*, ect.","privacy":"public","sourceRange":{"start":{"line":499,"column":6},"end":{"line":502,"column":7}},"metadata":{"polymer":{"notify":true}}},{"name":"chartExtents","type":"Object","description":"Developer set chart extents for the chart. The chart will draw to whatever values are specified in the chartExtents.\nSetting this and not using \"dynamic\" will prevent the chart from\nhaving to parse the data to find the extents and therefore improve\nperformance for initial rendering\n```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nTo force the chart to calculate based on data, use \"dynamic\".\n```\n {\n     \"x\": [0,\"dynamic\"],\n     \"y\": [-10,\"dynamic\"],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1191,"column":4},"end":{"line":1194,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.chartExtents"},{"name":"centerOffset","type":"number","description":"Used in a radial chart to provide a hole in the center of the chart","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":1162,"column":4},"end":{"line":1166,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"0","inheritedFrom":"PxVisBehaviorD3.radialAxisConfig"},{"name":"domainChanged","type":"number","description":"Number which increments up when the domain(s) has(have) changed.\n\n0 (false) indicates that domains have not been set.\n\nServes as a trigger for many elements to redraw.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":527,"column":4},"end":{"line":531,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"0","inheritedFrom":"PxVisBehaviorD3.domainUpdate"},{"name":"selectedDomain","type":"Object","description":"New chart extents selected by the user\n\nServes as a trigger for the scale component to redefine the chart extents","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":634,"column":4},"end":{"line":640,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.selectedDomain"},{"name":"completeSeriesConfig","type":"Object","description":"A configuration file generated by the chart behavior based on seriesConfig and defaultSeriesConfig.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":414,"column":7},"end":{"line":417,"column":8}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.completeSeriesConfig"},{"name":"mutedSeries","type":"Object","description":"A list of user selected muted series. Tied declaratively to series components\n\nThe series name is the key and the value is a boolean for whether it is muted or not:\n\n```\n{\n    'seriesId1':true,\n    'seriesId2':false,\n }\n```\n\nIn this example, seriesId1 is muted. seriesId2 was muted, but has been turned back on.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":476,"column":4},"end":{"line":480,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"{}","inheritedFrom":"PxVisBehavior.mutedSeries"},{"name":"hardMute","type":"boolean","description":"Allows for a \"hard\" muting of the series/categories: the\nseries/category won't show up\nin the tooltip anymore, it's tooltip data won't be shown in the register\nand its extents won't be taken into account by the chart","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":487,"column":5},"end":{"line":490,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehavior.mutedSeries"},{"name":"_calculatedExtents","type":"Object","description":"Holder for the calculated extents","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":47,"column":6},"end":{"line":50,"column":7}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"radar","type":"boolean","description":"Whether the scale is for radar and should use a scalePoint X scale\ninstead of a scaleLinear","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":55,"column":6},"end":{"line":58,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"labelTypeSize","type":"number","description":"Defines the base label type size","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":872,"column":4},"end":{"line":875,"column":5}},"metadata":{"polymer":{}},"defaultValue":"12","inheritedFrom":"PxVisBehaviorD3.labelTypeSize"},{"name":"redrawSeries","type":"boolean","description":"Boolean to specify if we should redraw the chart series when we move an axis. More of a chart type by chart type configuration rather than a developer configuration. IE, for charts such as multi-y timeseries, it is unnessary. For charts such as parallel coordinates, it is necessary.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":829,"column":4},"end":{"line":832,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorD3.dynamicRedraw"},{"name":"redrawElems","type":"Array","description":"The accompanying array of series elements required to redraw.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":836,"column":4},"end":{"line":839,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"PxVisBehaviorD3.dynamicRedraw"},{"name":"dynamicRedraw","type":"boolean","description":"Boolean specifing if the lines should redraw as you move the axis or just at the end.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":843,"column":4},"end":{"line":846,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorD3.dynamicRedraw"},{"name":"categoryKey","type":"string","description":"A dev set string speciying which key to use as the category to use to color the series lines","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1625,"column":4},"end":{"line":1627,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.categories"},{"name":"categories","type":"Array","description":"A dev set array defining the categories values.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1632,"column":4},"end":{"line":1635,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"PxVisBehavior.categories"},{"name":"commonAxis","type":"boolean","description":"A boolean specifying if all axes should share the same range","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1658,"column":4},"end":{"line":1661,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehavior.commonAxis"},{"name":"range","type":"Object","description":"Range object defining the time span\n  * Format ISO8601 strings\n```\n{\n   \"from\": \"2013-01-07T22:44:30.652Z\",\n   \"to\" : \"2013-02-04T22:44:30.652Z\"\n}\n```\n\nUpdates and is updated by SelectedDomain","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":672,"column":4},"end":{"line":675,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"name":"_preventDomainUpdate","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":676,"column":4},"end":{"line":679,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"name":"_preventRangeUpdate","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":680,"column":4},"end":{"line":683,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"name":"_parentResizable","type":"Object","description":"The closest ancestor element that implements `IronResizableBehavior`.","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":41,"column":6},"end":{"line":41,"column":75}},"metadata":{"polymer":{"observer":"\"_parentResizableChanged\""}},"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_notifyingDescendant","type":"boolean","description":"True if this element is currently notifying its descendant elements of\nresize.","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":47,"column":6},"end":{"line":47,"column":57}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"preventResize","type":"boolean","description":"Prevents the chart from automatically resizing to fit its container","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":806,"column":6},"end":{"line":810,"column":7}},"metadata":{"polymer":{"observer":"\"_preventResizeChanged\""}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"chartHorizontalAlignment","type":"string","description":"This allows to decide how the chart\ndrawing will be horizontally aligned when smaller than its container. Values:\n- center\n- left\n- right\n\nif any other value is used then left alignment will be chosen","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":820,"column":6},"end":{"line":823,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"center\"","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"chartVerticalAlignment","type":"string","description":"This allows to decide how the chart\ndrawing will be vertically aligned when smaller than its container. Values:\n- center\n- top\n- bottom\n\nif any other value is used then top alignment will be chosen","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":833,"column":6},"end":{"line":836,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"center\"","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"_chartWrapperClass","type":"string","description":"Class to be used on the external wrapper within the chart","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":840,"column":6},"end":{"line":843,"column":7}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"debounceResizeTiming","type":"number","description":"Timing (in ms) to be used for iron resize when the chart auto size\n(preventResize = false)","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":848,"column":6},"end":{"line":851,"column":7}},"metadata":{"polymer":{}},"defaultValue":"250","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"truncationLength","type":"number","description":"Defines if the label should get truncated and to how many characters.\n\nDefault length is 10 characters, not including the ellipsis which gets inserted.\n\nThe length must be at least 2.\n\nTo disable truncation, set the value to -1","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":176,"column":4},"end":{"line":179,"column":5}},"metadata":{"polymer":{}},"defaultValue":"10","inheritedFrom":"PxVisBehavior.truncating"},{"name":"tooltipData","type":"Object","description":"Data reported back by the interaction space component. Displays the series name, values, and timestamp in the register. tooltipData is in the form:\n\n```\n   {\n       \"time\": \"2015-03-25T20:34:47.085Z\",\n       \"hidden\": false,\n       \"series\":[{\n           \"name\":\"seriesId1\",\n           \"coord\":[xCoord1, yCoord1],  //in pixel space\n           \"value\":{\n               \"x\":xVal1,             //in data space\n               \"seriesId1\":yVal1    //in data space\n           }\n       },{\n           \"name\":\"seriesId2\",\n           \"coord\":[xCoord2, yCoord2],  //in pixel space\n           \"value\":{\n               \"x\":xVal2,             //in data space\n               \"seriesId2\":yVal2    //in data space\n           },\n       }],\n       \"mouse\":[ mouseX, mouseY ],   //in pixel space\n       \"xArr\":[xCoord1 , xCoord2],   //in pixel space\n       \"yArr\":[yCoord1 , yCoord2],   //in pixel space\n   }\n```\n\nWhen not hovering on a chart, the tooltipData should still have the series names in order for them to still appear in the register. IE:\n\n```\n   {\n       \"time\": null,\n       \"hidden\": true,\n       \"series\":[{\n           \"name\":\"seriesId1\",\n           \"value\": null\n       },{\n           \"name\":\"seriesName1\",\n           \"value\": null\n       }],\n       \"mouse\": null,\n       \"xArr\": null,\n       \"yArr\": null\n   }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":692,"column":4},"end":{"line":695,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.tooltipData"},{"name":"defaultEmptyData","type":"Object","description":"The \"empty\" dataset that should be used for tooltipData when not hovering","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":700,"column":4},"end":{"line":704,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"null","inheritedFrom":"PxVisBehavior.tooltipData"},{"name":"clipPath","type":"string","description":"Holder for a clipping path ID","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":787,"column":4},"end":{"line":790,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.clipPath"},{"name":"seriesClipPath","type":"string","description":"A more restricting clip path used to limit where the series are being drawn","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":795,"column":4},"end":{"line":798,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.clipPath"},{"name":"_loadedOnPage","type":"boolean","description":"Boolean holding loading until the chart is actually attached","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1024,"column":6},"end":{"line":1026,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.waitForAttach"},{"name":"_smallerSide","type":"number","description":"Min between width and height","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1350,"column":5},"end":{"line":1353,"column":7}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"PxVisBehaviorChart.circleChart"},{"name":"_diameter","type":"number","description":"diameter of the chart drawing, adjusted with margins","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1357,"column":6},"end":{"line":1359,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.circleChart"},{"name":"_radius","type":"number","description":"radius of the chart drawing, adjusted with margins","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1363,"column":6},"end":{"line":1365,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.circleChart"},{"name":"_center","type":"Array","description":"center of the chart, based on radius and margins","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1369,"column":6},"end":{"line":1371,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.circleChart"},{"name":"_internalCircleMargins","type":"Object","description":"internal margins we can use in addition to \"margin\",\nused to offset chart labels for example","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1376,"column":6},"end":{"line":1381,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.circleChart"},{"name":"seriesColorList","type":"Array","description":"Defines an colors in order that will be used for series.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":35,"column":4},"end":{"line":43,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[\"rgb(0,0,0)\",\"rgb(75,75,75)\",\"rgb(125,125,125)\",\"rgb(200,200,200)\"]","inheritedFrom":"PxColorsBehavior.dataVisColors"},{"name":"layer","type":"Array","description":"Array of the svg layers","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1479,"column":4},"end":{"line":1482,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"numberOfLayers","type":"number","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1483,"column":4},"end":{"line":1485,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"generateLayers","type":"boolean","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1486,"column":4},"end":{"line":1489,"column":5}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"mutedAxes","type":"Object","description":"An object to hold which axes should be muted.\n\n*When adding keys to this, be sure to use Polymer set methods or notifyPath*\n\n```\n   {\n       \"Axes_to_skip_1\":true,\n       \"Axes_to_skip_2\":true\n   }\n```","privacy":"public","sourceRange":{"start":{"line":515,"column":6},"end":{"line":519,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"{}"},{"name":"hideAxisRegister","type":"boolean","description":"Allows to hide the axis register","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2491,"column":4},"end":{"line":2494,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.axisRegister"},{"name":"_axisRegisterConfig","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2495,"column":4},"end":{"line":2497,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.axisRegister"},{"name":"_axisRegisterTooltipData","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2498,"column":4},"end":{"line":2500,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.axisRegister"},{"name":"hideCategoryRegister","type":"boolean","description":"Allows to hide the axis register","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2618,"column":4},"end":{"line":2621,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.categoryRegister"},{"name":"_hideCategoryRegister","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2622,"column":4},"end":{"line":2625,"column":5}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxVisBehaviorChart.categoryRegister"},{"name":"_categoryRegisterConfig","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2626,"column":4},"end":{"line":2628,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.categoryRegister"},{"name":"_categoryRegisterTooltipData","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2629,"column":4},"end":{"line":2631,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.categoryRegister"},{"name":"axisRegisterConfig","type":"Object","description":"Configuration object used to customize the register cosmetic properties.\nPlease refer to px-vis-register (https://github.com/PredixDev/px-vis) for a list of supported properties","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2706,"column":4},"end":{"line":2708,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.categoryAndAxisRegisterConfigs"},{"name":"categoryRegisterConfig","type":"Object","description":"Configuration object used to customize the register cosmetic properties.\nPlease refer to px-vis-register (https://github.com/PredixDev/px-vis) for a list of supported properties","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2714,"column":4},"end":{"line":2716,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.categoryAndAxisRegisterConfigs"},{"name":"dynamicMenuConfig","type":"Array","description":"The config used by a dynamic menu to create menu entries. Example:\n```\n[\n    {\n     'name': 'Delete',\n      'action': function(data) {\n        console.log('run delete');\n      },\n      'actionContext': aComponent,\n      'eventName': 'delete',\n      'icon': 'fa-trash'\n    },\n    {\n      'name': 'Bring To Front',\n      'action': function(data) {\n        console.log('run bring to front');\n      },\n      'eventName': 'bring-to-front',\n      'icon': 'fa-arrow-up'\n    }\n  ];\n```\n\n- `action` is function that will be run when a menu item is clicked. You can pass\na specific context to be used in that function through `actionContext`. Otherwsie the\ncontext is going to be the chart itself. The `data` parameter has 2 properties: `itemConfig`\nwhich is this specific menu item config object and `additionalDetail` which represents the\nregister item: `value` and `name` (name is the serie id). Please note that because `itemConfig`\nis being passed back you could tie anything to it and have it available in this function.\nIf dynamicMenuConfig is passed in directly in the HTML then `action` will have to be passed in\nas a string with quotes escaped rather than directly as a function.\n- `name` is the menu item displayed text\n- if `eventName` is defined then an event with this name will be fired when clicking the item\nthe detail of this event will include `data` which ahs 2 properties: `itemConfig` and `additionalDetail`\njust like `action` is getting. The event is fired from the chart\n- `icon` is optional and defines a font-awesome icon to be used for the menu entry","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2032,"column":4},"end":{"line":2034,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.dynamicMenuConfig"},{"name":"showTooltip","type":"boolean","description":"Whether to display the tooltip","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2179,"column":4},"end":{"line":2182,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.showTooltip"},{"name":"_internalShowTooltip","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2183,"column":4},"end":{"line":2186,"column":5}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxVisBehaviorChart.showTooltip"},{"name":"_computedShowTooltip","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2187,"column":4},"end":{"line":2190,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"PxVisBehaviorChart.showTooltip"},{"name":"toolbarSubConfig","type":"Object","description":"toolbarSubConfig can be passed around from a toolbar to another so that clicking\non a \"global\" toolbar drives the sub row state for other toolbars","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2074,"column":4},"end":{"line":2076,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.toolbarSubConfig"},{"name":"interactionSpaceConfig","type":"Object","description":"Configuration object used to customize the interaction space\nPlease refer to px-vis-interation space (https://github.com/PredixDev/px-vis) for a list of supported properties.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1187,"column":4},"end":{"line":1190,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorChart.interactionSpaceConfig"},{"name":"toolbarConfig","type":"Object","description":"Configuration object used to customize the toolbar\nPlease refer to px-vis-toolbar (https://github.com/PredixDev/px-vis) for a list of supported properties.\nMost interesting properties include:\n- config (complex object for customizing the toolbar)\n- horizontalAlignment\n- subToolbarAlignment","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1216,"column":4},"end":{"line":1218,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.chartToolbarConfig"},{"name":"_measurementCanvas","type":"Object","description":"The zoom selection type:\n- xy\n- xAxis\n- yAxis","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2313,"column":4},"end":{"line":2315,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.measureText"},{"name":"_measurementCanvasContext","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2316,"column":4},"end":{"line":2318,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.measureText"},{"name":"highlighterConfig","type":"Object","description":"Configuration object used to customize the highlighter properties.\nPlease refer to px-vis-point-highlighter and px-vis-line-highlighter (https://github.com/PredixDev/px-vis) for a list of supported properties\nMost interesting properties include:\n- `fuzz` : +/- search window around the datapoint value\n- 'differenDataset' : if this chart has a different dataset from the crosshair data origin chart","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1302,"column":4},"end":{"line":1304,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.highlighterConfigs"},{"name":"crosshairData","type":"Object","description":"Data reported back by the interaction space component so charts can share a crosshair. Has two sets of data: 1) the full data retrieved at the shared key so if all charts use the same datasets, this data can just be displayed on all the charts. 2) a list of just the shared key so if they use different datasets, a search for the closest data at each point can be made. crosshairData is in the form:\n\n```\n   {\n       \"rawData\":[{\n           \"[[sharedKey]]\": [[sharedKeyVal1]],\n           \"[[key1]]\":[[val]],\n           \"[[key2]]\":[[val]]\n       },{\n           \"[[sharedKey]]\": [[sharedKeyVal2]],\n           \"[[key1]]\":[[val]],\n           \"[[key2]]\":[[val]]\n       }],\n       \"timeStamps\":[ timeStamp1, timeStamp2 ]\n   }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":742,"column":4},"end":{"line":745,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"generatingCrosshairData","type":"string","description":"Bool indicating if interaction space is currently generating data","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":751,"column":4},"end":{"line":755,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"false","inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"crosshairPixelSearch","type":"number","description":"Allows the crosshair to search all datapoints within a pixel radius. If set\nto 0 will only pick up the closest point","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":761,"column":4},"end":{"line":764,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0","inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"renderToCanvas","type":"boolean","description":"Boolean to specify if drawings should render to canvas instead of svg","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":397,"column":4},"end":{"line":401,"column":5}},"metadata":{"polymer":{"observer":"\"_renderToCanvasChanged\""}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorD3.renderToCanvas"},{"name":"preventInitialDrawing","type":"boolean","description":"blocks initial drawings of axis until set to false","privacy":"public","sourceRange":{"start":{"line":651,"column":6},"end":{"line":654,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true"},{"name":"drawDebounceTime","type":"Object","description":"Debounce time to use for different types of rendering","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":40,"column":4},"end":{"line":50,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{\"chartData\":10,\"filteredChartData\":10,\"highlightData\":10,\"markers\":10}","inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"_oldDrawDebounceTime","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":51,"column":4},"end":{"line":53,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"debounceOnPanning","type":"boolean","description":"Whether the drawings will be debounced on panning the chart.\nWhen not debounced the redraw will happen more often on panning,\nwhich should result in a smoother experience. However if rendering\na big number of points this can have the opposite effect since\nit wil redraw too often comapred tot he time taken to re render everything","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":61,"column":4},"end":{"line":64,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"_progressiveRenderingCounter","type":"Object","description":"Counter to track progressive rendering requests and only draw the latest one","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":142,"column":4},"end":{"line":147,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_canvasTargets","type":"Object","description":"Current registered targets to draw on canvas during rendering","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":151,"column":4},"end":{"line":156,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_svgTargets","type":"Object","description":"Current registered targets to draw on svg during rendering","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":160,"column":4},"end":{"line":165,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"rendererMinimumPointsPerFrame","type":"number","description":"The minimum number of points to render per frame\neven if the chart is laggy","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":170,"column":4},"end":{"line":173,"column":5}},"metadata":{"polymer":{}},"defaultValue":"50","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"rendererFrameDurationTarget","type":"number","description":"Target duration (in ms) for one frame. The renderer will try to render\nas much data as possible in that given timeframe before calling the next\nanimation frame.\nWARNING: this needs to be higher than 16ms since by default\nrequestAnimationFrame will be called every ~16ms, so our target needs to\nbe higher to ensure we keep the processor busy","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":182,"column":4},"end":{"line":185,"column":5}},"metadata":{"polymer":{}},"defaultValue":"20","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_internalRendererFrameDurationTarget","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":186,"column":4},"end":{"line":189,"column":5}},"metadata":{"polymer":{}},"defaultValue":"20","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"rendererFrameCountToAverage","type":"number","description":"Number of previous frames to average for the adaptive\nprogressive rendering","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":194,"column":4},"end":{"line":197,"column":5}},"metadata":{"polymer":{}},"defaultValue":"3","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_previousFramesTiming","type":"Object","description":"For each renderer type the previous frames number of points and duration for line and scatter","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":201,"column":4},"end":{"line":210,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_hasBeenDetached","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":211,"column":4},"end":{"line":214,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_combinedMutedSeries","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2944,"column":4},"end":{"line":2947,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorChart.combineMutes"},{"name":"mutedSeriesDomain","type":"Object","description":"An object which holds the series lines that have been muted based on the selected domain","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2952,"column":4},"end":{"line":2955,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorChart.combineMutes"},{"name":"mutedSeriesBrush","type":"Object","description":"An object which holds the series lines that have been muted based on the axes brushes","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2960,"column":4},"end":{"line":2963,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorChart.combineMutes"},{"name":"mutedSeriesCategories","type":"Object","description":"An object which holds the series lines that have been muted based on\nthe categories","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2969,"column":4},"end":{"line":2972,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorChart.combineMutes"},{"name":"_updateStyles","type":"Function","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3206,"column":4},"end":{"line":3208,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.updateStylesOverride"},{"name":"_stylesUpdated","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3209,"column":4},"end":{"line":3212,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0","inheritedFrom":"PxVisBehavior.updateStylesOverride"},{"name":"timeDomain","type":"Object","description":"Can be used to define a time domain to be used, typically to restrain/filter the amount\nof data displayed. Can be used in combination with a px-vis-chart-navigator","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3256,"column":4},"end":{"line":3261,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehavior.timeDomain"},{"name":"timeKey","type":"string","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3262,"column":4},"end":{"line":3264,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.timeDomain"},{"name":"axesDomain","type":"Object","description":"New chart extents selected by the user\n\nServes as a trigger for the scale component to redefine the chart extents","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3301,"column":4},"end":{"line":3306,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehavior.axesDomain"},{"name":"extentsData","type":"Object","description":"Data reported back by the interaction space. Displays the interpreted x & y coords, width and height, and domain extents. extentsData is in the form:\n\n```\n  {\n    x1 = {pixel-space}\n    y1 = {pixel-space}\n    x2 = {pixel-space}\n    y2 = {pixel-space}\n    w = {pixels}\n    h = {pixels}\n    eX = [{domain}, {domain}];\n    eY = [{domain}, {domain}];\n  }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":801,"column":4},"end":{"line":804,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.extentsData"},{"name":"extentsAction","type":"string","description":"Used by the chart to interpret if extentsData is strip or zoom","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":808,"column":4},"end":{"line":811,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.extentsData"},{"name":"_extentsDataRoutes","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1653,"column":4},"end":{"line":1662,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.extentsDataRouter"},{"name":"_mutedExtents","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3028,"column":4},"end":{"line":3033,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorChart.multiAxisMuting"},{"name":"zoomStack","type":"Array","description":"Stack of previous zooms","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1705,"column":4},"end":{"line":1710,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"zoomInPercentage","type":"number","description":"Percentage used to calculate new extents when using zoomIn feature.\nThe higher the number the more it will zoom in. should be less than 1.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1715,"column":4},"end":{"line":1718,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0.5","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"zoomOutPercentage","type":"number","description":"Percentage used to calculate new extents when using zoomOut feature.\nThe higher the number the more it will zoom out. should be less than 1.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1723,"column":4},"end":{"line":1726,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0.5","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"_isPanning","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1728,"column":4},"end":{"line":1731,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"brushDomains","type":"Object","description":"Holder for all domains from brushes\n\nChart expects a set of brushDomains by type\n{\n   type1: {\n     axis1: [min, max],\n     axis2: [min, max]\n   },\n   type2: {\n     axis1: [min, max],\n     axis2: [min, max]\n   }\n}","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3337,"column":4},"end":{"line":3342,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehavior.brushDomains"},{"name":"useCategoryInTooltip","type":"boolean","description":"Whether the tooltip should show the category name for each\nvalue rather than the axis name.\nWill use the category name if defined in seriesConfig, otherwise\na string with the following formatting: 'categoryKey - category'","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3228,"column":4},"end":{"line":3231,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.useCategoryInTooltip"},{"name":"_svgClientRect","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3245,"column":4},"end":{"line":3245,"column":26}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.tooltipSizing"},{"name":"_canvasClientRect","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3246,"column":4},"end":{"line":3246,"column":29}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.tooltipSizing"},{"name":"_winX","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3247,"column":4},"end":{"line":3247,"column":17}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.tooltipSizing"},{"name":"_winY","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3248,"column":4},"end":{"line":3248,"column":17}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.tooltipSizing"},{"name":"annotationData","type":"Array","description":"The annotation data: x and y values + the series which scale should be used.\nData is an arbitrary object you want to store for use when showing the\nannotation\n```\n   [{\n       x: 1325897523,\n       y: 15.7,\n       series: y0,\n       data: {...}\n   },{\n    ...\n    }]\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3373,"column":4},"end":{"line":3378,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"PxVisBehavior.annotationData"},{"name":"showStrongIcon","type":"boolean","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3380,"column":4},"end":{"line":3383,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehavior.annotationData"},{"name":"_lassoCrosshairData","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1577,"column":4},"end":{"line":1580,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorChart.multiAxisLasso"},{"name":"resetLassoData","type":"boolean","description":"When switched clears all the previous selection made\n(in _lassoCrosshairData)","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1585,"column":5},"end":{"line":1589,"column":5}},"metadata":{"polymer":{"observer":"\"_resetLasso\""}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.multiAxisLasso"},{"name":"_verticalRegisterHeight","type":"number","description":"the calculated height that can be used by the vertical register","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2396,"column":2},"end":{"line":2398,"column":3}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_registerHeight","type":"number","description":"The register height based on its type, config and calculated size","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2402,"column":2},"end":{"line":2405,"column":3}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_verticalRegisterHeightDeductions","type":"Array","description":"When calculating the register height if the height deductions to do\nhaven't been passed in (i.e height changed rather than ironResize being called)\nthen this list of string will be used to search for elements IDs and calculate\ntheir height, deducting them","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2412,"column":4},"end":{"line":2414,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_verticalRegisterDrawingCanvasId","type":"string","description":"ID of the element where the drawing happens. used to get its height property","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2418,"column":4},"end":{"line":2420,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_currentPage","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2749,"column":4},"end":{"line":2752,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0","inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"_registerCurrentPage","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2754,"column":4},"end":{"line":2757,"column":5}},"metadata":{"polymer":{}},"defaultValue":"1","inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"_registerTotalPages","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2759,"column":4},"end":{"line":2762,"column":5}},"metadata":{"polymer":{}},"defaultValue":"1","inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"_registerDisplayPageArrows","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2764,"column":4},"end":{"line":2767,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"firstDateTimeFormat","type":"string","description":"Defines the format for the first datetime string. The first datetime is shown in normal font weight.\n\nDefault is the first datetime string is TIME presented as \"15:00:00 +0000\"\n\nFor valid string formats, see: http://momentjs.com/docs/#/displaying/","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":47,"column":4},"end":{"line":50,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"HH:mm:ss ZZ\"","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"secondDateTimeFormat","type":"string","description":"Defines the format for the second datetime string. The second datetime is shown in bold font weight.\n\nDefault is the second datetime string is DATE presented as \"12 Feb 2016\"\n\nFor valid string formats, see: http://momentjs.com/docs/#/displaying/","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":62,"column":4},"end":{"line":65,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"DD MMM YYYY\"","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"separator","type":"string","description":"Defines a separator character between the two datetime strings.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":74,"column":4},"end":{"line":77,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"|\"","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"timezone","type":"string","description":"Sets what timezone the event time should display in.\n\nTimezone defaults to UTC time. If a valid timezone is specified, then times include daylight savings time if applicable.\n\nFor a list of valid timezones, see: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n\nFor more details on timezones, see: http://momentjs.com/timezone/","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":91,"column":4},"end":{"line":94,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"utc\"","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"tooltipRequested","type":"boolean","description":"Whether the tooltip should be shown or hidden","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3308,"column":5},"end":{"line":3311,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"tooltipOrientation","type":"string","description":"Specifies the orientation of the event tooltip.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3318,"column":6},"end":{"line":3321,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"left\"","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"resources","type":"Object","description":"List of keys & values used for translating this component.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3326,"column":6},"end":{"line":3338,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{\"en\":{\"Event\":\"Event\",\"ID\":\"ID\",\"Timestamp\":\"Timestamp\",\"X\":\"X\"}}","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"useKeyIfMissing","type":"boolean","description":"Use the key for localization if value for language is missing.\nShould always be true for Predix components.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3344,"column":4},"end":{"line":3347,"column":5}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"language","type":"string","description":"set a default for localizing. Switch it for the chart to pick * up a possibly new d3 or moment locale","privacy":"public","sourceRange":{"start":{"line":644,"column":6},"end":{"line":647,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"en\""},{"name":"_availableTooltips","type":"Array","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3369,"column":4},"end":{"line":3372,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_usedTooltipMap","type":"Map","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3374,"column":4},"end":{"line":3377,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_lockedTooltips","type":"Set","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3379,"column":4},"end":{"line":3382,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"skipKeys","type":"Object","description":"A dev set Object of which keys in the chart data should not be used as axes.\n\n`Required` if axes is not specified.\n\n```\n   {\n       \"Axes_to_skip_1\":true,\n       \"Axes_to_skip_2\":true\n   }\n```","privacy":"public","sourceRange":{"start":{"line":488,"column":6},"end":{"line":492,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"{}"},{"name":"generateAxesFromData","type":"boolean","description":"A boolean to specify if axes are developer set or should be generated from the chart data","privacy":"public","sourceRange":{"start":{"line":524,"column":6},"end":{"line":527,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"seriesConfig","type":"Object","description":"A developer set configuration file to specify a vareity of options.\n\nThe seriesKey can be specified to set the color for the lines.\n\n```\n {\n    \"mySeriesKey\": {                  //seriesKey is a unique identifier for the configuration\n        \"color\": \"rgb(0,0,0)\"        //color of the series lines\n    }\n }\n```\n\nThe axes can be specified to set the title and units.\n\n```\n {\n    \"myAxis1\": {\n        \"title\": \"My awesome title\",\n        \"yAxisUnit\": \"Oranges\"\n    }\n }\n```\n\n\nThe category color can also be specified if using categories.\n\n```\n {\n    \"cat1\": {\n        \"color\": \"rgb(0,0,0)\"\n    },\n    \"cat2\": {\n        \"color\": \"rgb(0,255,0)\"\n    }\n }\n```","privacy":"public","sourceRange":{"start":{"line":566,"column":6},"end":{"line":570,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"{}"},{"name":"displayedValues","type":"Object","description":"Object representing the actual displayed titles for each axis","privacy":"public","sourceRange":{"start":{"line":574,"column":6},"end":{"line":576,"column":7}},"metadata":{"polymer":{}}},{"name":"_currentLabelRotation","type":"string","description":"The current bottom margin used for the label, usually changing when label rotation changes","privacy":"protected","sourceRange":{"start":{"line":580,"column":6},"end":{"line":583,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\""},{"name":"_haveChartData","type":"boolean","description":"Limiting Boolean saying if we have chart data or not","privacy":"protected","sourceRange":{"start":{"line":587,"column":6},"end":{"line":590,"column":7}},"metadata":{"polymer":{"readOnly":true}}},{"name":"_tooltipSeriesConfig","type":"Object","description":"A \"series configuration\" object specifically for the tooltip","privacy":"protected","sourceRange":{"start":{"line":594,"column":6},"end":{"line":597,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{}"},{"name":"tooltipConfig","type":"Object","description":"Configuration object used to customize the tooltip.\nPlease refer to px-vis-tooltip (https://github.com/PredixDev/px-vis) for a list of supported properties.\nMost interesting properties include:\n- width\n- height\n- tooltipStyle\n- forceDateTimeDisplay","privacy":"public","sourceRange":{"start":{"line":607,"column":6},"end":{"line":609,"column":7}},"metadata":{"polymer":{}}},{"name":"brushToRemove","type":"boolean","description":"Boolean specifying if the axis brushes should remove the brushed data or retain it","privacy":"public","sourceRange":{"start":{"line":613,"column":6},"end":{"line":616,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_extendedWidth","type":"number","description":"Extend width if possible to fit labels","privacy":"protected","sourceRange":{"start":{"line":620,"column":6},"end":{"line":622,"column":7}},"metadata":{"polymer":{}}},{"name":"_extendedCenter","type":"Array","description":"Center of the drawing, adjusted for extendedWidth","privacy":"protected","sourceRange":{"start":{"line":626,"column":6},"end":{"line":629,"column":7}},"metadata":{"polymer":{"readOnly":true}}},{"name":"_internalLabelMargin","type":"number","description":"","privacy":"protected","sourceRange":{"start":{"line":630,"column":6},"end":{"line":633,"column":7}},"metadata":{"polymer":{}},"defaultValue":"150"},{"name":"startColorIndex","type":"number","description":"Specifies which seriesColorOrder color to start with for assigning the series color","privacy":"public","sourceRange":{"start":{"line":637,"column":6},"end":{"line":640,"column":7}},"metadata":{"polymer":{}},"defaultValue":"0"},{"name":"_axisRegisterIconColor","type":"string","description":"","privacy":"protected","sourceRange":{"start":{"line":656,"column":6},"end":{"line":659,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"transparent\""},{"name":"_flipAxisLogic","type":"boolean","description":"compared with parallel coordinates, radar's max and mins on an axis are flipped.\n      So extentsData calcs need to know to reverse the vals.","privacy":"protected","sourceRange":{"start":{"line":718,"column":4},"end":{"line":718,"column":24}},"metadata":{"polymer":{}}}],"methods":[{"name":"hasUndefinedArguments","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":35,"column":2},"end":{"line":44,"column":3}},"metadata":{},"params":[{"name":"args"}],"inheritedFrom":"PxVisBehavior.observerCheck"},{"name":"detached","description":"","privacy":"protected","sourceRange":{"start":{"line":720,"column":4},"end":{"line":722,"column":5}},"metadata":{},"params":[]},{"name":"generateRandomID","description":"Generates a random id string.\n\nTakes a string prefix, then adds 10 random chars","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":68,"column":2},"end":{"line":87,"column":3}},"metadata":{},"params":[{"name":"baseStr"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"cloneSVGElem","description":"Clones a SVG elem and sets a component property with the d3 instance of that clone.\n\nThe intent of this is to clone the high level 'g' elem we draw to and attach it.\nThe draw order matters  in SVG and we want the some stuff to appear on top of everything else\nSince we cannot easily ensure it draw order with components, we can stick top level items in a different 'g' that we know is drawn after the main 'g'","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":98,"column":2},"end":{"line":110,"column":3}},"metadata":{},"params":[{"name":"svg"},{"name":"prop"},{"name":"onBottom"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_drawSVGOnCanvas","description":"Draws the current svg into a canvas","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":115,"column":2},"end":{"line":173,"column":3}},"metadata":{},"params":[{"name":"canvas"},{"name":"elem"},{"name":"callback"},{"name":"x"},{"name":"y"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_drawCanvg","description":"Uses canvg third party to \"translate\" svg to javascript instructions\nfor the canvas, and draw on the canvas","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":178,"column":2},"end":{"line":186,"column":3}},"metadata":{},"params":[{"name":"canvas"},{"name":"svgData"},{"name":"x"},{"name":"y"},{"name":"callback"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_nativeDrawSvgOnCanvas","description":"Tries to draw the SVG to canvas and if that doesnt work, falls back on a failure callback","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":191,"column":2},"end":{"line":221,"column":3}},"metadata":{},"params":[{"name":"canvas"},{"name":"svgData"},{"name":"x"},{"name":"y"},{"name":"sucessCallback"},{"name":"failureCallback"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_getSVGOuterHtml","description":"fix for IE to get outer HTML","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":225,"column":2},"end":{"line":272,"column":3}},"metadata":{},"params":[{"name":"svg"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"attached","description":"","privacy":"protected","sourceRange":{"start":{"line":737,"column":4},"end":{"line":746,"column":5}},"metadata":{},"params":[]},{"name":"_renderToSvgChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":362,"column":2},"end":{"line":377,"column":3}},"metadata":{},"params":[{"name":"renderToSvg"}],"inheritedFrom":"PxVisBehaviorD3.canvas"},{"name":"_getIsMultiY","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":469,"column":2},"end":{"line":475,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"_processYValues","description":"This functions process Y axis and applies the result to some variable.\nIf in single Y it just run the function and assign the result to `result`, if multi Y\nit runs the function for each axis and stores the result against the axis key\non `result`","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":482,"column":2},"end":{"line":500,"column":3}},"metadata":{},"params":[{"name":"callback"}],"inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"_isValidData","description":"returns true if the data is valid: non NaN, null or undefined","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":354,"column":4},"end":{"line":357,"column":3}},"metadata":{},"params":[{"name":"d"}],"inheritedFrom":"PxVisBehavior.dataChecks"},{"name":"_isDataNotNull","description":"returns true if the data is not null","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":362,"column":2},"end":{"line":365,"column":3}},"metadata":{},"params":[{"name":"d"}],"inheritedFrom":"PxVisBehavior.dataChecks"},{"name":"_isObjEmpty","description":"Checks to see if an object is empty","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":834,"column":2},"end":{"line":842,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_isD3Empty","description":"Checks to see if an d3 obj is empty","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":850,"column":2},"end":{"line":855,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_doesD3HaveValues","description":"Checks to see if an d3 obj has something","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":863,"column":2},"end":{"line":868,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_doesObjHaveValues","description":"Checks to see if an object has values","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":876,"column":2},"end":{"line":885,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_hasProps","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":887,"column":2},"end":{"line":899,"column":3}},"metadata":{},"params":[{"name":"obj"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_isVarDefined","description":"Checks to see if an object is defined","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":907,"column":2},"end":{"line":912,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_isVarUndefined","description":"Checks to see if an object is defined","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":919,"column":2},"end":{"line":924,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_escapeCssSelector","description":"escapes '.' in css selectors so that we can appropriately select stuff with dots in thei ids","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":929,"column":2},"end":{"line":931,"column":3}},"metadata":{},"params":[{"name":"selector"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_checkThemeVariable","description":"Checks if a theme variable exists, if so, returns the theme value, if not, returns the default","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":936,"column":2},"end":{"line":953,"column":3}},"metadata":{},"params":[{"name":"varName"},{"name":"defaultValue"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_hexToRgb","description":"converts a hex to rgb color","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":958,"column":2},"end":{"line":969,"column":3}},"metadata":{},"params":[{"name":"hex"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_binarySearch","description":"Binary search through sorted chartData","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":974,"column":2},"end":{"line":992,"column":3}},"metadata":{},"params":[{"name":"data"},{"name":"key"},{"name":"val"},{"name":"lowerIndex"},{"name":"upperIndex"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_fuzzyBinarySearch","description":"Binary search through sorted chartData returning all vals within a window","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":997,"column":2},"end":{"line":1015,"column":3}},"metadata":{},"params":[{"name":"data"},{"name":"key"},{"name":"lowerFuzz"},{"name":"upperFuzz"},{"name":"lowerIndex"},{"name":"upperIndex"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_getAdjacentValues","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1017,"column":2},"end":{"line":1047,"column":3}},"metadata":{},"params":[{"name":"data"},{"name":"key"},{"name":"lowerFuzz"},{"name":"upperFuzz"},{"name":"lowerIndex"},{"name":"upperIndex"},{"name":"index"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"clone","description":"deep-copy object into newObject","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1052,"column":2},"end":{"line":1065,"column":3}},"metadata":{},"params":[{"name":"object"},{"name":"newObject"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"isVarNumber","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1067,"column":2},"end":{"line":1069,"column":3}},"metadata":{},"params":[{"name":"n"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_setXScale","description":"Sets the x scale to a single ordinal, radial scale","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":70,"column":4},"end":{"line":86,"column":5}},"metadata":{},"params":[{"name":"radius"},{"name":"forceRecreation"}],"inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"_setYScale","description":"Sets the y scale to multiple linear scales","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":92,"column":4},"end":{"line":106,"column":5}},"metadata":{},"params":[{"name":"radius"},{"name":"centerOffset"},{"name":"forceRecreation"}],"inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"_recreateScales","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":108,"column":4},"end":{"line":117,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"_generateChartExtents","description":"Find overall data max and min","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":123,"column":4},"end":{"line":163,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"_setDomain","description":"Calculates and Sets the x and y domain after data loads\n\nhttps://github.com/mbostock/d3/wiki/API-Reference","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":172,"column":6},"end":{"line":187,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"_updateDomain","description":"When the domain gets set via a user interaction, set the scale function to use the new domain","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":194,"column":4},"end":{"line":199,"column":5}},"metadata":{},"params":[{"name":"axesDomain"}],"inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"getPixelFromData","description":"Gets pixel values for data value relating to an axis. data is a number\nif margin is specified it will use those to adjust the pixel values\ninstead of the normal `margin` property","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":206,"column":5},"end":{"line":223,"column":5}},"metadata":{},"params":[{"name":"data"},{"name":"axis"},{"name":"margin"}],"inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"getDataFromPixel","description":"Gets data value for pixel value relating to an axis. Pixel val is a\nY pixel value relating to an axis.\nIt returns an array with the axis and the value: [axis, value]\nplease note that the values returned have no guarantee to match any\nactual chart data, this is just a conversion based on pixel","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":232,"column":4},"end":{"line":234,"column":5}},"metadata":{},"params":[{"name":"pixelVal"},{"name":"axis"}],"inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"_pixelRequest","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":236,"column":4},"end":{"line":239,"column":5}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"_rangeChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":691,"column":2},"end":{"line":722,"column":3}},"metadata":{},"params":[{"name":"range"}],"inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"name":"getImage","description":"Takes a graphic \"snapshot\" of the component and pass results through a callback:\n- a canvas containing the graphical snapshot\n- a png base 64 data uri\n\ncallback object:\n{\n canvas: theCanvasObject\n image: \"data:image/png;base64;iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACN...\"\n}\n\nthe data uri can be used to save the image and the canvas object to do\nfurther processing, such as combining different elements snapshot into one image","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":639,"column":4},"end":{"line":710,"column":5}},"metadata":{},"params":[{"name":"callback"},{"name":"renderLegend"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"_finishGetImage","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":711,"column":4},"end":{"line":716,"column":5}},"metadata":{},"params":[{"name":"callback"},{"name":"canvas"},{"name":"renderLegend"},{"name":"drawingWidth"},{"name":"drawingHeight"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"_getRegisterWidth","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":717,"column":4},"end":{"line":751,"column":5}},"metadata":{},"params":[{"name":"drawingWidth"},{"name":"drawingHeight"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"_drawRegister","description":"Draws a fake representation of the registers","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":755,"column":4},"end":{"line":783,"column":5}},"metadata":{},"params":[{"name":"context"},{"name":"startWidth"},{"name":"drawingHeight"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"created","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3215,"column":2},"end":{"line":3236,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehavior.updateStylesOverride"},{"name":"notifyResize","description":"Can be called to manually notify a resizable and its descendant\nresizables of a resize change.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":80,"column":4},"end":{"line":92,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"assignParentResizable","description":"Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":98,"column":4},"end":{"line":110,"column":5}},"metadata":{},"params":[{"name":"parentResizable"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"stopResizeNotificationsFor","description":"Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":116,"column":4},"end":{"line":123,"column":5}},"metadata":{},"params":[{"name":"target"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"resizerShouldNotify","description":"This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":134,"column":4},"end":{"line":136,"column":5}},"metadata":{},"params":[{"name":"element","type":"HTMLElement","description":"A candidate descendant element that\nimplements `IronResizableBehavior`."}],"return":{"type":"boolean","desc":"True if the `element` should be notified of resize."},"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_onDescendantIronResize","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":138,"column":4},"end":{"line":150,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_fireResize","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":152,"column":4},"end":{"line":154,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_onIronRequestResizeNotifications","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":156,"column":4},"end":{"line":166,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_parentResizableChanged","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":168,"column":4},"end":{"line":172,"column":5}},"metadata":{},"params":[{"name":"parentResizable"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_notifyDescendant","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":174,"column":4},"end":{"line":185,"column":5}},"metadata":{},"params":[{"name":"descendant"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_requestResizeNotifications","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":187,"column":4},"end":{"line":232,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_findParent","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":234,"column":4},"end":{"line":246,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_preventResizeChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":854,"column":4},"end":{"line":862,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"_getChartWrapperClass","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":863,"column":4},"end":{"line":887,"column":5}},"metadata":{},"params":[{"name":"hor"},{"name":"vert"}],"inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"_onIronResize","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":889,"column":4},"end":{"line":897,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"_truncateName","description":"_truncateName takes a string and string length [optional].\nReturns a truncated string with the middle replaced by an ellipsis. The ellipsis does not count towards the total character count.\nFollows these truncation principles: http://www.gesdh.com/predix/product/principles/truncation/\nExample: LNG_BAH_HOT_EFFECTIVENESS_CORE8 --> LNG_B...CORE8\n\nLength cannot be less than 2 characters.\nDefault length is 10 characters.\n\nIf the string is less than or equal to the length or the length is invalid, returns the original string.","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":195,"column":2},"end":{"line":215,"column":3}},"metadata":{},"params":[{"name":"name","type":"String","description":", {Integer} len"},{"name":"len"}],"return":{"type":"String","desc":"truncatedString"},"inheritedFrom":"PxVisBehavior.truncating"},{"name":"addClipPath","description":"Add the clip-path attr to the element","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":805,"column":2},"end":{"line":809,"column":3}},"metadata":{},"params":[{"name":"elem"}],"inheritedFrom":"PxVisBehaviorD3.clipPath"},{"name":"_isLoadedOnPage","description":"checks if the chart is attached, otherwise waits and recalls","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1036,"column":4},"end":{"line":1043,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.waitForAttach"},{"name":"_computeSmallerSide","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1386,"column":2},"end":{"line":1392,"column":3}},"metadata":{},"params":[{"name":"width"},{"name":"height"}],"inheritedFrom":"PxVisBehaviorChart.circleChart"},{"name":"_sizeChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1393,"column":2},"end":{"line":1441,"column":3}},"metadata":{},"params":[{"name":"_smallerSide"},{"name":"margin"},{"name":"internalMargin"}],"inheritedFrom":"PxVisBehaviorChart.circleChart"},{"name":"_applyConfigToElement","description":"Applies the config object to the element. Each key in the config object\nis the name of the property to be applied","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":919,"column":4},"end":{"line":937,"column":5}},"metadata":{},"params":[{"name":"config"},{"name":"element"}],"inheritedFrom":"PxVisBehaviorChart.subConfiguration"},{"name":"_getColor","description":"Helper function to return the correct color for a particular index.","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":229,"column":2},"end":{"line":234,"column":3}},"metadata":{},"params":[{"name":"i"}],"inheritedFrom":"PxColorsBehavior.getSeriesColors"},{"name":"_calcIndex","description":"Helper function to calculate the index. When we run out of indcies, it loops back over valid indicies.","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":239,"column":2},"end":{"line":241,"column":3}},"metadata":{},"params":[{"name":"i"},{"name":"l"}],"inheritedFrom":"PxColorsBehavior.getSeriesColors"},{"name":"getToolbar","description":"Convenience method for searching for a toolbar in a chart.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":36,"column":2},"end":{"line":38,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.searchToolbar"},{"name":"_returnAllKeys","description":"Goes through an array of objects and gathers all unique keys. Returns a list of keys\n\nExpects and array of objects\n\nReturns an array of strings","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":61,"column":2},"end":{"line":71,"column":3}},"metadata":{},"params":[{"name":"d"}],"inheritedFrom":"PxVisBehaviorChart.chartCommonMethods"},{"name":"_createLayers","description":"Creates <g> layers","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1499,"column":2},"end":{"line":1522,"column":3}},"metadata":{},"params":[{"name":"svg"},{"name":"numberOfLayers"},{"name":"propName"}],"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"_createLayersOnce","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1523,"column":2},"end":{"line":1534,"column":3}},"metadata":{},"params":[{"name":"svg"},{"name":"numberOfLayers"},{"name":"generateLayers"},{"name":"propName"}],"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"ready","description":"","privacy":"protected","sourceRange":{"start":{"line":724,"column":4},"end":{"line":735,"column":5}},"metadata":{},"params":[]},{"name":"syncCSSTheme","description":"Retrieves the CSS style variables set on this element and applies them\nto the appropriate properties, triggering a redraw.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":71,"column":4},"end":{"line":76,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_debounceSyncCSSTheme","description":"Debounced function call for `syncCSSTheme` method. Loops through available\nstyle variables to apply them to appropriate objects.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":85,"column":4},"end":{"line":108,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_applyStyleVariables","description":"Called when there is at least one style variable applied (the first is\nexpected to be named `--px-vis-series-color-0`). Loops through each\nstyle variable in the format `--px-vis-series-color-[n]` and applies\nthe resulting values and series color order to the element. Stops looping\nthrough style variables when it finds a gap.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":120,"column":4},"end":{"line":165,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_colorHexToRgb","description":"Converts a hex-format color to RGB.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":176,"column":4},"end":{"line":186,"column":5}},"metadata":{},"params":[{"name":"hex","type":"String","description":"A color in hex format"}],"return":{"type":"String","desc":"A color in RGB format"},"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_checkIfDevSetSeriesColorOrder","description":"Compares seriesColorOrder property value to the seriesColorOrder to determine if the dev set their own override.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":195,"column":4},"end":{"line":209,"column":5}},"metadata":{},"params":[],"return":{"type":"Boolean","desc":"true if dev set seriesColorOrder"},"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_getHideClass","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1060,"column":2},"end":{"line":1068,"column":3}},"metadata":{},"params":[{"name":"hide"}],"inheritedFrom":"PxVisBehaviorChart.getHideClass"},{"name":"_computedAxisRegisterConf","description":"configures the register config and empty data series","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2509,"column":2},"end":{"line":2540,"column":3}},"metadata":{},"params":[{"name":"axes"},{"name":"completeSeriesConfig"}],"inheritedFrom":"PxVisBehaviorChart.axisRegister"},{"name":"_ttDataHaveSameSeries","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2542,"column":2},"end":{"line":2557,"column":3}},"metadata":{},"params":[{"name":"data1"},{"name":"data2"}],"inheritedFrom":"PxVisBehaviorChart.axisRegister"},{"name":"_buildAxisTooltipData","description":"Resuses existing register dataset for series names and adds or removes values","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2563,"column":2},"end":{"line":2601,"column":3}},"metadata":{},"params":[{"name":"values"},{"name":"time"}],"inheritedFrom":"PxVisBehaviorChart.axisRegister"},{"name":"_computeCategoryRegisterConfig","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2638,"column":2},"end":{"line":2680,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.categoryRegister"},{"name":"_computeHideCategoryRegister","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2681,"column":2},"end":{"line":2687,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.categoryRegister"},{"name":"_categoryRegisterConfigChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2722,"column":2},"end":{"line":2728,"column":3}},"metadata":{},"params":[{"name":"conf"}],"inheritedFrom":"PxVisBehaviorChart.categoryAndAxisRegisterConfigs"},{"name":"_axisRegisterConfigChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2729,"column":2},"end":{"line":2735,"column":3}},"metadata":{},"params":[{"name":"conf"}],"inheritedFrom":"PxVisBehaviorChart.categoryAndAxisRegisterConfigs"},{"name":"_actionRequest","description":"Runs a custom function within the context of the chart","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2035,"column":2},"end":{"line":2046,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.actionRequest"},{"name":"_eventRequest","description":"Fires a custom event within the context of the chart","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2050,"column":2},"end":{"line":2056,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.actionRequest"},{"name":"_computeShowTooltip","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2192,"column":2},"end":{"line":2198,"column":3}},"metadata":{},"params":[{"name":"showTooltip"},{"name":"_internalShowTooltip"}],"inheritedFrom":"PxVisBehaviorChart.showTooltip"},{"name":"_createMeasurementCanvas","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2321,"column":2},"end":{"line":2332,"column":3}},"metadata":{},"params":[{"name":"width"},{"name":"height"},{"name":"font"}],"inheritedFrom":"PxVisBehavior.measureText"},{"name":"_measureTextOnCanvas","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2334,"column":2},"end":{"line":2343,"column":3}},"metadata":{},"params":[{"name":"text"}],"inheritedFrom":"PxVisBehavior.measureText"},{"name":"_renderToCanvasChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":403,"column":2},"end":{"line":418,"column":3}},"metadata":{},"params":[{"name":"renderToCanvas"}],"inheritedFrom":"PxVisBehaviorD3.renderToCanvas"},{"name":"_panningStarted","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":77,"column":2},"end":{"line":87,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"_panningStopped","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":89,"column":2},"end":{"line":93,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"_initializeRendererTypeObject","description":"Creates an object with all renderer types and a default value for each","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":253,"column":2},"end":{"line":261,"column":3}},"metadata":{},"params":[{"name":"initialVal"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_updateTargetProperty","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":263,"column":2},"end":{"line":280,"column":3}},"metadata":{},"params":[{"name":"e"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_registerDrawingElement","description":"Elements wanting to use the renderer need to fire an event which\nwill be processed here","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":286,"column":2},"end":{"line":296,"column":3}},"metadata":{},"params":[{"name":"e"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_unregisterDrawingElement","description":"Elements wanting to use the renderer need to fire an event (on detached)\nwhich will be processed here","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":302,"column":2},"end":{"line":330,"column":3}},"metadata":{},"params":[{"name":"e"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderSeriesOnTop","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":337,"column":2},"end":{"line":369,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderTypedContext","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":371,"column":2},"end":{"line":404,"column":3}},"metadata":{},"params":[{"name":"renderType"},{"name":"canvasesToClear"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderChartData","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":406,"column":2},"end":{"line":416,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderFilteredChartData","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":418,"column":2},"end":{"line":428,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderHighlight","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":430,"column":2},"end":{"line":440,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderMarkers","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":442,"column":2},"end":{"line":447,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderAllLines","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":449,"column":2},"end":{"line":476,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderData","description":"Initial entry point, debouncing as needed or cancel","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":484,"column":2},"end":{"line":501,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderDataDebounced","description":"Ensure we the basic conditions for allowign rendering\nand start it","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":507,"column":2},"end":{"line":516,"column":3}},"metadata":{},"params":[{"name":"ctx"},{"name":"allowCanvasClearing"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_initializeCanvasRendering","description":"Resets var relating to 1 complete rendering, call initializeDrawingSession\non all rendering targets and kick the process","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":522,"column":2},"end":{"line":544,"column":3}},"metadata":{},"params":[{"name":"ctx"},{"name":"allowCanvasClearing"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_processCanvasRendering","description":"Called each frame.\n- Updates previous frame timings if there was one\n- Render what can be in the current frame\n- Exit or wait for next frame","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":552,"column":2},"end":{"line":589,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_processCanvasOneFrame","description":"Rendering process during one frame. Calculate how many points can be\nrendered for the current target an render those. Keep rendering next\ntargets if we have enough time, based on same process","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":596,"column":2},"end":{"line":637,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_updatePreviousFrameTiming","description":"Updates stats of the previous frame: how many points have been\nrendered per type and how long it took","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":643,"column":2},"end":{"line":675,"column":3}},"metadata":{},"params":[{"name":"ctx"},{"name":"now"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_getCurrentCanvasRenderingTarget","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":677,"column":2},"end":{"line":684,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_firstCanvasRender","description":"Used when rendering a target we don't have stats about. Assumes a first\nnumber of points to render, measure that and render more if we think we can","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":690,"column":2},"end":{"line":734,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderTargetToCanvas","description":"Tries to render toRender number of points for the current target.\nreturns the number of points actually rendered and how much of the budget\nthis used","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":741,"column":2},"end":{"line":772,"column":3}},"metadata":{},"params":[{"name":"toRender"},{"name":"ctx"},{"name":"currentBudget"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_calculatePointsAllowance","description":"Calculates how many points we can render in one frame for the\ncontext current target. Based on stats of previous rendering of same type.\nReturns -1 if we don't have stats about this type of rendering","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":779,"column":2},"end":{"line":821,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_targetTimingChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":823,"column":2},"end":{"line":825,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_combineMutes","description":"Takes the muted series from the axis brush and the selected domain and returns a merged copy of them","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2980,"column":2},"end":{"line":3013,"column":3}},"metadata":{},"params":[{"name":"m1"},{"name":"m2"}],"inheritedFrom":"PxVisBehaviorChart.combineMutes"},{"name":"_timeDomainChartData","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3270,"column":2},"end":{"line":3280,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehavior.timeDomain"},{"name":"_extentsDataRouter","description":"FIXME import extentsAction","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1669,"column":2},"end":{"line":1689,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.extentsDataRouter"},{"name":"_addToMutedExtents","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3040,"column":2},"end":{"line":3044,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.multiAxisMuting"},{"name":"_calcMutedSeries","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3046,"column":2},"end":{"line":3059,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.multiAxisMuting"},{"name":"_calcSingleMutedSeries","description":"calc muted series based on the extents","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3064,"column":2},"end":{"line":3104,"column":3}},"metadata":{},"params":[{"name":"extents"},{"name":"dim"},{"name":"series"},{"name":"brushDomains"}],"inheritedFrom":"PxVisBehaviorChart.multiAxisMuting"},{"name":"deleteMutedBrushes","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3106,"column":2},"end":{"line":3108,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.multiAxisMuting"},{"name":"zoomIn","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1733,"column":2},"end":{"line":1736,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"zoomOut","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1737,"column":2},"end":{"line":1740,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"_intSpaceStartPan","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1741,"column":2},"end":{"line":1743,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"_intSpaceStopPan","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1744,"column":2},"end":{"line":1746,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"zoom","description":"Sets the selectedDomain to the drawn zoom and shows the button","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3132,"column":2},"end":{"line":3137,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.multiAxisZoom"},{"name":"pan","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3139,"column":2},"end":{"line":3141,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.multiAxisZoom"},{"name":"_saveZoomState","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3143,"column":2},"end":{"line":3149,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.multiAxisZoom"},{"name":"_zoomOrPan","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3151,"column":2},"end":{"line":3175,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.multiAxisZoom"},{"name":"_autoZoom","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3177,"column":2},"end":{"line":3189,"column":3}},"metadata":{},"params":[{"name":"isZoomIn"}],"inheritedFrom":"PxVisBehaviorChart.multiAxisZoom"},{"name":"undoZoom","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3191,"column":2},"end":{"line":3195,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.multiAxisZoom"},{"name":"resetZoom","description":"resets the extents","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3201,"column":2},"end":{"line":3208,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.multiAxisZoom"},{"name":"_setupSizingListener","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3264,"column":2},"end":{"line":3272,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.tooltipSizing"},{"name":"_getSizing","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3274,"column":2},"end":{"line":3276,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.tooltipSizing"},{"name":"_getImmediateSizing","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3278,"column":2},"end":{"line":3289,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.tooltipSizing"},{"name":"lasso","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1592,"column":2},"end":{"line":1600,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.multiAxisLasso"},{"name":"_searchForDataInArea","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1602,"column":2},"end":{"line":1618,"column":3}},"metadata":{},"params":[{"name":"dim"},{"name":"y"},{"name":"d"},{"name":"ext"}],"inheritedFrom":"PxVisBehaviorChart.multiAxisLasso"},{"name":"_calcLassoData","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1620,"column":2},"end":{"line":1632,"column":3}},"metadata":{},"params":[{"name":"dim"}],"inheritedFrom":"PxVisBehaviorChart.multiAxisLasso"},{"name":"_resetLasso","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1634,"column":2},"end":{"line":1640,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.multiAxisLasso"},{"name":"_heightChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2428,"column":2},"end":{"line":2434,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_computeVerticalRegisterHeight","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2435,"column":2},"end":{"line":2465,"column":3}},"metadata":{},"params":[{"name":"deductions"}],"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_computeRegisterHeight","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2467,"column":2},"end":{"line":2473,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_changePage","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2774,"column":2},"end":{"line":2785,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"_resetPages","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2787,"column":2},"end":{"line":2798,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"_updateRegisterData","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2841,"column":2},"end":{"line":2851,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.registerPagnationMultiAxis"},{"name":"formatTimestamp","description":"Method that takes a datetime string, timezone string, and a formatting string. Returns a formated datetime string.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":105,"column":2},"end":{"line":115,"column":3}},"metadata":{},"params":[{"name":"datetime"},{"name":"timezone"},{"name":"format"}],"return":{"type":"formatedDatetimeString"},"inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"_getTooltipToUse","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3400,"column":2},"end":{"line":3409,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_createTooltip","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3411,"column":2},"end":{"line":3420,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_centralTooltipDisplayRequest","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3422,"column":2},"end":{"line":3449,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_centralTooltipCancelRequest","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3451,"column":2},"end":{"line":3467,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_centralTooltipLockRequest","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3469,"column":2},"end":{"line":3475,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_centralTooltipLockCancel","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3477,"column":2},"end":{"line":3482,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_resizeTooltip","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3484,"column":2},"end":{"line":3488,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_updateTooltipProps","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3490,"column":2},"end":{"line":3512,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_tooltipConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":748,"column":4},"end":{"line":753,"column":5}},"metadata":{},"params":[{"name":"conf"}]},{"name":"_toolbarConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":754,"column":4},"end":{"line":759,"column":5}},"metadata":{},"params":[{"name":"conf"}]},{"name":"_highlighterConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":760,"column":4},"end":{"line":766,"column":5}},"metadata":{},"params":[{"name":"conf"}]},{"name":"_setDomainChanged","description":"Event listener resetting domainChanged when fired from elsewhere in the tree","privacy":"protected","sourceRange":{"start":{"line":770,"column":4},"end":{"line":775,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_doWeHaveChartData","description":"Computed value saying if we have chart data","privacy":"protected","sourceRange":{"start":{"line":779,"column":4},"end":{"line":787,"column":5}},"metadata":{},"params":[{"name":"cD"}]},{"name":"_getExtendedCenter","description":"","privacy":"protected","sourceRange":{"start":{"line":788,"column":4},"end":{"line":794,"column":5}},"metadata":{},"params":[{"name":"_center"},{"name":"_extendedWidth"}]},{"name":"_measureLabels","description":"","privacy":"protected","sourceRange":{"start":{"line":795,"column":4},"end":{"line":820,"column":5}},"metadata":{},"params":[]},{"name":"_processSizing","description":"Sets several base vars based on sizing","privacy":"protected","sourceRange":{"start":{"line":824,"column":4},"end":{"line":863,"column":5}},"metadata":{},"params":[]},{"name":"_calcCenter","description":"","privacy":"protected","sourceRange":{"start":{"line":865,"column":4},"end":{"line":879,"column":5}},"metadata":{},"params":[]},{"name":"_computeAxes","description":"Method to compute the axes to use. It will use all the keys in the data except those specified in skipKeys","privacy":"protected","sourceRange":{"start":{"line":885,"column":4},"end":{"line":919,"column":5}},"metadata":{},"params":[{"name":"cD"},{"name":"sK"}]},{"name":"_computeDimensions","description":"Method to compute the dimensions to use by using axes and mutedAxes.","privacy":"protected","sourceRange":{"start":{"line":925,"column":4},"end":{"line":943,"column":5}},"metadata":{},"params":[{"name":"axes"},{"name":"muted"}]},{"name":"_generateSeriesConfig","description":"Creates the series configuration file","privacy":"protected","sourceRange":{"start":{"line":949,"column":4},"end":{"line":1007,"column":5}},"metadata":{},"params":[]},{"name":"_setMutedSeriesDomain","description":"Adds data to a muted series based on the selected domain","privacy":"protected","sourceRange":{"start":{"line":1013,"column":4},"end":{"line":1031,"column":5}},"metadata":{},"params":[{"name":"sd"}]},{"name":"_resizeCalculations","description":"Resizes the chart based on a container resize if prevent-resize is false (default)\n\nCan also be called manually to force a chart resize to container.","privacy":"protected","sourceRange":{"start":{"line":1038,"column":4},"end":{"line":1072,"column":5}},"metadata":{},"params":[]},{"name":"_calcGridWidth","description":"Returns the width for the gridlines","privacy":"protected","sourceRange":{"start":{"line":1077,"column":4},"end":{"line":1080,"column":5}},"metadata":{},"params":[]},{"name":"_calcGridSvg","description":"Retruns a g elem for the grid to draw to","privacy":"protected","sourceRange":{"start":{"line":1085,"column":4},"end":{"line":1096,"column":5}},"metadata":{},"params":[]},{"name":"addToMutedAxes","description":"Imperatively mute an axis or group of axes.\n\nThis function both addes the axes to the mutedAxes list and fires a notifyPath\n\nCan pass a single axis id or an array of axes ids","privacy":"public","sourceRange":{"start":{"line":1104,"column":5},"end":{"line":1106,"column":6}},"metadata":{},"params":[{"name":"a"}]},{"name":"removeFromMutedAxes","description":"Imperatively mute an axis or group of axes.\n\nThis function both addes the axes to the mutedAxes list and fires a notifyPath\n\nCan pass a single axis id or an array of axes ids","privacy":"public","sourceRange":{"start":{"line":1114,"column":6},"end":{"line":1116,"column":7}},"metadata":{},"params":[{"name":"a"}]},{"name":"_changeMutedAxes","description":"Helper function to imperatively mute/unmute an axis or group of axes.","privacy":"protected","sourceRange":{"start":{"line":1121,"column":5},"end":{"line":1143,"column":6}},"metadata":{},"params":[{"name":"a"},{"name":"bool"}]},{"name":"_muteUnmute","description":"Mute/unmute axis on register requests","privacy":"protected","sourceRange":{"start":{"line":1148,"column":4},"end":{"line":1157,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_calcTooltip","description":"","privacy":"protected","sourceRange":{"start":{"line":1159,"column":4},"end":{"line":1172,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_hideTooltip","description":"","privacy":"protected","sourceRange":{"start":{"line":1174,"column":4},"end":{"line":1189,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_doTooltipCalcs","description":"","privacy":"protected","sourceRange":{"start":{"line":1191,"column":4},"end":{"line":1220,"column":5}},"metadata":{},"params":[{"name":"d"}]},{"name":"_calcCrosshair","description":"","privacy":"protected","sourceRange":{"start":{"line":1222,"column":4},"end":{"line":1225,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_hideCrosshair","description":"","privacy":"protected","sourceRange":{"start":{"line":1227,"column":4},"end":{"line":1230,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_langChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":1231,"column":4},"end":{"line":1237,"column":5}},"metadata":{},"params":[]},{"name":"_setTimeDomain","description":"REMOVE on next Major","privacy":"protected","sourceRange":{"start":{"line":1241,"column":4},"end":{"line":1248,"column":5}},"metadata":{},"params":[]},{"name":"_setTimeKey","description":"","privacy":"protected","sourceRange":{"start":{"line":1250,"column":4},"end":{"line":1254,"column":5}},"metadata":{},"params":[]},{"name":"_setExtentsData","description":"","privacy":"protected","sourceRange":{"start":{"line":1256,"column":4},"end":{"line":1266,"column":5}},"metadata":{},"params":[{"name":"e"}]},{"name":"_mutedCategoriesChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":1268,"column":4},"end":{"line":1275,"column":5}},"metadata":{},"params":[]},{"name":"_axisDragged","description":"","privacy":"protected","sourceRange":{"start":{"line":1277,"column":4},"end":{"line":1279,"column":5}},"metadata":{},"params":[]}],"staticMethods":[],"demos":[{"url":"index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":401,"column":10},"end":{"line":1280,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"width","description":"The width of the elem; generally the width of the charting area for most components","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":63,"column":4},"end":{"line":66,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehavior.baseSize"},{"name":"height","description":"The height of the component; generally the height of the charting area for most components.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":72,"column":4},"end":{"line":75,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehavior.baseSize"},{"name":"margin","description":"Defines the base margin for the chart. Calcs are run to add to the margin to accommodate axes and other elements which exist within the SVG frame, but outside the chart frame.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":110,"column":4},"end":{"line":120,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.margins"},{"name":"offset","description":"An optional offset for a variety of elements","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":143,"column":4},"end":{"line":148,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.sizing"},{"name":"svg","description":"svg is a holder for the d3 instantiated svg container to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":46,"column":4},"end":{"line":49,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"px-svg-elem","description":"The SVG element inside the chart - not a D3 selected element.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":54,"column":4},"end":{"line":57,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"px-svg-elem-lower","description":"The SVG element inside the chart - not a D3 selected element. Used when there are two svgs in a chart","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":293,"column":4},"end":{"line":296,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.svgLower"},{"name":"canvas-layers-config","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2760,"column":4},"end":{"line":2763,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.canvasLayersConfig"},{"name":"canvas-context","description":"canvasContext is a holder for the instantiated canvas context to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":319,"column":4},"end":{"line":322,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"canvas-layers","description":"An array of the generated layers","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":328,"column":4},"end":{"line":332,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"render-to-svg","description":"Boolean to specify if drawings should render to svg instead of canvas","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":354,"column":4},"end":{"line":357,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorD3.canvas"},{"name":"x","description":"x is a holder for the d3 instantiated scale object\nMust be set in the svg component and passed to all components so they know the drawing scale.\nThis can be set declaratively\n\nSee: https://github.com/d3/d3/blob/master/API.md#scales-d3-scale","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":445,"column":4},"end":{"line":448,"column":5}},"metadata":{},"type":"Function","inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"y","description":"y is a holder for the d3 instantiated scale object\nMust be set in the svg component and passed to all components so they know the drawing scale.\nThis can be set declaratively\n\nSee: https://github.com/d3/d3/blob/master/API.md#scales-d3-scale","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":459,"column":4},"end":{"line":462,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"is-multi-y","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":463,"column":4},"end":{"line":467,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"chart-data","description":"container for the data object that drives the chart / component\nGenerally loaded with an iron-ajax tag (but doesnt have to be)\nThis can be set declaratively","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":390,"column":6},"end":{"line":392,"column":7}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.dataset"},{"name":"axes","description":"Represents all axes plotted by the chart, including muted ones.\nIt doesn't guarantee to have the same order as the current visual\nrepresentation.\nCan be set by the developer to define which axes to plot","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1586,"column":4},"end":{"line":1588,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.dimensions"},{"name":"dimensions","description":"An array of dimensions (axes) which the chart uses. This array represents\nthe current state of all axes: muted axes won't be included and the\narray is ordered based on the current visual representation.\nDo not set at a chart level, only read","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1595,"column":4},"end":{"line":1598,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.dimensions"},{"name":"series-key","description":"A `Required` dev set string which defines which data key to use for the series lines\n\n This depends on your data and could be *x*, *Timestamp*, ect.","sourceRange":{"start":{"line":499,"column":6},"end":{"line":502,"column":7}},"metadata":{},"type":"string"},{"name":"chart-extents","description":"Developer set chart extents for the chart. The chart will draw to whatever values are specified in the chartExtents.\nSetting this and not using \"dynamic\" will prevent the chart from\nhaving to parse the data to find the extents and therefore improve\nperformance for initial rendering\n```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nTo force the chart to calculate based on data, use \"dynamic\".\n```\n {\n     \"x\": [0,\"dynamic\"],\n     \"y\": [-10,\"dynamic\"],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1191,"column":4},"end":{"line":1194,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.chartExtents"},{"name":"center-offset","description":"Used in a radial chart to provide a hole in the center of the chart","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":1162,"column":4},"end":{"line":1166,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorD3.radialAxisConfig"},{"name":"domain-changed","description":"Number which increments up when the domain(s) has(have) changed.\n\n0 (false) indicates that domains have not been set.\n\nServes as a trigger for many elements to redraw.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":527,"column":4},"end":{"line":531,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorD3.domainUpdate"},{"name":"selected-domain","description":"New chart extents selected by the user\n\nServes as a trigger for the scale component to redefine the chart extents","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":634,"column":4},"end":{"line":640,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.selectedDomain"},{"name":"complete-series-config","description":"A configuration file generated by the chart behavior based on seriesConfig and defaultSeriesConfig.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":414,"column":7},"end":{"line":417,"column":8}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.completeSeriesConfig"},{"name":"muted-series","description":"A list of user selected muted series. Tied declaratively to series components\n\nThe series name is the key and the value is a boolean for whether it is muted or not:\n\n```\n{\n    'seriesId1':true,\n    'seriesId2':false,\n }\n```\n\nIn this example, seriesId1 is muted. seriesId2 was muted, but has been turned back on.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":476,"column":4},"end":{"line":480,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.mutedSeries"},{"name":"hard-mute","description":"Allows for a \"hard\" muting of the series/categories: the\nseries/category won't show up\nin the tooltip anymore, it's tooltip data won't be shown in the register\nand its extents won't be taken into account by the chart","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":487,"column":5},"end":{"line":490,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehavior.mutedSeries"},{"name":"radar","description":"Whether the scale is for radar and should use a scalePoint X scale\ninstead of a scaleLinear","sourceRange":{"file":"../px-vis/px-vis-behavior-scale-radar.html","start":{"line":55,"column":6},"end":{"line":58,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorScale.radar"},{"name":"label-type-size","description":"Defines the base label type size","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":872,"column":4},"end":{"line":875,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorD3.labelTypeSize"},{"name":"redraw-series","description":"Boolean to specify if we should redraw the chart series when we move an axis. More of a chart type by chart type configuration rather than a developer configuration. IE, for charts such as multi-y timeseries, it is unnessary. For charts such as parallel coordinates, it is necessary.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":829,"column":4},"end":{"line":832,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorD3.dynamicRedraw"},{"name":"redraw-elems","description":"The accompanying array of series elements required to redraw.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":836,"column":4},"end":{"line":839,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehaviorD3.dynamicRedraw"},{"name":"dynamic-redraw","description":"Boolean specifing if the lines should redraw as you move the axis or just at the end.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":843,"column":4},"end":{"line":846,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorD3.dynamicRedraw"},{"name":"category-key","description":"A dev set string speciying which key to use as the category to use to color the series lines","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1625,"column":4},"end":{"line":1627,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.categories"},{"name":"categories","description":"A dev set array defining the categories values.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1632,"column":4},"end":{"line":1635,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.categories"},{"name":"common-axis","description":"A boolean specifying if all axes should share the same range","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1658,"column":4},"end":{"line":1661,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehavior.commonAxis"},{"name":"range","description":"Range object defining the time span\n  * Format ISO8601 strings\n```\n{\n   \"from\": \"2013-01-07T22:44:30.652Z\",\n   \"to\" : \"2013-02-04T22:44:30.652Z\"\n}\n```\n\nUpdates and is updated by SelectedDomain","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":672,"column":4},"end":{"line":675,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"name":"prevent-resize","description":"Prevents the chart from automatically resizing to fit its container","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":806,"column":6},"end":{"line":810,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"chart-horizontal-alignment","description":"This allows to decide how the chart\ndrawing will be horizontally aligned when smaller than its container. Values:\n- center\n- left\n- right\n\nif any other value is used then left alignment will be chosen","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":820,"column":6},"end":{"line":823,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"chart-vertical-alignment","description":"This allows to decide how the chart\ndrawing will be vertically aligned when smaller than its container. Values:\n- center\n- top\n- bottom\n\nif any other value is used then top alignment will be chosen","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":833,"column":6},"end":{"line":836,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"debounce-resize-timing","description":"Timing (in ms) to be used for iron resize when the chart auto size\n(preventResize = false)","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":848,"column":6},"end":{"line":851,"column":7}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"truncation-length","description":"Defines if the label should get truncated and to how many characters.\n\nDefault length is 10 characters, not including the ellipsis which gets inserted.\n\nThe length must be at least 2.\n\nTo disable truncation, set the value to -1","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":176,"column":4},"end":{"line":179,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehavior.truncating"},{"name":"tooltip-data","description":"Data reported back by the interaction space component. Displays the series name, values, and timestamp in the register. tooltipData is in the form:\n\n```\n   {\n       \"time\": \"2015-03-25T20:34:47.085Z\",\n       \"hidden\": false,\n       \"series\":[{\n           \"name\":\"seriesId1\",\n           \"coord\":[xCoord1, yCoord1],  //in pixel space\n           \"value\":{\n               \"x\":xVal1,             //in data space\n               \"seriesId1\":yVal1    //in data space\n           }\n       },{\n           \"name\":\"seriesId2\",\n           \"coord\":[xCoord2, yCoord2],  //in pixel space\n           \"value\":{\n               \"x\":xVal2,             //in data space\n               \"seriesId2\":yVal2    //in data space\n           },\n       }],\n       \"mouse\":[ mouseX, mouseY ],   //in pixel space\n       \"xArr\":[xCoord1 , xCoord2],   //in pixel space\n       \"yArr\":[yCoord1 , yCoord2],   //in pixel space\n   }\n```\n\nWhen not hovering on a chart, the tooltipData should still have the series names in order for them to still appear in the register. IE:\n\n```\n   {\n       \"time\": null,\n       \"hidden\": true,\n       \"series\":[{\n           \"name\":\"seriesId1\",\n           \"value\": null\n       },{\n           \"name\":\"seriesName1\",\n           \"value\": null\n       }],\n       \"mouse\": null,\n       \"xArr\": null,\n       \"yArr\": null\n   }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":692,"column":4},"end":{"line":695,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.tooltipData"},{"name":"default-empty-data","description":"The \"empty\" dataset that should be used for tooltipData when not hovering","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":700,"column":4},"end":{"line":704,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.tooltipData"},{"name":"clip-path","description":"Holder for a clipping path ID","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":787,"column":4},"end":{"line":790,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorD3.clipPath"},{"name":"series-clip-path","description":"A more restricting clip path used to limit where the series are being drawn","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":795,"column":4},"end":{"line":798,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorD3.clipPath"},{"name":"series-color-list","description":"Defines an colors in order that will be used for series.","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":35,"column":4},"end":{"line":43,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxColorsBehavior.dataVisColors"},{"name":"layer","description":"Array of the svg layers","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1479,"column":4},"end":{"line":1482,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"number-of-layers","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1483,"column":4},"end":{"line":1485,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"generate-layers","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1486,"column":4},"end":{"line":1489,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"muted-axes","description":"An object to hold which axes should be muted.\n\n*When adding keys to this, be sure to use Polymer set methods or notifyPath*\n\n```\n   {\n       \"Axes_to_skip_1\":true,\n       \"Axes_to_skip_2\":true\n   }\n```","sourceRange":{"start":{"line":515,"column":6},"end":{"line":519,"column":7}},"metadata":{},"type":"Object"},{"name":"hide-axis-register","description":"Allows to hide the axis register","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2491,"column":4},"end":{"line":2494,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.axisRegister"},{"name":"hide-category-register","description":"Allows to hide the axis register","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2618,"column":4},"end":{"line":2621,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.categoryRegister"},{"name":"axis-register-config","description":"Configuration object used to customize the register cosmetic properties.\nPlease refer to px-vis-register (https://github.com/PredixDev/px-vis) for a list of supported properties","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2706,"column":4},"end":{"line":2708,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.categoryAndAxisRegisterConfigs"},{"name":"category-register-config","description":"Configuration object used to customize the register cosmetic properties.\nPlease refer to px-vis-register (https://github.com/PredixDev/px-vis) for a list of supported properties","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2714,"column":4},"end":{"line":2716,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.categoryAndAxisRegisterConfigs"},{"name":"dynamic-menu-config","description":"The config used by a dynamic menu to create menu entries. Example:\n```\n[\n    {\n     'name': 'Delete',\n      'action': function(data) {\n        console.log('run delete');\n      },\n      'actionContext': aComponent,\n      'eventName': 'delete',\n      'icon': 'fa-trash'\n    },\n    {\n      'name': 'Bring To Front',\n      'action': function(data) {\n        console.log('run bring to front');\n      },\n      'eventName': 'bring-to-front',\n      'icon': 'fa-arrow-up'\n    }\n  ];\n```\n\n- `action` is function that will be run when a menu item is clicked. You can pass\na specific context to be used in that function through `actionContext`. Otherwsie the\ncontext is going to be the chart itself. The `data` parameter has 2 properties: `itemConfig`\nwhich is this specific menu item config object and `additionalDetail` which represents the\nregister item: `value` and `name` (name is the serie id). Please note that because `itemConfig`\nis being passed back you could tie anything to it and have it available in this function.\nIf dynamicMenuConfig is passed in directly in the HTML then `action` will have to be passed in\nas a string with quotes escaped rather than directly as a function.\n- `name` is the menu item displayed text\n- if `eventName` is defined then an event with this name will be fired when clicking the item\nthe detail of this event will include `data` which ahs 2 properties: `itemConfig` and `additionalDetail`\njust like `action` is getting. The event is fired from the chart\n- `icon` is optional and defines a font-awesome icon to be used for the menu entry","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2032,"column":4},"end":{"line":2034,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.dynamicMenuConfig"},{"name":"show-tooltip","description":"Whether to display the tooltip","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2179,"column":4},"end":{"line":2182,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.showTooltip"},{"name":"toolbar-sub-config","description":"toolbarSubConfig can be passed around from a toolbar to another so that clicking\non a \"global\" toolbar drives the sub row state for other toolbars","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2074,"column":4},"end":{"line":2076,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.toolbarSubConfig"},{"name":"interaction-space-config","description":"Configuration object used to customize the interaction space\nPlease refer to px-vis-interation space (https://github.com/PredixDev/px-vis) for a list of supported properties.","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1187,"column":4},"end":{"line":1190,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.interactionSpaceConfig"},{"name":"toolbar-config","description":"Configuration object used to customize the toolbar\nPlease refer to px-vis-toolbar (https://github.com/PredixDev/px-vis) for a list of supported properties.\nMost interesting properties include:\n- config (complex object for customizing the toolbar)\n- horizontalAlignment\n- subToolbarAlignment","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1216,"column":4},"end":{"line":1218,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.chartToolbarConfig"},{"name":"highlighter-config","description":"Configuration object used to customize the highlighter properties.\nPlease refer to px-vis-point-highlighter and px-vis-line-highlighter (https://github.com/PredixDev/px-vis) for a list of supported properties\nMost interesting properties include:\n- `fuzz` : +/- search window around the datapoint value\n- 'differenDataset' : if this chart has a different dataset from the crosshair data origin chart","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1302,"column":4},"end":{"line":1304,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.highlighterConfigs"},{"name":"crosshair-data","description":"Data reported back by the interaction space component so charts can share a crosshair. Has two sets of data: 1) the full data retrieved at the shared key so if all charts use the same datasets, this data can just be displayed on all the charts. 2) a list of just the shared key so if they use different datasets, a search for the closest data at each point can be made. crosshairData is in the form:\n\n```\n   {\n       \"rawData\":[{\n           \"[[sharedKey]]\": [[sharedKeyVal1]],\n           \"[[key1]]\":[[val]],\n           \"[[key2]]\":[[val]]\n       },{\n           \"[[sharedKey]]\": [[sharedKeyVal2]],\n           \"[[key1]]\":[[val]],\n           \"[[key2]]\":[[val]]\n       }],\n       \"timeStamps\":[ timeStamp1, timeStamp2 ]\n   }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":742,"column":4},"end":{"line":745,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"generating-crosshair-data","description":"Bool indicating if interaction space is currently generating data","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":751,"column":4},"end":{"line":755,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"crosshair-pixel-search","description":"Allows the crosshair to search all datapoints within a pixel radius. If set\nto 0 will only pick up the closest point","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":761,"column":4},"end":{"line":764,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"render-to-canvas","description":"Boolean to specify if drawings should render to canvas instead of svg","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":397,"column":4},"end":{"line":401,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorD3.renderToCanvas"},{"name":"prevent-initial-drawing","description":"blocks initial drawings of axis until set to false","sourceRange":{"start":{"line":651,"column":6},"end":{"line":654,"column":7}},"metadata":{},"type":"boolean"},{"name":"draw-debounce-time","description":"Debounce time to use for different types of rendering","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":40,"column":4},"end":{"line":50,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"debounce-on-panning","description":"Whether the drawings will be debounced on panning the chart.\nWhen not debounced the redraw will happen more often on panning,\nwhich should result in a smoother experience. However if rendering\na big number of points this can have the opposite effect since\nit wil redraw too often comapred tot he time taken to re render everything","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":61,"column":4},"end":{"line":64,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"renderer-minimum-points-per-frame","description":"The minimum number of points to render per frame\neven if the chart is laggy","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":170,"column":4},"end":{"line":173,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"renderer-frame-duration-target","description":"Target duration (in ms) for one frame. The renderer will try to render\nas much data as possible in that given timeframe before calling the next\nanimation frame.\nWARNING: this needs to be higher than 16ms since by default\nrequestAnimationFrame will be called every ~16ms, so our target needs to\nbe higher to ensure we keep the processor busy","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":182,"column":4},"end":{"line":185,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"renderer-frame-count-to-average","description":"Number of previous frames to average for the adaptive\nprogressive rendering","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":194,"column":4},"end":{"line":197,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"muted-series-domain","description":"An object which holds the series lines that have been muted based on the selected domain","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2952,"column":4},"end":{"line":2955,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.combineMutes"},{"name":"muted-series-brush","description":"An object which holds the series lines that have been muted based on the axes brushes","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2960,"column":4},"end":{"line":2963,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.combineMutes"},{"name":"muted-series-categories","description":"An object which holds the series lines that have been muted based on\nthe categories","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2969,"column":4},"end":{"line":2972,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.combineMutes"},{"name":"time-domain","description":"Can be used to define a time domain to be used, typically to restrain/filter the amount\nof data displayed. Can be used in combination with a px-vis-chart-navigator","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3256,"column":4},"end":{"line":3261,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.timeDomain"},{"name":"time-key","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3262,"column":4},"end":{"line":3264,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.timeDomain"},{"name":"axes-domain","description":"New chart extents selected by the user\n\nServes as a trigger for the scale component to redefine the chart extents","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3301,"column":4},"end":{"line":3306,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.axesDomain"},{"name":"extents-data","description":"Data reported back by the interaction space. Displays the interpreted x & y coords, width and height, and domain extents. extentsData is in the form:\n\n```\n  {\n    x1 = {pixel-space}\n    y1 = {pixel-space}\n    x2 = {pixel-space}\n    y2 = {pixel-space}\n    w = {pixels}\n    h = {pixels}\n    eX = [{domain}, {domain}];\n    eY = [{domain}, {domain}];\n  }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":801,"column":4},"end":{"line":804,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.extentsData"},{"name":"extents-action","description":"Used by the chart to interpret if extentsData is strip or zoom","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":808,"column":4},"end":{"line":811,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.extentsData"},{"name":"zoom-stack","description":"Stack of previous zooms","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1705,"column":4},"end":{"line":1710,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"zoom-in-percentage","description":"Percentage used to calculate new extents when using zoomIn feature.\nThe higher the number the more it will zoom in. should be less than 1.","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1715,"column":4},"end":{"line":1718,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"zoom-out-percentage","description":"Percentage used to calculate new extents when using zoomOut feature.\nThe higher the number the more it will zoom out. should be less than 1.","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1723,"column":4},"end":{"line":1726,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"brush-domains","description":"Holder for all domains from brushes\n\nChart expects a set of brushDomains by type\n{\n   type1: {\n     axis1: [min, max],\n     axis2: [min, max]\n   },\n   type2: {\n     axis1: [min, max],\n     axis2: [min, max]\n   }\n}","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3337,"column":4},"end":{"line":3342,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.brushDomains"},{"name":"use-category-in-tooltip","description":"Whether the tooltip should show the category name for each\nvalue rather than the axis name.\nWill use the category name if defined in seriesConfig, otherwise\na string with the following formatting: 'categoryKey - category'","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3228,"column":4},"end":{"line":3231,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.useCategoryInTooltip"},{"name":"annotation-data","description":"The annotation data: x and y values + the series which scale should be used.\nData is an arbitrary object you want to store for use when showing the\nannotation\n```\n   [{\n       x: 1325897523,\n       y: 15.7,\n       series: y0,\n       data: {...}\n   },{\n    ...\n    }]\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3373,"column":4},"end":{"line":3378,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.annotationData"},{"name":"show-strong-icon","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3380,"column":4},"end":{"line":3383,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehavior.annotationData"},{"name":"reset-lasso-data","description":"When switched clears all the previous selection made\n(in _lassoCrosshairData)","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1585,"column":5},"end":{"line":1589,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.multiAxisLasso"},{"name":"first-date-time-format","description":"Defines the format for the first datetime string. The first datetime is shown in normal font weight.\n\nDefault is the first datetime string is TIME presented as \"15:00:00 +0000\"\n\nFor valid string formats, see: http://momentjs.com/docs/#/displaying/","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":47,"column":4},"end":{"line":50,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"second-date-time-format","description":"Defines the format for the second datetime string. The second datetime is shown in bold font weight.\n\nDefault is the second datetime string is DATE presented as \"12 Feb 2016\"\n\nFor valid string formats, see: http://momentjs.com/docs/#/displaying/","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":62,"column":4},"end":{"line":65,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"separator","description":"Defines a separator character between the two datetime strings.","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":74,"column":4},"end":{"line":77,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"timezone","description":"Sets what timezone the event time should display in.\n\nTimezone defaults to UTC time. If a valid timezone is specified, then times include daylight savings time if applicable.\n\nFor a list of valid timezones, see: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n\nFor more details on timezones, see: http://momentjs.com/timezone/","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":91,"column":4},"end":{"line":94,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"tooltip-requested","description":"Whether the tooltip should be shown or hidden","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3308,"column":5},"end":{"line":3311,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"tooltip-orientation","description":"Specifies the orientation of the event tooltip.","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3318,"column":6},"end":{"line":3321,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"resources","description":"List of keys & values used for translating this component.","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3326,"column":6},"end":{"line":3338,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"use-key-if-missing","description":"Use the key for localization if value for language is missing.\nShould always be true for Predix components.","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3344,"column":4},"end":{"line":3347,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"language","description":"set a default for localizing. Switch it for the chart to pick * up a possibly new d3 or moment locale","sourceRange":{"start":{"line":644,"column":6},"end":{"line":647,"column":7}},"metadata":{},"type":"string"},{"name":"skip-keys","description":"A dev set Object of which keys in the chart data should not be used as axes.\n\n`Required` if axes is not specified.\n\n```\n   {\n       \"Axes_to_skip_1\":true,\n       \"Axes_to_skip_2\":true\n   }\n```","sourceRange":{"start":{"line":488,"column":6},"end":{"line":492,"column":7}},"metadata":{},"type":"Object"},{"name":"generate-axes-from-data","description":"A boolean to specify if axes are developer set or should be generated from the chart data","sourceRange":{"start":{"line":524,"column":6},"end":{"line":527,"column":7}},"metadata":{},"type":"boolean"},{"name":"series-config","description":"A developer set configuration file to specify a vareity of options.\n\nThe seriesKey can be specified to set the color for the lines.\n\n```\n {\n    \"mySeriesKey\": {                  //seriesKey is a unique identifier for the configuration\n        \"color\": \"rgb(0,0,0)\"        //color of the series lines\n    }\n }\n```\n\nThe axes can be specified to set the title and units.\n\n```\n {\n    \"myAxis1\": {\n        \"title\": \"My awesome title\",\n        \"yAxisUnit\": \"Oranges\"\n    }\n }\n```\n\n\nThe category color can also be specified if using categories.\n\n```\n {\n    \"cat1\": {\n        \"color\": \"rgb(0,0,0)\"\n    },\n    \"cat2\": {\n        \"color\": \"rgb(0,255,0)\"\n    }\n }\n```","sourceRange":{"start":{"line":566,"column":6},"end":{"line":570,"column":7}},"metadata":{},"type":"Object"},{"name":"displayed-values","description":"Object representing the actual displayed titles for each axis","sourceRange":{"start":{"line":574,"column":6},"end":{"line":576,"column":7}},"metadata":{},"type":"Object"},{"name":"tooltip-config","description":"Configuration object used to customize the tooltip.\nPlease refer to px-vis-tooltip (https://github.com/PredixDev/px-vis) for a list of supported properties.\nMost interesting properties include:\n- width\n- height\n- tooltipStyle\n- forceDateTimeDisplay","sourceRange":{"start":{"line":607,"column":6},"end":{"line":609,"column":7}},"metadata":{},"type":"Object"},{"name":"brush-to-remove","description":"Boolean specifying if the axis brushes should remove the brushed data or retain it","sourceRange":{"start":{"line":613,"column":6},"end":{"line":616,"column":7}},"metadata":{},"type":"boolean"},{"name":"start-color-index","description":"Specifies which seriesColorOrder color to start with for assigning the series color","sourceRange":{"start":{"line":637,"column":6},"end":{"line":640,"column":7}},"metadata":{},"type":"number"}],"events":[{"type":"CustomEvent","name":"width-changed","description":"Fired when the `width` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.baseSize"},{"type":"CustomEvent","name":"height-changed","description":"Fired when the `height` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.baseSize"},{"type":"CustomEvent","name":"svg-changed","description":"Fired when the `svg` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.svg"},{"type":"CustomEvent","name":"px-svg-elem-changed","description":"Fired when the `pxSvgElem` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.svg"},{"type":"CustomEvent","name":"px-svg-elem-lower-changed","description":"Fired when the `pxSvgElemLower` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.svgLower"},{"type":"CustomEvent","name":"canvas-context-changed","description":"Fired when the `canvasContext` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"type":"CustomEvent","name":"canvas-layers-changed","description":"Fired when the `canvasLayers` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"type":"CustomEvent","name":"x-changed","description":"Fired when the `x` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.axes"},{"type":"CustomEvent","name":"y-changed","description":"Fired when the `y` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.axes"},{"type":"CustomEvent","name":"dimensions-changed","description":"Fired when the `dimensions` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.dimensions"},{"type":"CustomEvent","name":"chart-extents-changed","description":"Fired when the `chartExtents` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.chartExtents"},{"type":"CustomEvent","name":"center-offset-changed","description":"Fired when the `centerOffset` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.radialAxisConfig"},{"type":"CustomEvent","name":"domain-changed-changed","description":"Fired when the `domainChanged` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.domainUpdate"},{"type":"CustomEvent","name":"selected-domain-changed","description":"Fired when the `selectedDomain` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.selectedDomain"},{"type":"CustomEvent","name":"complete-series-config-changed","description":"Fired when the `completeSeriesConfig` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.completeSeriesConfig"},{"type":"CustomEvent","name":"muted-series-changed","description":"Fired when the `mutedSeries` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.mutedSeries"},{"type":"CustomEvent","name":"range-changed","description":"Fired when the `range` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"type":"CustomEvent","name":"tooltip-data-changed","description":"Fired when the `tooltipData` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.tooltipData"},{"type":"CustomEvent","name":"default-empty-data-changed","description":"Fired when the `defaultEmptyData` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.tooltipData"},{"type":"CustomEvent","name":"clip-path-changed","description":"Fired when the `clipPath` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.clipPath"},{"type":"CustomEvent","name":"series-clip-path-changed","description":"Fired when the `seriesClipPath` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.clipPath"},{"type":"CustomEvent","name":"layer-changed","description":"Fired when the `layer` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorChart.layers"},{"type":"CustomEvent","name":"muted-axes-changed","description":"Fired when the `mutedAxes` property changes.","metadata":{}},{"type":"CustomEvent","name":"crosshair-data-changed","description":"Fired when the `crosshairData` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.crosshairData"},{"type":"CustomEvent","name":"generating-crosshair-data-changed","description":"Fired when the `generatingCrosshairData` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.crosshairData"},{"type":"CustomEvent","name":"px-vis-chart-canvas-rendering-ended","description":"px-vis-chart-canvas-rendering-ended","metadata":{},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"type":"CustomEvent","name":"px-vis-chart-canvas-rendering-started","description":"px-vis-chart-canvas-rendering-started","metadata":{},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"type":"CustomEvent","name":"extents-data-changed","description":"Fired when the `extentsData` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.extentsData"},{"type":"CustomEvent","name":"extents-action-changed","description":"Fired when the `extentsAction` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.extentsData"},{"type":"CustomEvent","name":"skip-keys-changed","description":"Fired when the `skipKeys` property changes.","metadata":{}},{"type":"CustomEvent","name":"series-key-changed","description":"Fired when the `seriesKey` property changes.","metadata":{}},{"type":"CustomEvent","name":"series-config-changed","description":"Fired when the `seriesConfig` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-vis-radar"}]}