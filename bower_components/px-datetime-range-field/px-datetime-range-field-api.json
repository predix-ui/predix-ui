{"schema_version":"1.0.0","elements":[{"description":"The datetime components rely on [Moment.js](https://momentjs.com/) and [Moment Timezone](https://momentjs.com/timezone/).\n\n### Usage\n\n    <px-datetime-range-field from-moment=\"{{...}}\" to-moment=\"{{...}}\">\n    </px-datetime-range-field>\n\n\n### Styling\n\nThe following custom properties are available for styling. Please also refer to px-forms-design for additional style variables used by this component.\n\nCustom property | Description\n:----------------|:-------------\n`--px-datetime-range-field-to-color` | Text color of the \"TO\" between start and end date input fields\n`--px-datetime-range-field-display` | Sets the display value for the field wrapper\n`--px-datetime-field-margin-bottom` | Sets the margin under the fields. If allowWrap is true this should be set to 20px.\n`--px-datetime-range-field-margin-between-fields` | When `showFieldTitles` is true this is the amount of space between the fields\n`--px-datetime-range-field-column-min-width` | When `fullWidth` is true this sets the min-width that each field is allowed to be before the grid wraps.\n`--px-datetime-range-field-justify-fields` | Sets the flex `justify-content` value for the fields\n`--px-datetime-range-field-margin-between-fields-overwrite` | Adds margin right if `full-width` & `show-field-titles` are true","summary":"","path":"../px-datetime-range-field/px-datetime-range-field.html","properties":[{"name":"keyEventTarget","type":"?EventTarget","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":277,"column":6},"end":{"line":282,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stopKeyboardEventPropagation","type":"boolean","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":288,"column":6},"end":{"line":288,"column":65}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_boundKeyHandlers","type":"Array","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":290,"column":6},"end":{"line":295,"column":7}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_imperativeKeyBindings","type":"Object","description":"own properties of everything on the \"prototype\".","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":299,"column":6},"end":{"line":304,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyBindings","type":"Object","description":"Key bindings for iron-a11y-keys-behavior","privacy":"public","sourceRange":{"start":{"line":308,"column":4},"end":{"line":311,"column":5}},"metadata":{"polymer":{}}},{"name":"blockFutureDates","type":"boolean","description":"Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":34,"column":6},"end":{"line":37,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"blockPastDates","type":"boolean","description":"Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":41,"column":6},"end":{"line":44,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"__localizationCache","type":"Object","description":"Internal singleton cache. This is the private implementation of the\nbehaviour; don't interact with it directly.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":140,"column":2},"end":{"line":144,"column":3}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"language","type":"string","description":"set a default for localizing","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":50,"column":6},"end":{"line":53,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"en\"","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"resources","type":"Object","description":"List of key/values to be included for translating this component","privacy":"public","sourceRange":{"start":{"line":285,"column":6},"end":{"line":296,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{\"en\":{\"from can not be later than to\":\"from can not be later than to\",\"from\":\"from\",\"TO\":\"TO\"}}"},{"name":"formats","type":"Object","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"useKeyIfMissing","type":"boolean","description":"Use the key for localization if value for  language is missing. Should\nalways be true for px components","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":58,"column":6},"end":{"line":61,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"localize","type":"Function","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubbleEvent","type":"boolean","description":"If true, will bubble up the event to the parents","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"timeZone","type":"string","description":"Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":64,"column":6},"end":{"line":70,"column":8}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"minDate","type":"Object","description":"The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":89,"column":6},"end":{"line":92,"column":7}},"metadata":{"polymer":{"observer":"\"_minDateChanged\""}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"maxDate","type":"Object","description":"The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":96,"column":6},"end":{"line":99,"column":7}},"metadata":{"polymer":{"observer":"\"_maxDateChanged\""}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"fromMoment","type":"Object","description":"Moment object start date & time","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":32,"column":6},"end":{"line":38,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"null","inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"name":"toMoment","type":"Object","description":"Moment object end date & time","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":42,"column":6},"end":{"line":48,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"null","inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"name":"presetRanges","type":"Object","description":"(optional:  'px-{datetime}-range-panel')\n\nThe preset date/time ranges to be displayed.\n\n```\n  [\n   {\n     \"displayText\": \"Last 5 Minutes\",\n     \"startDateTime\": \"2013-02-04T22:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": function() {return moment().subtract(1, 'days').toISOString();},\n     \"endDateTime\": function() {return moment().startOf('day').toISOString();}\n   }\n  ]\n```","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":82,"column":6},"end":{"line":84,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxDatetimeBehavior.Range"},{"name":"_tempFromMomentObj","type":"Object","description":"Temporary from moment object used for validation and displaying.\nThis object should be used by subcomponents when we want to \"try\"\na value and see the result of validation AND/OR give us the ability\nto rollback (cancel) or apply","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":149,"column":6},"end":{"line":152,"column":7}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxDatetimeBehavior.TempRange"},{"name":"_tempToMomentObj","type":"Object","description":"Temporary to moment object used for validation and displaying.\nThis object should be used by subcomponents when we want to \"try\"\na value and see the result of validation AND/OR give us the ability\nto rollback (cancel) or apply","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":159,"column":6},"end":{"line":162,"column":7}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxDatetimeBehavior.TempRange"},{"name":"showButtons","type":"boolean","description":"Whether to show Apply and Cancel buttons in the components","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-button-behavior.html","start":{"line":33,"column":6},"end":{"line":37,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.Buttons"},{"name":"isValid","type":"boolean","description":"Boolean stating if the date, time, and range are valid.","privacy":"public","sourceRange":{"start":{"line":187,"column":6},"end":{"line":191,"column":7}},"metadata":{"polymer":{"notify":true,"readOnly":true}}},{"name":"validationErrorMessage","type":"string","description":"String used to describe the current invalid state","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":43,"column":6},"end":{"line":46,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"invalid\"","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"containerType","type":"string","description":"An optional type set on the px-overlay-container and px-overlay-content to associate specific overlay-contents with their container","privacy":"public","sourceRange":{"file":"../px-overlay/px-overlay-behavior.html","start":{"line":39,"column":4},"end":{"line":39,"column":25}},"metadata":{"polymer":{}},"inheritedFrom":"PxOverlayBehavior.sharedProperties"},{"name":"dateFormat","type":"string","description":"Moment format string for the DATE format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)","privacy":"public","sourceRange":{"start":{"line":140,"column":6},"end":{"line":143,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"YYYY-MM-DD\""},{"name":"timeFormat","type":"string","description":"Moment format string for the TIME format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)","privacy":"public","sourceRange":{"start":{"line":148,"column":6},"end":{"line":151,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"HH:mm:ss\""},{"name":"showTimeZone","type":"string","description":"Can be set to show the timezone. Can have 4 possible values:\n - 'dropdown': Shows the time zone as a dropdown which the user can use to select a different time zone. Only contains a subset of all time zones.\n - 'extendedDropdown': Shows the time zone as a dropdown which the user can use to select a different time zone. Contains all existing time zones (588) from the IANA tz database.\n - 'text': Shows the time zone as non-editable text.\n - 'abbreviatedText': Shows the abbreviated time zone as non editable text (such as PST, EST, etc). Note: many time zones do not have an abbreviation.","privacy":"public","sourceRange":{"start":{"line":159,"column":6},"end":{"line":162,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\""},{"name":"hideTime","type":"boolean","description":"Controls whether time should be hidden in the fields.","privacy":"public","sourceRange":{"start":{"line":166,"column":6},"end":{"line":169,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"hideDate","type":"boolean","description":"Controls whether date should be hidden in the fields.","privacy":"public","sourceRange":{"start":{"line":173,"column":6},"end":{"line":176,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"hideIcon","type":"boolean","description":"Controls whether the calendar/clock icons should be hidden.","privacy":"public","sourceRange":{"start":{"line":180,"column":6},"end":{"line":183,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"required","type":"boolean","description":"Boolean stating if the range field is required.\nWill result in an error if left blank.","privacy":"public","sourceRange":{"start":{"line":196,"column":6},"end":{"line":199,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_isRangeValid","type":"boolean","description":"Used internally to determine if the range validation error should be displayed.","privacy":"protected","sourceRange":{"start":{"line":203,"column":6},"end":{"line":206,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true"},{"name":"_fromValid","type":"boolean","description":"Reflects if the 'from' field is valid","privacy":"protected","sourceRange":{"start":{"line":210,"column":6},"end":{"line":212,"column":7}},"metadata":{"polymer":{}}},{"name":"_toValid","type":"boolean","description":"Reflects if the 'to' field is valid","privacy":"protected","sourceRange":{"start":{"line":216,"column":6},"end":{"line":218,"column":7}},"metadata":{"polymer":{}}},{"name":"_showFromValidationMessage","type":"boolean","description":"Used to determine which validation message to show when there are multiple invalid fields.","privacy":"protected","sourceRange":{"start":{"line":222,"column":6},"end":{"line":225,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_showToValidationMessage","type":"boolean","description":"Used to determine which validation message to show when there are multiple invalid fields.","privacy":"protected","sourceRange":{"start":{"line":229,"column":6},"end":{"line":232,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"hideValidationMessages","type":"boolean","description":"Hide all validation messages","privacy":"public","sourceRange":{"start":{"line":236,"column":6},"end":{"line":239,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"allowWrap","type":"boolean","description":"Allows the component to wrap the fields and buttons when\nthe horizontal space can't fit them all on one line.\n\nFields will automatically wrap if `fullWidth` is set to true.","privacy":"public","sourceRange":{"start":{"line":246,"column":6},"end":{"line":249,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"fullWidth","type":"boolean","description":"For layout purposes.\nThis will display grid the fields. `showFieldTitles` must be true for styles to take effect.\n\n`--px-datetime-range-field-column-min-width` (default: 250px) - controls\nthe min-width that each field is allowed to be before the grid wraps.\n\n`--px-datetime-range-field-margin-between-fields` (default: 10px) - controls\nthe horizontal spacing between the fields.\n\nThis means each field will take up half of the container that `px-datetime-range-field`\nis in, minus the space between the fields. When the container scales smaller than 510px or\n`(--px-datetime-range-field-column-min-width * 2 + --px-datetime-range-field-margin-between-fields)`.\n\nThe fields will wrap under each other regardless of the `allow-wrap` prop in every browser except for IE.\nSetting this property will override anything set in the `--px-datetime-range-field-justify-fields`","privacy":"public","sourceRange":{"start":{"line":267,"column":6},"end":{"line":271,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"showFieldTitles","type":"boolean","description":"This will remove the `to` in-between the fields and\nadd titles above the fields. This allows for a\nmore flexible design.","privacy":"public","sourceRange":{"start":{"line":277,"column":7},"end":{"line":281,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"hoist","type":"boolean","description":"Specifies if the dropdown content should get hoisted to a container in order to escape its current stacking context","privacy":"public","sourceRange":{"start":{"line":300,"column":7},"end":{"line":303,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"}],"methods":[{"name":"registered","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":317,"column":4},"end":{"line":319,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"attached","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":321,"column":4},"end":{"line":323,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"detached","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":325,"column":4},"end":{"line":327,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"addOwnKeyBinding","description":"Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":337,"column":4},"end":{"line":341,"column":5}},"metadata":{},"params":[{"name":"eventString","type":"string"},{"name":"handlerName","type":"string"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"removeOwnKeyBindings","description":"When called, will remove all imperatively-added key bindings.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":346,"column":4},"end":{"line":350,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyboardEventMatchesKeys","description":"Returns true if a keyboard event matches `eventString`.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":359,"column":4},"end":{"line":367,"column":5}},"metadata":{},"params":[{"name":"event","type":"KeyboardEvent"},{"name":"eventString","type":"string"}],"return":{"type":"boolean"},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_collectKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":369,"column":4},"end":{"line":379,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_prepKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":381,"column":4},"end":{"line":403,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_addKeyBinding","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":405,"column":4},"end":{"line":412,"column":5}},"metadata":{},"params":[{"name":"eventString"},{"name":"handlerName"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_resetKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":414,"column":4},"end":{"line":420,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_listenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":422,"column":4},"end":{"line":435,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_unlistenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":437,"column":4},"end":{"line":452,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_onKeyBindingEvent","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":454,"column":4},"end":{"line":475,"column":5}},"metadata":{},"params":[{"name":"keyBindings"},{"name":"event"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_triggerKeyHandler","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":477,"column":4},"end":{"line":486,"column":5}},"metadata":{},"params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"loadResources","description":"","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":222,"column":2},"end":{"line":255,"column":3}},"metadata":{},"params":[{"name":"path"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__computeLocalize","description":"Returns a computed `localize` method, based on the current `language`.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":260,"column":2},"end":{"line":300,"column":3}},"metadata":{},"params":[{"name":"language"},{"name":"resources"},{"name":"formats"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestResponse","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":302,"column":2},"end":{"line":330,"column":3}},"metadata":{},"params":[{"name":"event"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestError","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":332,"column":2},"end":{"line":334,"column":3}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__checkLocalizationCache","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":336,"column":2},"end":{"line":344,"column":3}},"metadata":{},"params":[{"name":"proto"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"_updateMinMaxTz","description":"","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":104,"column":4},"end":{"line":113,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_minDateChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":114,"column":4},"end":{"line":122,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_maxDateChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":123,"column":4},"end":{"line":131,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_preserveTime","description":"Copies the time in toPreserve to dest and returns dest.\nused in `px-calendar-picker`, `px-datetime-picker`, and `px-datetime-range-panel`","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":139,"column":4},"end":{"line":147,"column":5}},"metadata":{},"params":[{"name":"toPreserve"},{"name":"dest"}],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_localeChanged","description":"make sure the moment obj picks up the possibly new moment locale","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":93,"column":4},"end":{"line":102,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Range"},{"name":"_timeZoneChanged","description":"makes sure the moment objects reflect the timezone","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":106,"column":4},"end":{"line":117,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Range"},{"name":"_validateRangeOrder","description":"Validation for the range. Makes sure the ranges are in chronological order","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":123,"column":4},"end":{"line":132,"column":5}},"metadata":{},"params":[{"name":"fromMoment"},{"name":"toMoment"}],"return":{"type":"Boolean","desc":"true if chronological order, false otherwise"},"inheritedFrom":"PxDatetimeBehavior.Range"},{"name":"_applyTempRangeMoment","description":"Applies value of temp moment to public momentObj","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":175,"column":4},"end":{"line":189,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.TempRange"},{"name":"_rollbackTempFromMoment","description":"Rollback value of temp fromMoment to use public momentObj","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":193,"column":5},"end":{"line":195,"column":5}},"metadata":{},"params":[{"name":"fromMoment"}],"inheritedFrom":"PxDatetimeBehavior.TempRange"},{"name":"_rollbackTempToMoment","description":"Rollback value of temp toMoment to use public momentObj","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":199,"column":5},"end":{"line":201,"column":5}},"metadata":{},"params":[{"name":"toMoment"}],"inheritedFrom":"PxDatetimeBehavior.TempRange"},{"name":"_localeChangedTemp","description":"make sure the moment obj pick up the possibly new moment locale","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":205,"column":5},"end":{"line":214,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.TempRange"},{"name":"_timeZoneChangedTemp","description":"makes sure the moment objects reflect the timezone","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":218,"column":5},"end":{"line":227,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.TempRange"},{"name":"_validateInput","description":"Validation function for 'px-datetime-entry'","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":98,"column":4},"end":{"line":116,"column":5}},"metadata":{},"params":[{"name":"format"},{"name":"tz"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validateField","description":"Validate a complete field\ncalled in px-datetime-field and px-datetime-range-field","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":129,"column":4},"end":{"line":170,"column":5}},"metadata":{},"params":[{"name":"funcOrigin","type":"String","description":"The function that called validation. Used for `_handleIncompleteEntries`"}],"return":{"desc":"validation result:\n- MomentObj - The validated new moment obj\n- False - If the new moment is invalid\n- FieldSame - If the new moment is the same as the old moment\n- FieldBlank - If the visible field(s) are blank"},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validateMomentObj","description":"Validate a moment object\ncalled in from _validateField and px-datetime-field","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":181,"column":4},"end":{"line":210,"column":5}},"metadata":{},"params":[{"name":"validatingMomentObj"}],"return":{"desc":"validation result:\n- MomentObj - The validated new moment obj\n- False - If the new moment is invalid\n- FieldSame - If the new moment is the same as the old moment"},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validField","description":"Reset field to valid","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":216,"column":4},"end":{"line":227,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"valid momentObj"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_invalidField","description":"Set field to invalid\nSet validation Error Message, turn on validation error, set isValid to false, and fire event.","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":235,"column":4},"end":{"line":240,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"Invalid momentObj"},{"name":"invalidObj","type":"Object","description":"Stores the different invalid"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_entryInputString","description":"loop through array of the entry cells and return a string of the value","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":246,"column":4},"end":{"line":258,"column":5}},"metadata":{},"params":[{"name":"cells","type":"Object","description":"Date or time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_determineValidationMessage","description":"Returns a meaningful validation message","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":265,"column":4},"end":{"line":302,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"Invalid momentObj"},{"name":"invalidObj","type":"Object","description":"Stores the different invalid"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_updateValidationEvent","description":"Fires when 'validationErrorMessage' is changed","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":309,"column":4},"end":{"line":313,"column":5}},"metadata":{},"params":[{"name":"validationErrorMessage","type":"string","description":"Values validationErrorMessage"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_submitButtonState","description":"Sets the button state based on if validation has been passed or not. This in turn enables or disables the Submit button.","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":319,"column":4},"end":{"line":321,"column":5}},"metadata":{},"params":[{"name":"state","type":"Boolean","description":"Where the validation has passed or failed"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_handleIncompleteEntries","description":"If required any incomplete momentObj is invalid\nIf not required determine if the field is blank","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":330,"column":4},"end":{"line":346,"column":5}},"metadata":{},"params":[{"name":"funcOrigin","type":"String","description":"The function that called validation"},{"name":"entry","type":"Element","description":"px-datetime-entry date"},{"name":"fieldNodes","type":"Object","description":"Object of date and time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_loopOverCellValues","description":"Checking to see if all cells are empty\nIf a cell has a value return false","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":353,"column":4},"end":{"line":365,"column":5}},"metadata":{},"params":[{"name":"cells","type":"Object","description":"Date or time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"ready","description":"Sets up listeners for a variety of events fired from or passing through this component","privacy":"protected","sourceRange":{"start":{"line":323,"column":4},"end":{"line":328,"column":5}},"metadata":{},"params":[]},{"name":"_focusFirstToEntry","description":"Focuses select on the first entry of the 'to' field","privacy":"protected","sourceRange":{"start":{"line":332,"column":4},"end":{"line":336,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_focusLastFromEntry","description":"Focuses select on the first entry of the 'from' field","privacy":"protected","sourceRange":{"start":{"line":340,"column":4},"end":{"line":344,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_getWrapClass","description":"Helper function to style the outer div","privacy":"protected","sourceRange":{"start":{"line":348,"column":4},"end":{"line":353,"column":5}},"metadata":{},"params":[{"name":"allowWrap"},{"name":"showButtons"},{"name":"showFieldTitles"}]},{"name":"_getFromFieldClass","description":"Helper function to style #fromFields","privacy":"protected","sourceRange":{"start":{"line":357,"column":4},"end":{"line":361,"column":5}},"metadata":{},"params":[{"name":"allowWrap"},{"name":"showFieldTitles"}]},{"name":"_getToFieldClass","description":"Helper function to style #toFields","privacy":"protected","sourceRange":{"start":{"line":365,"column":4},"end":{"line":369,"column":5}},"metadata":{},"params":[{"name":"showButtons"},{"name":"allowWrap"}]},{"name":"_getIsValid","description":"Computed function to determine if everything is valid","privacy":"protected","sourceRange":{"start":{"line":373,"column":4},"end":{"line":375,"column":5}},"metadata":{},"params":[{"name":"_fromValid"},{"name":"_toValid"},{"name":"_isRangeValid"}]},{"name":"_isOneFieldEmpty","description":"Whether exactly one field is currently empty\nIf only one of the two fields has been filled then treat as non valid but don't alert","privacy":"protected","sourceRange":{"start":{"line":380,"column":4},"end":{"line":386,"column":5}},"metadata":{},"params":[]},{"name":"_validateRangeAndFailedClass","description":"Determines if the range is valid\nsets `_forcedFailedClass` on fields","privacy":"protected","sourceRange":{"start":{"line":391,"column":4},"end":{"line":401,"column":5}},"metadata":{},"params":[{"name":"fromMoment"},{"name":"toMoment"}]},{"name":"_validationMessagePriority","description":"Determines which validation message to display\nShow validation messages for range first, then from field, and then to field","privacy":"protected","sourceRange":{"start":{"line":406,"column":4},"end":{"line":422,"column":5}},"metadata":{},"params":[{"name":"_fromValid"},{"name":"_toValid"},{"name":"_isRangeValid"},{"name":"hideValidationMessages"}]},{"name":"_handleRangeValidationMessage","description":"Determines whether to show a validation error message","privacy":"protected","sourceRange":{"start":{"line":426,"column":4},"end":{"line":428,"column":5}},"metadata":{},"params":[{"name":"_isRangeValid"},{"name":"hideValidationMessages"}]},{"name":"_dateTimeButtons","description":"Handle evt from a button being clicked","privacy":"protected","sourceRange":{"start":{"line":432,"column":4},"end":{"line":438,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_onEsc","description":"Handle escape key press","privacy":"protected","sourceRange":{"start":{"line":442,"column":4},"end":{"line":444,"column":5}},"metadata":{},"params":[]},{"name":"_onEnter","description":"Handle enter key press","privacy":"protected","sourceRange":{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},"metadata":{},"params":[]},{"name":"_tempMomentChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":451,"column":4},"end":{"line":457,"column":5}},"metadata":{},"params":[]},{"name":"_validateSetMomentObj","description":"Run validation on a moment objects that have been set from the outside\nThis will set or unset validation errors\n\nRun validation on the individual fields then on the range order\n\nUseful for rangepicker to revalidate fields when interacting\nwith the panel","privacy":"protected","sourceRange":{"start":{"line":467,"column":4},"end":{"line":472,"column":5}},"metadata":{},"params":[{"name":"fromMoment"},{"name":"toMoment"}]},{"name":"_applyChanges","description":"If valid, sets the momentObjs from temp objects","privacy":"protected","sourceRange":{"start":{"line":476,"column":4},"end":{"line":492,"column":5}},"metadata":{},"params":[{"name":"preventApply"}]},{"name":"_cancelChanges","description":"Clear fields or reset to previous moment objs","privacy":"protected","sourceRange":{"start":{"line":496,"column":4},"end":{"line":504,"column":5}},"metadata":{},"params":[]}],"staticMethods":[],"demos":[{"url":"index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":123,"column":10},"end":{"line":505,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"key-event-target","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":277,"column":6},"end":{"line":282,"column":7}},"metadata":{},"type":"?EventTarget","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stop-keyboard-event-propagation","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":288,"column":6},"end":{"line":288,"column":65}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"block-future-dates","description":"Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":34,"column":6},"end":{"line":37,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"block-past-dates","description":"Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":41,"column":6},"end":{"line":44,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"language","description":"set a default for localizing","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":50,"column":6},"end":{"line":53,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"resources","description":"List of key/values to be included for translating this component","sourceRange":{"start":{"line":285,"column":6},"end":{"line":296,"column":7}},"metadata":{},"type":"Object"},{"name":"formats","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"use-key-if-missing","description":"Use the key for localization if value for  language is missing. Should\nalways be true for px components","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":58,"column":6},"end":{"line":61,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"localize","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{},"type":"Function","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubble-event","description":"If true, will bubble up the event to the parents","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"time-zone","description":"Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":64,"column":6},"end":{"line":70,"column":8}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"min-date","description":"The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":89,"column":6},"end":{"line":92,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"max-date","description":"The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":96,"column":6},"end":{"line":99,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"from-moment","description":"Moment object start date & time","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":32,"column":6},"end":{"line":38,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"name":"to-moment","description":"Moment object end date & time","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":42,"column":6},"end":{"line":48,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"name":"preset-ranges","description":"(optional:  'px-{datetime}-range-panel')\n\nThe preset date/time ranges to be displayed.\n\n```\n  [\n   {\n     \"displayText\": \"Last 5 Minutes\",\n     \"startDateTime\": \"2013-02-04T22:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": function() {return moment().subtract(1, 'days').toISOString();},\n     \"endDateTime\": function() {return moment().startOf('day').toISOString();}\n   }\n  ]\n```","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":82,"column":6},"end":{"line":84,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Range"},{"name":"show-buttons","description":"Whether to show Apply and Cancel buttons in the components","sourceRange":{"file":"../px-datetime-common/px-datetime-button-behavior.html","start":{"line":33,"column":6},"end":{"line":37,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.Buttons"},{"name":"validation-error-message","description":"String used to describe the current invalid state","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":43,"column":6},"end":{"line":46,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"container-type","description":"An optional type set on the px-overlay-container and px-overlay-content to associate specific overlay-contents with their container","sourceRange":{"file":"../px-overlay/px-overlay-behavior.html","start":{"line":39,"column":4},"end":{"line":39,"column":25}},"metadata":{},"type":"string","inheritedFrom":"PxOverlayBehavior.sharedProperties"},{"name":"date-format","description":"Moment format string for the DATE format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)","sourceRange":{"start":{"line":140,"column":6},"end":{"line":143,"column":7}},"metadata":{},"type":"string"},{"name":"time-format","description":"Moment format string for the TIME format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)","sourceRange":{"start":{"line":148,"column":6},"end":{"line":151,"column":7}},"metadata":{},"type":"string"},{"name":"show-time-zone","description":"Can be set to show the timezone. Can have 4 possible values:\n - 'dropdown': Shows the time zone as a dropdown which the user can use to select a different time zone. Only contains a subset of all time zones.\n - 'extendedDropdown': Shows the time zone as a dropdown which the user can use to select a different time zone. Contains all existing time zones (588) from the IANA tz database.\n - 'text': Shows the time zone as non-editable text.\n - 'abbreviatedText': Shows the abbreviated time zone as non editable text (such as PST, EST, etc). Note: many time zones do not have an abbreviation.","sourceRange":{"start":{"line":159,"column":6},"end":{"line":162,"column":7}},"metadata":{},"type":"string"},{"name":"hide-time","description":"Controls whether time should be hidden in the fields.","sourceRange":{"start":{"line":166,"column":6},"end":{"line":169,"column":7}},"metadata":{},"type":"boolean"},{"name":"hide-date","description":"Controls whether date should be hidden in the fields.","sourceRange":{"start":{"line":173,"column":6},"end":{"line":176,"column":7}},"metadata":{},"type":"boolean"},{"name":"hide-icon","description":"Controls whether the calendar/clock icons should be hidden.","sourceRange":{"start":{"line":180,"column":6},"end":{"line":183,"column":7}},"metadata":{},"type":"boolean"},{"name":"is-valid","description":"Boolean stating if the date, time, and range are valid.","sourceRange":{"start":{"line":187,"column":6},"end":{"line":191,"column":7}},"metadata":{},"type":"boolean"},{"name":"required","description":"Boolean stating if the range field is required.\nWill result in an error if left blank.","sourceRange":{"start":{"line":196,"column":6},"end":{"line":199,"column":7}},"metadata":{},"type":"boolean"},{"name":"hide-validation-messages","description":"Hide all validation messages","sourceRange":{"start":{"line":236,"column":6},"end":{"line":239,"column":7}},"metadata":{},"type":"boolean"},{"name":"allow-wrap","description":"Allows the component to wrap the fields and buttons when\nthe horizontal space can't fit them all on one line.\n\nFields will automatically wrap if `fullWidth` is set to true.","sourceRange":{"start":{"line":246,"column":6},"end":{"line":249,"column":7}},"metadata":{},"type":"boolean"},{"name":"full-width","description":"For layout purposes.\nThis will display grid the fields. `showFieldTitles` must be true for styles to take effect.\n\n`--px-datetime-range-field-column-min-width` (default: 250px) - controls\nthe min-width that each field is allowed to be before the grid wraps.\n\n`--px-datetime-range-field-margin-between-fields` (default: 10px) - controls\nthe horizontal spacing between the fields.\n\nThis means each field will take up half of the container that `px-datetime-range-field`\nis in, minus the space between the fields. When the container scales smaller than 510px or\n`(--px-datetime-range-field-column-min-width * 2 + --px-datetime-range-field-margin-between-fields)`.\n\nThe fields will wrap under each other regardless of the `allow-wrap` prop in every browser except for IE.\nSetting this property will override anything set in the `--px-datetime-range-field-justify-fields`","sourceRange":{"start":{"line":267,"column":6},"end":{"line":271,"column":7}},"metadata":{},"type":"boolean"},{"name":"show-field-titles","description":"This will remove the `to` in-between the fields and\nadd titles above the fields. This allows for a\nmore flexible design.","sourceRange":{"start":{"line":277,"column":7},"end":{"line":281,"column":7}},"metadata":{},"type":"boolean"},{"name":"hoist","description":"Specifies if the dropdown content should get hoisted to a container in order to escape its current stacking context","sourceRange":{"start":{"line":300,"column":7},"end":{"line":303,"column":7}},"metadata":{},"type":"boolean"}],"events":[{"type":"CustomEvent","name":"app-localize-resources-error","description":"app-localize-resources-error","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"app-localize-resources-loaded","description":"app-localize-resources-loaded","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"time-zone-changed","description":"Fired when the `timeZone` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"type":"CustomEvent","name":"from-moment-changed","description":"Fired when the `fromMoment` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"type":"CustomEvent","name":"to-moment-changed","description":"Fired when the `toMoment` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"type":"CustomEvent","name":"px-moment-valid","description":"px-moment-valid","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"type":"CustomEvent","name":"px-validation-message","description":"px-validation-message","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"type":"CustomEvent","name":"is-valid-changed","description":"Fired when the `isValid` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-datetime-range-field"}]}