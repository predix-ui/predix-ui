{"schema_version":"1.0.0","elements":[{"description":"### Usage\n\n    <px-simple-bar-chart chart-data=\"[ [1,2,3] ]\">\n    </px-simple-bar-chart>\n\n    <px-simple-bar-chart chart-data=\"[ [1,2,3], [1,2,3], [1,2,3] ]\">\n    </px-simple-bar-chart>\n\n### Styling\n\nThe following custom properties are available for styling.\n\nCustom property | Description\n:----------------|:-------------\n`--px-simple-bar-chart-text-color` | The text color of the legend text\n`--px-simple-bar-chart-background-color` | The background color of the chart\n`--px-vis-series-color-[n]` | A series of color values to loop through when coloring the chart (see below)\n\n### Styling series colors\n\nIf you want to set custom chart colors, it's recommended to use CSS custom properties. You can set as many colors as you want using the `--px-vis-series-color-[n]` variable pattern, where `n` starts at 0 and increases by 1 with each new color. For example:\n\n    <style>\n      :root {\n        --px-vis-series-color-0: #aaa;\n        --px-vis-series-color-1: #bbb;\n        --px-vis-series-color-2: #ccc;\n        --px-vis-series-color-3: #ddd;\n        ...\n      };\n    </style>\n    <px-simple-bar-chart chart-data=\"[ [1,2,3], [1,2,3], [1,2,3] ]\" ...>\n    </px-simple-bar-chart>\n\nA few things to note:\n\n<ul>\n  <li>If you provide more data series than available series colors, the element will loop through available colors starting at the beginning.</li>\n  <li>If you do not specify any style variables, a default series of data visualization colors will be applied.</li>\n  <li>If you set the `colors` attribute, your style variables will be overridden and ignored.</li>\n  <li>There cannot be gaps in the sequential numbers you provide. Evaluation of the colors will end at the last sequential number. (See example below.)</li>\n</ul>\n\nThe following theme would be incorrect because it has a gap. All series in your chart would be colored red:\n\n    <style>\n      :root {\n        --px-vis-series-color-0: red;\n        /* skips --px-vis-series-color-1 */\n        --px-vis-series-color-2: blue;\n        --px-vis-series-color-3: orange;\n        ...\n      };\n    </style>\n    <px-simple-bar-chart chart-data=\"[ [1,2,3], [1,2,3], [1,2,3] ]\" ...>\n    </px-simple-bar-chart>","summary":"","path":"../px-simple-bar-chart/px-simple-bar-chart.html","properties":[{"name":"_defaultWidth","type":"string","description":"Sets the default width of the component in pixels.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":39,"column":6},"end":{"line":42,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"283\"","inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_defaultHeight","type":"string","description":"Sets the default height of the component in pixels.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":46,"column":6},"end":{"line":49,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"150\"","inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_minimumWidth","type":"string","description":"Sets the minimum width of the component in pixels.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":53,"column":6},"end":{"line":56,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"100\"","inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_minimumHeight","type":"string","description":"Sets the minimum height of the component in pixels.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":60,"column":6},"end":{"line":63,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"50\"","inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"width","type":"string","description":"Sets the width of the component in pixels.","privacy":"public","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":67,"column":6},"end":{"line":71,"column":7}},"metadata":{"polymer":{"observer":"\"_drawChart\""}},"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"height","type":"string","description":"Sets the height of the component in pixels.","privacy":"public","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":76,"column":6},"end":{"line":80,"column":7}},"metadata":{"polymer":{"observer":"\"_drawChart\""}},"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"seriesColorList","type":"Array","description":"Defines an colors in order that will be used for series.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":35,"column":4},"end":{"line":43,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[\"rgb(0,0,0)\",\"rgb(75,75,75)\",\"rgb(125,125,125)\",\"rgb(200,200,200)\"]","inheritedFrom":"PxColorsBehavior.dataVisColors"},{"name":"chartData","type":"Array","description":"This attribute defines the series data to be charted. It needs to\nbe passed in as a multi-dimensional array containing one or more\narrays of numeric values.\n\n```\n  <px-simple-bar-chart\n      chart-data=\"[ [1,2,3] ]\">\n  </px-simple-bar-chart>\n\n  <px-simple-bar-chart\n      chart-data=\"[ [1,2,3], [4,5,6], [7,8,9] ]\">\n  </px-simple-bar-chart>\n```","privacy":"public","sourceRange":{"start":{"line":122,"column":12},"end":{"line":128,"column":13}},"metadata":{"polymer":{"observer":"\"_drawChart\""}}},{"name":"legendLabels","type":"Array","description":"This attribute defines the custom text labels for your bar chart\nlegend. Pass in the values as an array of strings.\n\n```\n  <px-simple-bar-chart\n     ...\n     legend-labels=\"['Alpha', 'Bravo', 'Charlie']\">\n  </px-simple-bar-chart>\n```","privacy":"public","sourceRange":{"start":{"line":143,"column":12},"end":{"line":149,"column":13}},"metadata":{"polymer":{"observer":"\"_drawChart\""}},"defaultValue":"[]"},{"name":"colors","type":"Array","description":"This attribute configures custom bar colors. Pass in the desired\nvalues as an array of hexadecimal value color strings. Prefer\nsettings the colors as CSS style variables to fit in with\nother theming capabilities. Setting the colors attribute directly\nwill override all default colors and any CSS style variable themes.","privacy":"public","sourceRange":{"start":{"line":187,"column":12},"end":{"line":193,"column":13}},"metadata":{"polymer":{"observer":"\"_drawChart\""}},"defaultValue":"[]"},{"name":"legendOrder","type":"string","description":"Sets legend order. Set to `sequential` or `reverse`.","privacy":"public","sourceRange":{"start":{"line":202,"column":12},"end":{"line":206,"column":13}},"metadata":{"polymer":{"observer":"\"_drawChart\""}},"defaultValue":"\"reverse\""}],"methods":[{"name":"attached","description":"Polymer fires this event automatically, we use it to define\nthis.svg and initiate the component","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":89,"column":4},"end":{"line":92,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_drawChart","description":"Removes previous chart, draws new chart. Debounced.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":97,"column":4},"end":{"line":105,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_removeChart","description":"Removes previous chart contents. Debounced.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":110,"column":4},"end":{"line":115,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_removeChartDebounced","description":"Resizes the SVG element and clears any internal\ncontents. This is necessary between redrawing the chart.\nDepends on this.svg being a D3 selection of the chart's SVG element.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":122,"column":4},"end":{"line":127,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_addStyleScope","description":"Adds the style-scope class of the component to all SVG\nchild nodes. This is necessary because Polymer, while applying the class\nto child HTML elements, does not apply the class to child SVG elements","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":135,"column":4},"end":{"line":142,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_addStyleScopeToElement","description":"Pass in a d3 selection and this function will ensure that\nPolymer style-scope is applied.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":147,"column":4},"end":{"line":149,"column":5}},"metadata":{},"params":[{"name":"el"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_clearSVG","description":"Selects the SVG of the chart, shrinks it to 1px by 1px and\nempties it of child elements. This is necessary to do before drawing or\nredrawing the chart.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":155,"column":4},"end":{"line":162,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_getSeriesTotal","description":"Returns the sum of the values of a series.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":167,"column":4},"end":{"line":171,"column":5}},"metadata":{},"params":[{"name":"series"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_getLongestSeries","description":"Returns the longest series based on the array of series passed.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":176,"column":4},"end":{"line":184,"column":5}},"metadata":{},"params":[{"name":"seriesArray"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_calculateTextSize","description":"Method returns the size of an SVG text element and\nits position relative to the viewport.\n\nThe essential DOM function is getBoundingClientRect():\nhttps://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n\nReturns a rect object with the following properties:\n\n   height - float - Height of the rectangle box (This is identical to bottom minus top). Read only.\n   width - float - Width of the rectangle box (This is identical to right minus left). Read only.\n   top - float - Y-coordinate, relative to the viewport origin, of the top of the rectangle box. Read only.\n   left - float - X-coordinate, relative to the viewport origin, of the left of the rectangle box. Read only.\n   bottom - float - Y-coordinate, relative to the viewport origin, of the bottom of the rectangle box. Read only.\n   right - float - X-coordinate, relative to the viewport origin, of the right of the rectangle box. Read only.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":202,"column":4},"end":{"line":221,"column":5}},"metadata":{},"params":[{"name":"text"},{"name":"className"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_calculateTextHeight","description":"Returns height of SVG text element.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":226,"column":4},"end":{"line":236,"column":5}},"metadata":{},"params":[{"name":"text"},{"name":"className"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_calculateTextWidth","description":"Returns width of SVG text element.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":241,"column":4},"end":{"line":251,"column":5}},"metadata":{},"params":[{"name":"text"},{"name":"className"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_reconcileValue","description":"Reconcile the incoming value on an element's attribute\nThis is necessary because some values may come in as one type but\nneed to be interpreted as another type.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":258,"column":4},"end":{"line":281,"column":5}},"metadata":{},"params":[{"name":"value"},{"name":"defaultValue"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_ensureMinimum","description":"Ensures that a Number is equal to or greater than a min.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":286,"column":4},"end":{"line":288,"column":5}},"metadata":{},"params":[{"name":"value"},{"name":"min"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_reconcileWidth","description":"Reconciles the value assigned to width.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":293,"column":4},"end":{"line":299,"column":5}},"metadata":{},"params":[{"name":"value"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_reconcileHeight","description":"Reconciles the value assigned to height.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":304,"column":4},"end":{"line":311,"column":5}},"metadata":{},"params":[{"name":"value"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_reconcileDimensionValue","description":"Reconciles the value assigned to height or width.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":316,"column":4},"end":{"line":319,"column":5}},"metadata":{},"params":[{"name":"value"},{"name":"defaultValue"},{"name":"type"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_getAutoValue","description":"Returns the 'automatic' value for height or width based on\nparent node dimensions.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":325,"column":4},"end":{"line":333,"column":5}},"metadata":{},"params":[{"name":"type"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_getElementPadding","description":"Returns the padding of an element's computed style.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":338,"column":4},"end":{"line":346,"column":5}},"metadata":{},"params":[{"name":"el"}],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"_setDimensions","description":"Sets the dimensions of the component's `this.widthValue`\nand `this.heightValue`.","privacy":"protected","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":352,"column":4},"end":{"line":363,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"ready","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":59,"column":4},"end":{"line":63,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"syncCSSTheme","description":"Retrieves the CSS style variables set on this element and applies them\nto the appropriate properties, triggering a redraw.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":71,"column":4},"end":{"line":76,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_debounceSyncCSSTheme","description":"Debounced function call for `syncCSSTheme` method. Loops through available\nstyle variables to apply them to appropriate objects.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":85,"column":4},"end":{"line":108,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_applyStyleVariables","description":"Called when there is at least one style variable applied (the first is\nexpected to be named `--px-vis-series-color-0`). Loops through each\nstyle variable in the format `--px-vis-series-color-[n]` and applies\nthe resulting values and series color order to the element. Stops looping\nthrough style variables when it finds a gap.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":120,"column":4},"end":{"line":165,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_colorHexToRgb","description":"Converts a hex-format color to RGB.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":176,"column":4},"end":{"line":186,"column":5}},"metadata":{},"params":[{"name":"hex","type":"String","description":"A color in hex format"}],"return":{"type":"String","desc":"A color in RGB format"},"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_checkIfDevSetSeriesColorOrder","description":"Compares seriesColorOrder property value to the seriesColorOrder to determine if the dev set their own override.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":195,"column":4},"end":{"line":209,"column":5}},"metadata":{},"params":[],"return":{"type":"Boolean","desc":"true if dev set seriesColorOrder"},"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_getDataVisColor","description":"Returns the correct color for a particular index.","privacy":"private","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior-colors.html","start":{"line":26,"column":2},"end":{"line":30,"column":3}},"metadata":{},"params":[{"name":"index","type":"Number","description":"The index of the color to retrieve"}],"return":{"type":"String","desc":"The found color in RGB format"},"inheritedFrom":"PxSimpleChartCommonBehavior.colors"},{"name":"_calcIndex","description":"Calculates the index. When we run out of indices, it loops back over\nvalid indices.","privacy":"private","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior-colors.html","start":{"line":42,"column":2},"end":{"line":44,"column":3}},"metadata":{},"params":[{"name":"i","type":"Number","description":"Current index"},{"name":"l","type":"Number","description":"Total length to search"}],"return":{"type":"Number"},"inheritedFrom":"PxSimpleChartCommonBehavior.colors"},{"name":"_getColor","description":"Retrieves the colors for the chart at index `i`. Handles a few cases\nwhere colors can be configured for the chart:\n\n\n# Case 1: Developer sets the `colors` attribute\n\nThe element could be used with a `colors` attribute:\n\n```\n  <px-simple-bar-chart colors=['#aaa','#bbb','#ccc'] ...>\n  </px-simple-bar-chart>\n```\n\nIf it is used with a `colors` attribute and a theme, the theme is\noverriden and ignored:\n\n```\n  <style>\n    :root {\n      --px-vis-series-color-0: #aaa;\n      --px-vis-series-color-1: #bbb;\n      --px-vis-series-color-2: #ccc;\n      ...\n    };\n  </style>\n  <px-simple-bar-chart ...>\n  </px-simple-bar-chart>\n```\n\nIn this case, method loops through the `colors` attribute to retrieve\ncolors using `_getLocalColor`.\n\n\n# Case 2: Developer does not set `colors` attribute\n\nThe element could be used without a `colors` attribute or theme:\n\n```\n  <px-simple-bar-chart colors=['#aaa','#bbb','#ccc'] ...>\n  </px-simple-bar-chart>\n```\n\nOr it could be used without a `colors` attribute and with a theme:\n\n```\n  <style>\n    :root {\n      --px-vis-series-color-0: #aaa;\n      --px-vis-series-color-1: #bbb;\n      --px-vis-series-color-2: #ccc;\n      ...\n    };\n  </style>\n  <px-simple-bar-chart ...>\n  </px-simple-bar-chart>\n```\n\nIn this case, method returns the default or theme colors by calling\n`_getDataVisColor` (from `pxSimpleChartCommonBehavior`) to get the\ndata vis colors supplied by `PxSimpleChartCommonBehavior.colors`.","privacy":"private","sourceRange":{"start":{"line":280,"column":8},"end":{"line":288,"column":9}},"metadata":{},"params":[{"name":"index","type":"Number","description":"The index to retrieve the color from"}],"return":{"type":"String","desc":"The color to apply"}},{"name":"_getLocalColor","description":"Loops through the supplied colors in `colors` attribute and returns\nthe color at `index`.","privacy":"protected","sourceRange":{"start":{"line":294,"column":8},"end":{"line":301,"column":9}},"metadata":{},"params":[{"name":"index"}]},{"name":"_drawChartDebounced","description":"","privacy":"protected","sourceRange":{"start":{"line":303,"column":8},"end":{"line":323,"column":9}},"metadata":{},"params":[]},{"name":"_getSetSizesPromise","description":"","privacy":"protected","sourceRange":{"start":{"line":325,"column":8},"end":{"line":352,"column":9}},"metadata":{},"params":[]},{"name":"_requireLegend","description":"","privacy":"protected","sourceRange":{"start":{"line":354,"column":8},"end":{"line":357,"column":9}},"metadata":{},"params":[]},{"name":"_getMax","description":"","privacy":"protected","sourceRange":{"start":{"line":359,"column":8},"end":{"line":372,"column":9}},"metadata":{},"params":[]},{"name":"_setScales","description":"","privacy":"protected","sourceRange":{"start":{"line":374,"column":8},"end":{"line":380,"column":9}},"metadata":{},"params":[]},{"name":"_getLegendHeightPromise","description":"","privacy":"protected","sourceRange":{"start":{"line":382,"column":8},"end":{"line":384,"column":9}},"metadata":{},"params":[]},{"name":"_drawLegendItem","description":"","privacy":"protected","sourceRange":{"start":{"line":386,"column":8},"end":{"line":431,"column":9}},"metadata":{},"params":[{"name":"i"},{"name":"cumulative"}]},{"name":"_drawLegend","description":"","privacy":"protected","sourceRange":{"start":{"line":432,"column":8},"end":{"line":455,"column":9}},"metadata":{},"params":[{"name":"dryRun"}]},{"name":"_drawBars","description":"","privacy":"protected","sourceRange":{"start":{"line":456,"column":8},"end":{"line":479,"column":9}},"metadata":{},"params":[]},{"name":"_drawBar","description":"","privacy":"protected","sourceRange":{"start":{"line":481,"column":8},"end":{"line":490,"column":9}},"metadata":{},"params":[{"name":"x"},{"name":"y"},{"name":"width"},{"name":"height"},{"name":"i"},{"name":"color"}]}],"staticMethods":[],"demos":[{"url":"index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":88,"column":12},"end":{"line":492,"column":5}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"width","description":"Sets the width of the component in pixels.","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":67,"column":6},"end":{"line":71,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"height","description":"Sets the height of the component in pixels.","sourceRange":{"file":"../px-simple-chart-common-behavior/px-simple-chart-common-behavior.html","start":{"line":76,"column":6},"end":{"line":80,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxSimpleChartCommonBehavior.common"},{"name":"series-color-list","description":"Defines an colors in order that will be used for series.","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":35,"column":4},"end":{"line":43,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxColorsBehavior.dataVisColors"},{"name":"chart-data","description":"This attribute defines the series data to be charted. It needs to\nbe passed in as a multi-dimensional array containing one or more\narrays of numeric values.\n\n```\n  <px-simple-bar-chart\n      chart-data=\"[ [1,2,3] ]\">\n  </px-simple-bar-chart>\n\n  <px-simple-bar-chart\n      chart-data=\"[ [1,2,3], [4,5,6], [7,8,9] ]\">\n  </px-simple-bar-chart>\n```","sourceRange":{"start":{"line":122,"column":12},"end":{"line":128,"column":13}},"metadata":{},"type":"Array"},{"name":"legend-labels","description":"This attribute defines the custom text labels for your bar chart\nlegend. Pass in the values as an array of strings.\n\n```\n  <px-simple-bar-chart\n     ...\n     legend-labels=\"['Alpha', 'Bravo', 'Charlie']\">\n  </px-simple-bar-chart>\n```","sourceRange":{"start":{"line":143,"column":12},"end":{"line":149,"column":13}},"metadata":{},"type":"Array"},{"name":"colors","description":"This attribute configures custom bar colors. Pass in the desired\nvalues as an array of hexadecimal value color strings. Prefer\nsettings the colors as CSS style variables to fit in with\nother theming capabilities. Setting the colors attribute directly\nwill override all default colors and any CSS style variable themes.","sourceRange":{"start":{"line":187,"column":12},"end":{"line":193,"column":13}},"metadata":{},"type":"Array"},{"name":"legend-order","description":"Sets legend order. Set to `sequential` or `reverse`.","sourceRange":{"start":{"line":202,"column":12},"end":{"line":206,"column":13}},"metadata":{},"type":"string"}],"events":[],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-simple-bar-chart"}]}