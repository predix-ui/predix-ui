{"schema_version":"1.0.0","elements":[{"description":"Creates an interactive timeseries chart\n\n### Usage\n\n    <px-vis-timeseries\n      chart-data=\"[[chartData]]\"\n      series-config=\"[[seriesConfig]]\">\n    </px-vis-timeseries>\n\n### Styling\nThe following custom properties are available for styling:\n\nCustom property | Description\n----------------|-------------\n  `--px-vis-axis-color` | The color for the axis lines, axis ticks, and axis tick labels\n  `--px-vis-axis-title-color` | The color for the axis title\n  `--px-vis-axis-inline-title-color` | The color for the axis title\n  `--px-vis-axis-inline-type-color` | The color for the axis lines, axis ticks, and axis tick labels when using 'inline' labelPosition\n  `--px-vis-axis-inline-box-color` | The color for the tick boxes when using 'inline' labelPosition\n  |\n  |\n  |\n  `--px-vis-nav-brush-outline-color` | The stroke (border) color for the brushed box\n  `--px-vis-nav-brush-fill-color` | The fill (background) color for the brushed box\n  `--px-vis-nav-brush-opacity` | The opacity of the brushed box\n  `--px-vis-nav-brush-gradient-fill-color` | The fill (background) color for the brushed box when gradientOverlay is 'true'\n  `--px-vis-nav-brush-gradient-opacity-1` | The start opacity of the brushed box when gradientOverlay is 'true'\n  `--px-vis-nav-brush-gradient-opacity-2` | The end opacity of the brushed box when gradientOverlay is 'true'\n  `--px-vis-nav-brush-handle-fill-color` | The fill (background) color for the handles on the brushed box\n  `--px-vis-nav-brush-handle-lines-color` | The stroke (border) color for the handles on the brushed box\n  `--px-vis-nav-brush-handle-fill-color-hover` | The hover state fill (background) color for the handles on the brushed box\n  `--px-vis-nav-brush-handle-lines-color-hover` | The hover state stroke (border) color for the handles on the brushed box\n  `--px-vis-nav-brush-handle-fill-color-press` | The pressed/mousedown state fill (background) color for the handles on the brushed box\n  `--px-vis-nav-brush-handle-lines-color-press` | The pressed/mousedown state stroke (border) color for the handles on the brushed box\n  |\n  |\n  |\n  `--px-vis-cursor-line-color` | The color for the lines which track the cursor/data\n  |\n  |\n  |\n  `--px-vis-event-line-color` | The default color for the vertical lines below the icon\n  `--px-vis-event-icon-color` | The default color for the event icon markers\n  |\n  |\n  |\n  `--px-vis-gridlines-color` | The color for the gridlines\n  |\n  |\n  |\n  `--px-vis-threshold-color` | The default color for a threshold\n  |\n  |\n  |\n  `--px-vis-zoom-brush-outline-color` | The stroke (border) color for the on-chart zoom/selection brush\n  `--px-vis-zoom-brush-fill-color` | The fill (background) color for the on-chart zoom/selection brush\n  `--px-vis-zoom-brush-fill-opacity` | The opacity for the on-chart zoom/selection brush\n  |\n  |\n  |\n  `--px-vis-register-series-name` | The color of the data series name\n  `--px-vis-register-data-value` | The color of the data series value\n  `--px-vis-register-box` | The color of the box around the register when a scrollbar is present\n  |\n  |\n  |\n  `--px-vis-series-color-0` | These are the colors used to represent the data series on the charts. Used in numerical order by default. Colors MUST start at 0 and cannot contain gaps between numbers.\n  `--px-vis-series-color-1` |\n  `--px-vis-series-color-2` |\n  `--px-vis-series-color-n` |\n  |\n  |\n  |\n  `--px-tooltip-background-color` | The color of the tooltip\n  `--px-tooltip-text-color` | The color of the tooltip text\n  `--px-tooltip-light-background-color` | The color of the light version tooltip\n  `--px-tooltip-light-text-color` | The color of the light version tooltip text\n  `--px-tooltip-light-border-color`| The color of the light version tooltip border\n  |\n  |\n  |\n  `--px-vis-font-family` | The font family for all labels and text","summary":"","path":"../px-vis-timeseries/px-vis-timeseries.html","properties":[{"name":"width","type":"number","description":"The width of the elem; generally the width of the charting area for most components","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":63,"column":4},"end":{"line":66,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.baseSize"},{"name":"height","type":"number","description":"The height of the component; generally the height of the charting area for most components.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":72,"column":4},"end":{"line":75,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.baseSize"},{"name":"_defaultMargin","type":"Object","description":"Copy of the default margin for checking if it has changed","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":95,"column":4},"end":{"line":105,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.margins"},{"name":"margin","type":"Object","description":"Defines the base margin for the chart. Calcs are run to add to the margin to accommodate axes and other elements which exist within the SVG frame, but outside the chart frame.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":110,"column":4},"end":{"line":120,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.margins"},{"name":"chartData","type":"Array","description":"container for the data object that drives the chart / component\nGenerally loaded with an iron-ajax tag (but doesnt have to be)\nThis can be set declaratively","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":390,"column":6},"end":{"line":392,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.dataset"},{"name":"completeSeriesConfig","type":"Object","description":"A configuration file generated by the chart behavior based on seriesConfig and defaultSeriesConfig.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":414,"column":7},"end":{"line":417,"column":8}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.completeSeriesConfig"},{"name":"mutedSeries","type":"Object","description":"A list of user selected muted series. Tied declaratively to series components\n\nThe series name is the key and the value is a boolean for whether it is muted or not:\n\n```\n{\n    'seriesId1':true,\n    'seriesId2':false,\n }\n```\n\nIn this example, seriesId1 is muted. seriesId2 was muted, but has been turned back on.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":476,"column":4},"end":{"line":480,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"{}","inheritedFrom":"PxVisBehavior.mutedSeries"},{"name":"hardMute","type":"boolean","description":"Allows for a \"hard\" muting of the series/categories: the\nseries/category won't show up\nin the tooltip anymore, it's tooltip data won't be shown in the register\nand its extents won't be taken into account by the chart","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":487,"column":5},"end":{"line":490,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehavior.mutedSeries"},{"name":"tooltipData","type":"Object","description":"Data reported back by the interaction space component. Displays the series name, values, and timestamp in the register. tooltipData is in the form:\n\n```\n   {\n       \"time\": \"2015-03-25T20:34:47.085Z\",\n       \"hidden\": false,\n       \"series\":[{\n           \"name\":\"seriesId1\",\n           \"coord\":[xCoord1, yCoord1],  //in pixel space\n           \"value\":{\n               \"x\":xVal1,             //in data space\n               \"seriesId1\":yVal1    //in data space\n           }\n       },{\n           \"name\":\"seriesId2\",\n           \"coord\":[xCoord2, yCoord2],  //in pixel space\n           \"value\":{\n               \"x\":xVal2,             //in data space\n               \"seriesId2\":yVal2    //in data space\n           },\n       }],\n       \"mouse\":[ mouseX, mouseY ],   //in pixel space\n       \"xArr\":[xCoord1 , xCoord2],   //in pixel space\n       \"yArr\":[yCoord1 , yCoord2],   //in pixel space\n   }\n```\n\nWhen not hovering on a chart, the tooltipData should still have the series names in order for them to still appear in the register. IE:\n\n```\n   {\n       \"time\": null,\n       \"hidden\": true,\n       \"series\":[{\n           \"name\":\"seriesId1\",\n           \"value\": null\n       },{\n           \"name\":\"seriesName1\",\n           \"value\": null\n       }],\n       \"mouse\": null,\n       \"xArr\": null,\n       \"yArr\": null\n   }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":692,"column":4},"end":{"line":695,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.tooltipData"},{"name":"defaultEmptyData","type":"Object","description":"The \"empty\" dataset that should be used for tooltipData when not hovering","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":700,"column":4},"end":{"line":704,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"null","inheritedFrom":"PxVisBehavior.tooltipData"},{"name":"extentsData","type":"Object","description":"Data reported back by the interaction space. Displays the interpreted x & y coords, width and height, and domain extents. extentsData is in the form:\n\n```\n  {\n    x1 = {pixel-space}\n    y1 = {pixel-space}\n    x2 = {pixel-space}\n    y2 = {pixel-space}\n    w = {pixels}\n    h = {pixels}\n    eX = [{domain}, {domain}];\n    eY = [{domain}, {domain}];\n  }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":801,"column":4},"end":{"line":804,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.extentsData"},{"name":"extentsAction","type":"string","description":"Used by the chart to interpret if extentsData is strip or zoom","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":808,"column":4},"end":{"line":811,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.extentsData"},{"name":"selectionType","type":"string","description":"The zoom selection type:\n- xy\n- xAxis\n- yAxis","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2289,"column":4},"end":{"line":2293,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"\"xy\"","inheritedFrom":"PxVisBehavior.selectionType"},{"name":"chartExtents","type":"Object","description":"Developer set chart extents for the chart. The chart will draw to whatever values are specified in the chartExtents.\nSetting this and not using \"dynamic\" will prevent the chart from\nhaving to parse the data to find the extents and therefore improve\nperformance for initial rendering\n```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nTo force the chart to calculate based on data, use \"dynamic\".\n```\n {\n     \"x\": [0,\"dynamic\"],\n     \"y\": [-10,\"dynamic\"],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1191,"column":4},"end":{"line":1194,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.chartExtents"},{"name":"dataExtents","type":"Object","description":"```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1227,"column":4},"end":{"line":1230,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.dataExtents"},{"name":"eventConfig","type":"Object","description":"Configuration object to define what event should map to what icon and color.\nThe object has a key being the event name, the value being a configuration object for that event. The configuration object has four properties:\n- `color`: A valid color name found in the px-colors-design\n- `icon`: the reference to the icon; for 'px' it is an icon set and an icon name; for an image, it is a path\n- `type`: 'px', or 'image'.\n- `offset`: a 2 element array with the number of pixels to offset the icon. offset[0] is along the x-axis; offset[1] is along the y-axis; necessary for some icons to adjust their values to achieve a better alignment over the event line.\n- `size`: a size in pixels for images.\n- `enableTooltip` enable/disable tooltip on the event, useful when using a lot of events\n- `firstDateTimeFormat`: moment.js format string for the first part of the timestamp if the x Axis is time based\n- `separator`: the separator character between the two datetime strings\n- `secondDateTimeFormat`: moment.js format string for the second part of the timestamp if the x Axis is time based\n- `tooltipOrientation`: orientation of the tooltip\n- `timezone`: the moment.js timezone to be used for the timestamp\n- `lineWeight`: thickness of the line\n- `dataKey`: the access key for the eventData value to be used to position the event\n```\nFormat: {\n  \"Event-Name-A\":{\n    \"color\": \"a color, rgb or hex\",\n    \"icon\": \"a px icon\",\n    \"type\": \"px\",\n    \"offset\":[0,0],\n    'enableTooltip': true\n  },\n  \"Event-Name-C\":{\n    \"color\": \"a color, rgb or hex\",\n    \"icon\": \"path-to-an-img\",\n    \"type\": \"image\",\n    \"offset\":[0,0]\n  },\n}\n```\n\n```\nExample: {\n  \"Recalibrate\":{\n    \"color\": \"rgb(0,0,255)\",\n    \"icon\": \"px-vis:mov\",\n    \"type\": \"px\",\n    \"offset\":[-3,0]\n  },\n  \"Fan stop\":{\n    \"icon\": \"Dancing_banana.gif\",\n    \"type\": \"image\",\n    \"offset\":[-2,-20],\n    \"size\":\"25\"\n   }\n}\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1328,"column":4},"end":{"line":1330,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.events"},{"name":"defaultEventConfig","type":"Object","description":"Configuration object to define what the default icon should be. This gets used if a) no eventConfig is defined or b) the particular event is not defined in the eventConfig object.\n\n```\nDefault: {\n  'color': 'grey7', //or theme var\n  'icon': 'px-vis:mov',\n  'type': 'px',\n  'offset': 0,\n  'lineColor': 'grey9',\n  'lineWeight': 1,\n  'enableTooltip': true\n  'firstDateTimeFormat': 'HH:mm:ss ZZ',\n  'secondDateTimeFormat': 'DD MMM YYYY',\n  'separator': '|',\n  'timezone': 'utc',\n  'tooltipOrientation': 'left'\n}\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1354,"column":4},"end":{"line":1356,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.events"},{"name":"eventData","type":"Array","description":"container for the data object that drives the events\nGenerally loaded with an iron-ajax tag (but doesnt have to be)\nThis can be set declaratively","privacy":"public","sourceRange":{"start":{"line":747,"column":6},"end":{"line":750,"column":7}},"metadata":{"polymer":{"notify":true}}},{"name":"svg","type":"Object","description":"svg is a holder for the d3 instantiated svg container to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":46,"column":4},"end":{"line":49,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_uniqueIdsUsed","type":"Array","description":"Array of unique IDs generated for this comp. cleaned from global\nstore on detached","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2202,"column":5},"end":{"line":2207,"column":6}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"PxVisBehavior.uniqueIds"},{"name":"pxSvgElem","type":"Object","description":"","privacy":"public","sourceRange":{"start":{"line":751,"column":6},"end":{"line":754,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{}"},{"name":"pxSvgElemLower","type":"Object","description":"The SVG element inside the chart - not a D3 selected element. Used when there are two svgs in a chart","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":293,"column":4},"end":{"line":296,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.svgLower"},{"name":"canvasLayersConfig","type":"Object","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2760,"column":4},"end":{"line":2763,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehavior.canvasLayersConfig"},{"name":"canvasContext","type":"Object","description":"canvasContext is a holder for the instantiated canvas context to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":319,"column":4},"end":{"line":322,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"canvasLayers","type":"Object","description":"An array of the generated layers","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":328,"column":4},"end":{"line":332,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"_isAttached","type":"boolean","description":"Boolean tracking if we are attached","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2360,"column":4},"end":{"line":2363,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehavior.isAttached"},{"name":"renderToCanvas","type":"boolean","description":"Boolean to specify if drawings should render to canvas instead of svg","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":397,"column":4},"end":{"line":401,"column":5}},"metadata":{"polymer":{"observer":"\"_renderToCanvasChanged\""}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorD3.renderToCanvas"},{"name":"x","type":"Function","description":"x is a holder for the d3 instantiated scale object\nMust be set in the svg component and passed to all components so they know the drawing scale.\nThis can be set declaratively\n\nSee: https://github.com/d3/d3/blob/master/API.md#scales-d3-scale","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":445,"column":4},"end":{"line":448,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"y","type":"Object","description":"y is a holder for the d3 instantiated scale object\nMust be set in the svg component and passed to all components so they know the drawing scale.\nThis can be set declaratively\n\nSee: https://github.com/d3/d3/blob/master/API.md#scales-d3-scale","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":459,"column":4},"end":{"line":462,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"isMultiY","type":"boolean","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":463,"column":4},"end":{"line":467,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"selectedDomain","type":"Object","description":"New chart extents selected by the user\n\nServes as a trigger for the scale component to redefine the chart extents","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":634,"column":4},"end":{"line":640,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.selectedDomain"},{"name":"range","type":"Object","description":"Range object defining the time span\n  * Format ISO8601 strings\n```\n{\n   \"from\": \"2013-01-07T22:44:30.652Z\",\n   \"to\" : \"2013-02-04T22:44:30.652Z\"\n}\n```\n\nUpdates and is updated by SelectedDomain","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":672,"column":4},"end":{"line":675,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"name":"_preventDomainUpdate","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":676,"column":4},"end":{"line":679,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"name":"_preventRangeUpdate","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":680,"column":4},"end":{"line":683,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"name":"clipPath","type":"string","description":"Holder for a clipping path ID","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":787,"column":4},"end":{"line":790,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.clipPath"},{"name":"seriesClipPath","type":"string","description":"A more restricting clip path used to limit where the series are being drawn","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":795,"column":4},"end":{"line":798,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.clipPath"},{"name":"seriesColorList","type":"Array","description":"Defines an colors in order that will be used for series.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":35,"column":4},"end":{"line":43,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[\"rgb(0,0,0)\",\"rgb(75,75,75)\",\"rgb(125,125,125)\",\"rgb(200,200,200)\"]","inheritedFrom":"PxColorsBehavior.dataVisColors"},{"name":"xAxisType","type":"string","description":"Sets the type of data for the x values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `scaleBand`: another ordinal type meant to create a bar instead of a point.\n- `time`: for time domains.\n- `timeLocal`: for local time domains.\n- `linear`: for continuous input domains, such as numbers.\n- `log`: for continuous input domains displayed logarithmicly. NOTE: Per d3 docs, this scale cannot cross or include 0.\n- `pie`: for pie/donut charts","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1099,"column":4},"end":{"line":1102,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"linear\"","inheritedFrom":"PxVisBehavior.axisTypes"},{"name":"yAxisType","type":"string","description":"Sets the type of data for the y values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `scaleBand`: another ordinal type meant to create a bar instead of a point.\n- `linear`: for continuous input domains, such as numbers.\n- `log`: for continuous input domains, such as numbers.\n- `pie`: for pie/donut charts","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1113,"column":4},"end":{"line":1116,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"linear\"","inheritedFrom":"PxVisBehavior.axisTypes"},{"name":"seriesConfig","type":"Object","description":"A configuration file to associate series order, name, type, and colors.\n\nAssociation of name, type, and seriesNumber should be developer set. Color and axis are optional.\n\n```\n {\n    \"seriesKey\": {  //seriesKey is a unique identifier for the configuration\n        \"type\": \"line\",  //line or scatter or both\n        \"priority\": 0, //relative priority is used to decide which series draw on top of each other. priority 0 => smaller priority. 2 draws over 1, which itself draws over 0, etc.. CANVAS ONLY\n        \"markerSymbol\": \"diamond\" //if using scatter different markerSymbol can be used. See \"markerSymbol\" in px-vis-scatter\n        \"markerSize\": \"64\" //if using scatter allows to change the size of markers\n        \"markerScale\": \"2\" //if using scatter allows to scale the size of markers\n        \"markerFillOpacity\": \"0.5\" //if using scatter allows to specify the opacity of the inside of the marker\n        \"markerStrokeOpacity\": \"1\" //if using scatter allows to specify the opacity of the outside of the marker\n        \"strokeWidth\": \"1\" //if using line, allows you to specify the thickness of the line\n        \"mutedOpacity\": \"0.3\" //opacity value to use when muting a serie\n        \"name\": \"My Series\",  //human readable name\n        \"x\": \"x\",  //index or key name for independent variable\n        \"y\": \"y\",  //index or key name for dependent variable\n        \"xAxisUnit\": \"Volt\" //Unit to be used for the X axis. Can be ignored if x axis is time based\n        \"yAxisUnit\": \"Oranges\" //unit to be used for the Y axis.\n        \"xMin\": 0,  // minimum x value\n        \"xMax\": 100,  //maximum x value\n        \"yMin\": 5,  //minimum y value\n        \"yMax\": 50,  //maximum y value\n        \"hideInRegister\": true, //dont show in the register\n        \"color\": \"rgb(0,0,0)\", //color you want for the series\n        \"negativeColor\": \"rgb(255,255,255)\", //color you want negative values of the series to be (not all charts)\n        \"interpolationFunction\": Px.d3.curveBasis, //The line interpretor you want to use. See property 'interpolationFunction'\n        \"axis\": {\n            \"id\": \"AXIS_ID\"   //a unique identifier\n            \"side\": \"left\"    //the side that you want the axis to draw on, `left` or `right`\n            \"number\": 1       //the order of the axis on each side\n         }\n    }\n }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":127,"column":6},"end":{"line":132,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"_defaultSeriesConfig","type":"Object","description":"A default configuration file. It fills in the missing parts of seriesConfig. Any options from seriesConfig can be specified in the defaultSeriesConfig and will be automatically used if not defined in the seriesConfig\n\nDefault:\n\n```\n {\n    \"type\": \"line\",\n    \"x\": 'x',\n    \"axis\": {\n      \"id\": \"defaultAxis\",\n      \"side\": \"left\",\n      \"number\": 1\n  }}\n```","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":150,"column":6},"end":{"line":163,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{\"type\":\"line\",\"x\":\"x\",\"axis\":{\"id\":\"defaultAxis\",\"side\":\"left\",\"number\":1}}","inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"defaultSeriesConfig","type":"Object","description":"Overwrites to the default configuration file. The defaultSeriesConfig is used to fill in the missing parts of seriesConfig. Any option from seriesConfig can be specified in the defaultSeriesConfig and will be automatically used if not defined in the seriesConfig","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":169,"column":6},"end":{"line":173,"column":7}},"metadata":{"polymer":{"observer":"\"_updateDSC\""}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"includeAllSeries","type":"boolean","description":"A boolean flag on whether to include all the series in the data.\n- `false`: only series defined in the seriesConfig file will be drawn\n- `true`: All series in the dataset will be drawn. Defaults will be used for the seriesConfig. If this is used do not specify a seriesConfig","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":180,"column":6},"end":{"line":183,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"_seriesKeys","type":"Array","description":"Representes the keys avaiable in completeSeriesConfig. It's being set\n before completeSeriesConfig is set","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":188,"column":6},"end":{"line":190,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"preventCompleteSeriesConfigCalc","type":"boolean","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":192,"column":6},"end":{"line":195,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"domainChanged","type":"number","description":"Number which increments up when the domain(s) has(have) changed.\n\n0 (false) indicates that domains have not been set.\n\nServes as a trigger for many elements to redraw.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":527,"column":4},"end":{"line":531,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"0","inheritedFrom":"PxVisBehaviorD3.domainUpdate"},{"name":"tooltipConfig","type":"Object","description":"Configuration object used to customize the tooltip cosmetic properties.\nPlease refer to px-vis-tooltip and px-vis-register (https://github.com/PredixDev/px-vis) for a list of supported properties\nMost interesting properties include:\n- width\n- height\n- tooltipStyle\n- forceDateTimeDisplay","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1155,"column":4},"end":{"line":1157,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.registerConfigs"},{"name":"registerConfig","type":"Object","description":"Configuration object used to customize the register cosmetic properties.\nPlease refer to px-vis-register (https://github.com/PredixDev/px-vis) for a list of supported properties","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1163,"column":4},"end":{"line":1165,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.registerConfigs"},{"name":"xAxisConfig","type":"Object","description":"Configuration object used to customize the X axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1241,"column":4},"end":{"line":1243,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.axisConfigs"},{"name":"yAxisConfig","type":"Object","description":"Configuration object used to customize the Y axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1249,"column":4},"end":{"line":1251,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.axisConfigs"},{"name":"hideRegister","type":"boolean","description":"Allows to hide the register","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1089,"column":4},"end":{"line":1093,"column":5}},"metadata":{"polymer":{"observer":"\"_hideRegisterChanged\""}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.registerPositioning"},{"name":"_registerType","type":"string","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1094,"column":4},"end":{"line":1096,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.registerPositioning"},{"name":"_registerWrapperClass","type":"string","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1097,"column":4},"end":{"line":1100,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"PxVisBehaviorChart.registerPositioning"},{"name":"_parentResizable","type":"Object","description":"The closest ancestor element that implements `IronResizableBehavior`.","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":41,"column":6},"end":{"line":41,"column":75}},"metadata":{"polymer":{"observer":"\"_parentResizableChanged\""}},"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_notifyingDescendant","type":"boolean","description":"True if this element is currently notifying its descendant elements of\nresize.","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":47,"column":6},"end":{"line":47,"column":57}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"preventResize","type":"boolean","description":"Prevents the chart from automatically resizing to fit its container","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":806,"column":6},"end":{"line":810,"column":7}},"metadata":{"polymer":{"observer":"\"_preventResizeChanged\""}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"chartHorizontalAlignment","type":"string","description":"This allows to decide how the chart\ndrawing will be horizontally aligned when smaller than its container. Values:\n- center\n- left\n- right\n\nif any other value is used then left alignment will be chosen","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":820,"column":6},"end":{"line":823,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"center\"","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"chartVerticalAlignment","type":"string","description":"This allows to decide how the chart\ndrawing will be vertically aligned when smaller than its container. Values:\n- center\n- top\n- bottom\n\nif any other value is used then top alignment will be chosen","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":833,"column":6},"end":{"line":836,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"center\"","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"_chartWrapperClass","type":"string","description":"Class to be used on the external wrapper within the chart","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":840,"column":6},"end":{"line":843,"column":7}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"debounceResizeTiming","type":"number","description":"Timing (in ms) to be used for iron resize when the chart auto size\n(preventResize = false)","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":848,"column":6},"end":{"line":851,"column":7}},"metadata":{"polymer":{}},"defaultValue":"250","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"thresholdConfig","type":"Object","description":"Configuration object used to customize the threshold properties.\nPlease refer to px-vis-threshold (https://github.com/PredixDev/px-vis) for a list of supported properties","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2928,"column":4},"end":{"line":2930,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.thresholdConfig"},{"name":"_defaultThresholdConfig","type":"Object","description":"Configuration object to define what the default icon should be. This gets used if a) no eventConfig is defined or b) the particular event is not defined in the eventConfig object.\n\n```\nDefault: {\n  'strokeWidth': '1',\n  'dashPattern': '5,2'\n}\n```","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1541,"column":4},"end":{"line":1549,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{\"strokeWidth\":\"1\",\"dashPattern\":\"5,2\"}","inheritedFrom":"PxVisBehavior.thresholds"},{"name":"thresholdData","type":"Array","description":"Data representing the events. Example:\n```\n[\n     { \"for\":\"y0\", \"type\":\"max\", \"value\":35.4784 },\n     { \"for\":\"y0\", \"type\":\"min\", \"value\":7.6531 },\n     { \"for\":\"y0\", \"type\":\"mean\", \"value\":15.330657585139331 },\n     { \"for\":\"y1\", \"type\":\"mean\", \"value\":75 },\n     { \"for\":\"\", \"type\":\"quartile\", \"value\":17 }\n ]\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1562,"column":4},"end":{"line":1564,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.thresholds"},{"name":"layer","type":"Array","description":"Array of the svg layers","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1479,"column":4},"end":{"line":1482,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"numberOfLayers","type":"number","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1483,"column":4},"end":{"line":1485,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"generateLayers","type":"boolean","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1486,"column":4},"end":{"line":1489,"column":5}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"navigatorConfig","type":"Object","description":"Configuration object used to customize the navigator cosmetic properties.\n\nThis can be a collection of other configureation properties, such as axisConfig","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1275,"column":4},"end":{"line":1277,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.navigatorConfig"},{"name":"serieToRedrawOnTop","type":"Array","description":"Array containing a set of series to redraw on top of everything (in the order\nthey are found in this array)","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1916,"column":4},"end":{"line":1918,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.serieToRedrawOnTop"},{"name":"dynamicMenuConfig","type":"Array","description":"The config used by a dynamic menu to create menu entries. Example:\n```\n[\n    {\n     'name': 'Delete',\n      'action': function(data) {\n        console.log('run delete');\n      },\n      'actionContext': aComponent,\n      'eventName': 'delete',\n      'icon': 'fa-trash'\n    },\n    {\n      'name': 'Bring To Front',\n      'action': function(data) {\n        console.log('run bring to front');\n      },\n      'eventName': 'bring-to-front',\n      'icon': 'fa-arrow-up'\n    }\n  ];\n```\n\n- `action` is function that will be run when a menu item is clicked. You can pass\na specific context to be used in that function through `actionContext`. Otherwsie the\ncontext is going to be the chart itself. The `data` parameter has 2 properties: `itemConfig`\nwhich is this specific menu item config object and `additionalDetail` which represents the\nregister item: `value` and `name` (name is the serie id). Please note that because `itemConfig`\nis being passed back you could tie anything to it and have it available in this function.\nIf dynamicMenuConfig is passed in directly in the HTML then `action` will have to be passed in\nas a string with quotes escaped rather than directly as a function.\n- `name` is the menu item displayed text\n- if `eventName` is defined then an event with this name will be fired when clicking the item\nthe detail of this event will include `data` which ahs 2 properties: `itemConfig` and `additionalDetail`\njust like `action` is getting. The event is fired from the chart\n- `icon` is optional and defines a font-awesome icon to be used for the menu entry","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2032,"column":4},"end":{"line":2034,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.dynamicMenuConfig"},{"name":"showGaps","type":"boolean","description":"A boolean spcifying if the line should show gaps on undefined data.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":1421,"column":4},"end":{"line":1424,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorD3.lineGaps"},{"name":"axes","type":"Array","description":"Represents all axes plotted by the chart, including muted ones.\nIt doesn't guarantee to have the same order as the current visual\nrepresentation.\nCan be set by the developer to define which axes to plot","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1586,"column":4},"end":{"line":1588,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.dimensions"},{"name":"dimensions","type":"Array","description":"An array of dimensions (axes) which the chart uses. This array represents\nthe current state of all axes: muted axes won't be included and the\narray is ordered based on the current visual representation.\nDo not set at a chart level, only read","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1595,"column":4},"end":{"line":1598,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.dimensions"},{"name":"seriesKey","type":"string","description":"A string specifying which key to use as the series","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1603,"column":4},"end":{"line":1605,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.dimensions"},{"name":"seriesToAxes","type":"Object","description":"Object linking which series belong to which axis","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2178,"column":5},"end":{"line":2180,"column":6}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.seriesToAxes"},{"name":"leftAxisSize","type":"number","description":"The size of an individual axis","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2221,"column":4},"end":{"line":2224,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"rightAxisSize","type":"number","description":"The size of an individual axis","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2230,"column":4},"end":{"line":2233,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"numLeftAxes","type":"number","description":"Number of axes on the left","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2239,"column":4},"end":{"line":2242,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"numRightAxes","type":"number","description":"Number of axes on the right","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2248,"column":4},"end":{"line":2251,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"_axisX","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2253,"column":4},"end":{"line":2256,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"_axisDomainChanged","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2258,"column":4},"end":{"line":2261,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0","inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"_multiAxisSeriesConfig","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2263,"column":4},"end":{"line":2266,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"offset","type":"Array","description":"An optional offset for a variety of elements","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":143,"column":4},"end":{"line":148,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[0,0]","inheritedFrom":"PxVisBehavior.sizing"},{"name":"preventWebWorkerSynchronization","type":"boolean","description":"Prevents the chart from synchronizing its data with a webworker.\nThis can be turned on to minimize the memory footprint of the\nchart\nWARNING: turning the synchronization off will:\n- prevent the chart from being able to use crosshair feature\n- slow down data search for tooltip/register\n- slow down calculating extents for the chart if it needs to\n\nWe advise against turning it off but it might be beneficial in\nspecific scenarios (high number of small charts with minimum\ninteraction for example)","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3078,"column":6},"end":{"line":3081,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehavior.preventWebWorkerSynchronization"},{"name":"_extents","type":"Array","description":"Holder for chart extents from the seriesConfig object","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":49,"column":4},"end":{"line":52,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[[],[]]","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_chartDataHasChanged","type":"number","description":"Boolean to detect if the chart data has changed","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":57,"column":4},"end":{"line":60,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_calculatingDomain","type":"boolean","description":"Boolean to indicate if we are currently calculating the domain","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":65,"column":4},"end":{"line":68,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_defaultScaleValue","type":"Object","description":"default extents to use if none are specified\n\n0 for y axis for best practice","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":75,"column":4},"end":{"line":83,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{\"x\":[null],\"y\":[null]}","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"disableDynamicUpdate","type":"boolean","description":"Defines if the viewable chart extents should update when chartData is updated","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":89,"column":4},"end":{"line":92,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_runOnce","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":94,"column":4},"end":{"line":97,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"chartId","type":"string","description":"Internal unique ID","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":102,"column":4},"end":{"line":104,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"scalePadding","type":"number","description":"The padding for ordinal type scales - effective controls the spacing between ordinal groups\n\nExpressed as a percent of the ordinal group width, so a value of 0.5 for a bar chart means your bar and the gap between bars are the same size","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":111,"column":4},"end":{"line":114,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0.5","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"paddingOuter","type":"number","description":"The outer padding for ordinal type scales - effective controls the spacing between the first and last ordinal group the the axes\n\nExpressed as a percent of the ordinal group width, so a value of 0.5 for a bar chart means your bar and the gap between bars are the same size","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":120,"column":5},"end":{"line":123,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0.1","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"logBase","type":"string","description":"The base for logarithmic type scales","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":127,"column":4},"end":{"line":130,"column":5}},"metadata":{"polymer":{}},"defaultValue":"10","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"actionConfig","type":"Object","description":"Configuration used to define what actions happen on events. Each key represents an event,\neach value can be:\n- a predefined action found as a key in px-vis-interaction-space `actionMapping`\n- a function, where `this` will be bound to the chart and the function's argument will be the mouse position on the chart","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2055,"column":4},"end":{"line":2058,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.actionConfig"},{"name":"_extentsDataRoutes","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1653,"column":4},"end":{"line":1662,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.extentsDataRouter"},{"name":"zoomStack","type":"Array","description":"Stack of previous zooms","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1705,"column":4},"end":{"line":1710,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"zoomInPercentage","type":"number","description":"Percentage used to calculate new extents when using zoomIn feature.\nThe higher the number the more it will zoom in. should be less than 1.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1715,"column":4},"end":{"line":1718,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0.5","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"zoomOutPercentage","type":"number","description":"Percentage used to calculate new extents when using zoomOut feature.\nThe higher the number the more it will zoom out. should be less than 1.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1723,"column":4},"end":{"line":1726,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0.5","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"_isPanning","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1728,"column":4},"end":{"line":1731,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"_originalOrdinalExtents","type":"Array","description":"Original extents before zooming if one of the axis is ordinal","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1782,"column":4},"end":{"line":1784,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"toolbarSubConfig","type":"Object","description":"toolbarSubConfig can be passed around from a toolbar to another so that clicking\non a \"global\" toolbar drives the sub row state for other toolbars","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2074,"column":4},"end":{"line":2076,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.toolbarSubConfig"},{"name":"_oldLinesDrawDebounceTime","type":"number","description":"holds the previous drawing debounce timing (before panning)","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2094,"column":4},"end":{"line":2096,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.noDebounceOnPanning"},{"name":"_oldScatterDrawDebounceTime","type":"number","description":"holds the previous drawing debounce timing (before panning)","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2100,"column":4},"end":{"line":2102,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.noDebounceOnPanning"},{"name":"_oldThresholdDrawDebounceTime","type":"number","description":"holds the previous drawing debounce timing (before panning)","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2106,"column":4},"end":{"line":2108,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.noDebounceOnPanning"},{"name":"interactionSpaceConfig","type":"Object","description":"Configuration object used to customize the interaction space\nPlease refer to px-vis-interation space (https://github.com/PredixDev/px-vis) for a list of supported properties.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1187,"column":4},"end":{"line":1190,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorChart.interactionSpaceConfig"},{"name":"toolbarConfig","type":"Object","description":"Configuration object used to customize the toolbar\nPlease refer to px-vis-toolbar (https://github.com/PredixDev/px-vis) for a list of supported properties.\nMost interesting properties include:\n- config (complex object for customizing the toolbar)\n- horizontalAlignment\n- subToolbarAlignment","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1216,"column":4},"end":{"line":1218,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.chartToolbarConfig"},{"name":"showTooltip","type":"boolean","description":"Whether to display the tooltip","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2179,"column":4},"end":{"line":2182,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.showTooltip"},{"name":"_internalShowTooltip","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2183,"column":4},"end":{"line":2186,"column":5}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxVisBehaviorChart.showTooltip"},{"name":"_computedShowTooltip","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2187,"column":4},"end":{"line":2190,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"PxVisBehaviorChart.showTooltip"},{"name":"interpolationFunction","type":"Function","description":"A d3 function used to interpolate the series lines.\n\nCan also be a string referencing simple, built in d3 functions:\n- `\"curveBasis\"`\n- `\"curveBasisClosed\"`\n- `\"curveBasisOpen\"`\n- `\"curveLinear\"`\n- `\"curveLinearClosed\"`\n- `\"curveMonotoneX\"`\n- `\"curveMonotoneY\"`\n- `\"curveNatural\"`\n- `\"curveStep\"`\n- `\"curveStepAfter\"`\n- `\"curveStepBefore\"`\n\nSee: https://github.com/d3/d3-shape/blob/master/README.md#curves","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":1202,"column":4},"end":{"line":1204,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorD3.interpolationFunction"},{"name":"_basicInterpolators","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":1206,"column":4},"end":{"line":1223,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorD3.interpolationFunction"},{"name":"_tooltipCalcMousePosHandler","type":"Function","description":"handler to the function for calculating tooltip pos","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2870,"column":6},"end":{"line":2872,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.tooltipFollowMouseCalculation"},{"name":"_tooltipCalcHoverTargetId","type":"string","description":"Id of the target of hovering","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2876,"column":6},"end":{"line":2878,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.tooltipFollowMouseCalculation"},{"name":"mousePosition","type":"Array","description":"The mouse position in pixel coordinates. Only valid if _computedShowTooltip is true","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2882,"column":6},"end":{"line":2884,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.tooltipFollowMouseCalculation"},{"name":"highlighterConfig","type":"Object","description":"Configuration object used to customize the highlighter properties.\nPlease refer to px-vis-point-highlighter and px-vis-line-highlighter (https://github.com/PredixDev/px-vis) for a list of supported properties\nMost interesting properties include:\n- `fuzz` : +/- search window around the datapoint value\n- 'differenDataset' : if this chart has a different dataset from the crosshair data origin chart","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1302,"column":4},"end":{"line":1304,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.highlighterConfigs"},{"name":"crosshairData","type":"Object","description":"Data reported back by the interaction space component so charts can share a crosshair. Has two sets of data: 1) the full data retrieved at the shared key so if all charts use the same datasets, this data can just be displayed on all the charts. 2) a list of just the shared key so if they use different datasets, a search for the closest data at each point can be made. crosshairData is in the form:\n\n```\n   {\n       \"rawData\":[{\n           \"[[sharedKey]]\": [[sharedKeyVal1]],\n           \"[[key1]]\":[[val]],\n           \"[[key2]]\":[[val]]\n       },{\n           \"[[sharedKey]]\": [[sharedKeyVal2]],\n           \"[[key1]]\":[[val]],\n           \"[[key2]]\":[[val]]\n       }],\n       \"timeStamps\":[ timeStamp1, timeStamp2 ]\n   }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":742,"column":4},"end":{"line":745,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"generatingCrosshairData","type":"string","description":"Bool indicating if interaction space is currently generating data","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":751,"column":4},"end":{"line":755,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"false","inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"crosshairPixelSearch","type":"number","description":"Allows the crosshair to search all datapoints within a pixel radius. If set\nto 0 will only pick up the closest point","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":761,"column":4},"end":{"line":764,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0","inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"wwDataSyncCounter","type":"number","description":"Updated every time the chart gets new data and a sync request\nto the web worker happened. Use it for triggering observers\ninstead of chartData if the observer needs the data in the webworker\n(i.e kicking another webworker processing)","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3102,"column":4},"end":{"line":3105,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.wwDataSyncCounter"},{"name":"_wwSyncRequestDataDeletion","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":529,"column":6},"end":{"line":532,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.webWorkerSynchronization"},{"name":"_wwSyncDataDeleted","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":533,"column":6},"end":{"line":536,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.webWorkerSynchronization"},{"name":"_wwSyncDataDeletionTimeout","type":"number","description":"After detaching the chart time after which we will delete\nthe synced data of the chart from the webworker. If the\nchart is re-attached in the meantime the deletion will\nbe canceled to avoid a re-sync","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":543,"column":6},"end":{"line":546,"column":7}},"metadata":{"polymer":{}},"defaultValue":"1500","inheritedFrom":"PxVisBehaviorChart.webWorkerSynchronization"},{"name":"_wwSyncDataPropName","type":"string","description":"Name of the property to be kept in sync. Usually chartData but can\nbe overriden for a filtered dataset instead for example","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":551,"column":6},"end":{"line":554,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"chartData\"","inheritedFrom":"PxVisBehaviorChart.webWorkerSynchronization"},{"name":"__localizationCache","type":"Object","description":"Internal singleton cache. This is the private implementation of the\nbehaviour; don't interact with it directly.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":140,"column":2},"end":{"line":144,"column":3}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"language","type":"string","description":"set a default for localizing","privacy":"public","sourceRange":{"start":{"line":816,"column":6},"end":{"line":819,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"en\""},{"name":"resources","type":"Object","description":"List of key/values to be included for translating this component","privacy":"public","sourceRange":{"start":{"line":810,"column":6},"end":{"line":812,"column":7}},"metadata":{"polymer":{}}},{"name":"formats","type":"Object","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"useKeyIfMissing","type":"boolean","description":"Use the key for localization if value for  language is missing. Should\nalways be true for  our components","privacy":"public","sourceRange":{"start":{"line":824,"column":6},"end":{"line":827,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true"},{"name":"localize","type":"Function","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubbleEvent","type":"boolean","description":"If true, will bubble up the event to the parents","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"stripeConfig","type":"Object","description":"Configuration file for the striping.\n\nExample:\n{\n \"stripe1\": {\n      fillColor: \"rgb(255,0,0)\",\n      fillOpacity: 0.5\n },\n \"stripe2\": {\n      fillColor: \"rgb(0, 255,0)\",\n      fillOpacity: 0.5\n      dash: [5,2]\n  }\n}\n\n`dash` option is for single timestamp entries. This will draw a dashed line instead of an area. Default dash pattern is [5,2]. To create a solid line instead, put [0]","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3138,"column":4},"end":{"line":3140,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.stripProperties"},{"name":"stripeData","type":"Object","description":"Data to create the striping. A list of start and end pairs for each strip type\n\nExample:\n{\n \"stripe1\": [\n   [t1, t2],\n   [t3, t4]\n],\n \"stripe2\": [\n   [t5, t6],\n   [t7, t8]\n]\n}","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3156,"column":4},"end":{"line":3160,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"{}","inheritedFrom":"PxVisBehavior.stripProperties"},{"name":"stripeType","type":"string","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3161,"column":4},"end":{"line":3163,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.stripProperties"},{"name":"preventInitialDrawing","type":"boolean","description":"blocks initial drawings of axis until set to false","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2266,"column":4},"end":{"line":2269,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehavior.preventInitialDrawing"},{"name":"drawDebounceTime","type":"Object","description":"Debounce time to use for different types of rendering","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":40,"column":4},"end":{"line":50,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{\"chartData\":10,\"filteredChartData\":10,\"highlightData\":10,\"markers\":10}","inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"_oldDrawDebounceTime","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":51,"column":4},"end":{"line":53,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"debounceOnPanning","type":"boolean","description":"Whether the drawings will be debounced on panning the chart.\nWhen not debounced the redraw will happen more often on panning,\nwhich should result in a smoother experience. However if rendering\na big number of points this can have the opposite effect since\nit wil redraw too often comapred tot he time taken to re render everything","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":61,"column":4},"end":{"line":64,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"_progressiveRenderingCounter","type":"Object","description":"Counter to track progressive rendering requests and only draw the latest one","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":142,"column":4},"end":{"line":147,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_canvasTargets","type":"Object","description":"Current registered targets to draw on canvas during rendering","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":151,"column":4},"end":{"line":156,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_svgTargets","type":"Object","description":"Current registered targets to draw on svg during rendering","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":160,"column":4},"end":{"line":165,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"rendererMinimumPointsPerFrame","type":"number","description":"The minimum number of points to render per frame\neven if the chart is laggy","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":170,"column":4},"end":{"line":173,"column":5}},"metadata":{"polymer":{}},"defaultValue":"50","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"rendererFrameDurationTarget","type":"number","description":"Target duration (in ms) for one frame. The renderer will try to render\nas much data as possible in that given timeframe before calling the next\nanimation frame.\nWARNING: this needs to be higher than 16ms since by default\nrequestAnimationFrame will be called every ~16ms, so our target needs to\nbe higher to ensure we keep the processor busy","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":182,"column":4},"end":{"line":185,"column":5}},"metadata":{"polymer":{}},"defaultValue":"20","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_internalRendererFrameDurationTarget","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":186,"column":4},"end":{"line":189,"column":5}},"metadata":{"polymer":{}},"defaultValue":"20","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"rendererFrameCountToAverage","type":"number","description":"Number of previous frames to average for the adaptive\nprogressive rendering","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":194,"column":4},"end":{"line":197,"column":5}},"metadata":{"polymer":{}},"defaultValue":"3","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_previousFramesTiming","type":"Object","description":"For each renderer type the previous frames number of points and duration for line and scatter","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":201,"column":4},"end":{"line":210,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_hasBeenDetached","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":211,"column":4},"end":{"line":214,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"markerConfig","type":"Object","description":"Configuration object to define what marker should map to what icon, color, and row.\nThe object has a key being the marker name, the value being a configuration object for that marker. The configuration object has four properties:\n- `color`: A rgb color value for the fill or stroke.\n- `priority`: relative priority is used to decide which type of markers draw on top of each other. priority 0 => smaller priority. 2 draws over 1, which itself draws over 0, etc..\n- `markerFillOpacity`: the opacity of the inside of the marker\n- `markerStrokeOpacity`: the opacity of the outside of the marker\n- `markerSymbol`: the symbol type; see below\n- `markerSize`: specifies the size of markers\n- `markerScale`: allows to scale the size of markers\n- `location`: \"top\" or \"bottom\"\n- `row`: the row number on the top or the bottom, starting at 0\n- `showTooltip`: whether a tooltip should be shown on hover\n- `firstDateTimeFormat`: used to format the date part of the timestamp in the tooltip\n- `secondDateTimeFormat`: used to format the time part of the timestamp in the tooltip\n- `separator`: symbol between date and time in the tooltip\n- `timezone`: timezone to use for the timestamp in the tooltip\n- `tooltipOrientation`: orientation of the tooltip: \"left\", \"right\", \"bottom\", \"top\"\n- `tooltipLabel`: label to be used in the tooltip for this type. If not defined the key\nof this type will be used (which should match 'label' in the markerData)\n\nThe symbol used for the marker. Supported symbols:\n- 'circle'\n- 'cross'\n- 'diamond'\n- 'square'\n- 'triangle-up'\n- 'star'\n- 'wye'\nmore info at https://github.com/d3/d3-shape/blob/master/README.md#symbols\n\nSome additional \"custom\" types are also available:\n- 'bar'\n- 'thin-bar'\n- 'thick-bar'\n- 'x'\n```\nExample: {\n  'myMarkerType':{\n      'fillColor': 'rgb(123,0,0)',\n      'markerFillOpacity': 0.5,\n      'markerSymbol': 'square',\n      'markerSize': 4,\n      'location': 'top',\n      'row': 1,\n      'priority': 10,\n      'showTooltip': true,\n      'tooltipOrientation': 'top'\n  }\n}\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1453,"column":4},"end":{"line":1455,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.markers"},{"name":"markerData","type":"Array","description":"Data representing the markers. Example:\n[\n   {\n     \"time\": 2,\n     \"label\": \"Recalibrate\"\n   },\n   {\n     \"time\": 3,\n     \"label\": \"Fan start\"\n   },\n   {\n     \"time\": 4,\n     \"label\": \"Fan stop\"\n   },\n   {\n     \"time\": 8,\n     \"label\": \"Default\"\n   }\n ]","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1477,"column":4},"end":{"line":1479,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.markers"},{"name":"_updateStyles","type":"Function","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3206,"column":4},"end":{"line":3208,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.updateStylesOverride"},{"name":"_stylesUpdated","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3209,"column":4},"end":{"line":3212,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0","inheritedFrom":"PxVisBehavior.updateStylesOverride"},{"name":"annotationData","type":"Array","description":"The annotation data: x and y values + the series which scale should be used.\nData is an arbitrary object you want to store for use when showing the\nannotation\n```\n   [{\n       x: 1325897523,\n       y: 15.7,\n       series: y0,\n       data: {...}\n   },{\n    ...\n    }]\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3373,"column":4},"end":{"line":3378,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"PxVisBehavior.annotationData"},{"name":"showStrongIcon","type":"boolean","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3380,"column":4},"end":{"line":3383,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehavior.annotationData"},{"name":"cursorConfig","type":"Object","description":"Configuration object used to customize the cursor properties.\nPlease refer to px-vis-cursor (https://github.com/PredixDev/px-vis) for a list of supported properties","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1459,"column":4},"end":{"line":1461,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.cursorConfig"},{"name":"_currentPage","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2749,"column":4},"end":{"line":2752,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0","inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"_registerCurrentPage","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2754,"column":4},"end":{"line":2757,"column":5}},"metadata":{"polymer":{}},"defaultValue":"1","inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"_registerTotalPages","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2759,"column":4},"end":{"line":2762,"column":5}},"metadata":{"polymer":{}},"defaultValue":"1","inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"_registerDisplayPageArrows","type":"boolean","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2764,"column":4},"end":{"line":2767,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"_registerTooltipData","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2811,"column":4},"end":{"line":2813,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.registerPagnation"},{"name":"_verticalRegisterHeight","type":"number","description":"the calculated height that can be used by the vertical register","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2396,"column":2},"end":{"line":2398,"column":3}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_registerHeight","type":"number","description":"The register height based on its type, config and calculated size","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2402,"column":2},"end":{"line":2405,"column":3}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_verticalRegisterHeightDeductions","type":"Array","description":"When calculating the register height if the height deductions to do\nhaven't been passed in (i.e height changed rather than ironResize being called)\nthen this list of string will be used to search for elements IDs and calculate\ntheir height, deducting them","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2412,"column":4},"end":{"line":2414,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_verticalRegisterDrawingCanvasId","type":"string","description":"ID of the element where the drawing happens. used to get its height property","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2418,"column":4},"end":{"line":2420,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"referenceData","type":"Array","description":"Data to create reference curves. Format matches chartData and requires a referenceConfig with similar props to seriesConfig.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3446,"column":4},"end":{"line":3446,"column":24}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.referenceCurveProps"},{"name":"referenceConfig","type":"Object","description":"A configuration object needed to draw reference curves. Format is similar to seriesConfig. Valid entries:\n- `x` : default: 'x'\n- `y`: default: 'y'\n- `interpolationFunction` : default: Px.d3.curveCardinal\n- `color` :\n- `strokeWidth` default: 1","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3457,"column":4},"end":{"line":3457,"column":27}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.referenceCurveProps"},{"name":"firstDateTimeFormat","type":"string","description":"Defines the format for the first datetime string. The first datetime is shown in normal font weight.\n\nDefault is the first datetime string is TIME presented as \"15:00:00 +0000\"\n\nFor valid string formats, see: http://momentjs.com/docs/#/displaying/","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":47,"column":4},"end":{"line":50,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"HH:mm:ss ZZ\"","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"secondDateTimeFormat","type":"string","description":"Defines the format for the second datetime string. The second datetime is shown in bold font weight.\n\nDefault is the second datetime string is DATE presented as \"12 Feb 2016\"\n\nFor valid string formats, see: http://momentjs.com/docs/#/displaying/","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":62,"column":4},"end":{"line":65,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"DD MMM YYYY\"","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"separator","type":"string","description":"Defines a separator character between the two datetime strings.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":74,"column":4},"end":{"line":77,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"|\"","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"timezone","type":"string","description":"Sets what timezone the event time should display in.\n\nTimezone defaults to UTC time. If a valid timezone is specified, then times include daylight savings time if applicable.\n\nFor a list of valid timezones, see: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n\nFor more details on timezones, see: http://momentjs.com/timezone/","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":91,"column":4},"end":{"line":94,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"utc\"","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"tooltipRequested","type":"boolean","description":"Whether the tooltip should be shown or hidden","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3308,"column":5},"end":{"line":3311,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"tooltipOrientation","type":"string","description":"Specifies the orientation of the event tooltip.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3318,"column":6},"end":{"line":3321,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"left\"","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_availableTooltips","type":"Array","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3369,"column":4},"end":{"line":3372,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_usedTooltipMap","type":"Map","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3374,"column":4},"end":{"line":3377,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_lockedTooltips","type":"Set","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3379,"column":4},"end":{"line":3382,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"xAxisLocation","type":"string","description":"Defines where to locate the X-axis.\n- `bottom`\n- `top`","privacy":"public","sourceRange":{"start":{"line":673,"column":6},"end":{"line":676,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"bottom\""},{"name":"yAxisLocation","type":"string","description":"Defines where to locate the Y-axis.\n- `left`\n- `right`","privacy":"public","sourceRange":{"start":{"line":686,"column":6},"end":{"line":689,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"left\""},{"name":"marginNav","type":"Object","description":"Defines the base margin for the navigator.","privacy":"public","sourceRange":{"start":{"line":698,"column":6},"end":{"line":701,"column":7}},"metadata":{"polymer":{}}},{"name":"marginMarkersAdjustment","type":"Object","description":"Defines the adjusted margin for adding markers. By default the chart\nalready calculates margins for the markers (taking into account\naxes and normal margin) but this can be used to manually adjust\nwhere the markers are drawn\nmargin object:\n- top\n- bottom\n- left\n- right\nNot every property needs to be defined, only the one that have been\ndefined will be used.","privacy":"public","sourceRange":{"start":{"line":715,"column":6},"end":{"line":718,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{}"},{"name":"_internalMargin","type":"Object","description":"","privacy":"protected","sourceRange":{"start":{"line":719,"column":6},"end":{"line":721,"column":7}},"metadata":{"polymer":{}}},{"name":"_internalMarginNav","type":"Object","description":"","privacy":"protected","sourceRange":{"start":{"line":722,"column":6},"end":{"line":724,"column":7}},"metadata":{"polymer":{}}},{"name":"_internalMarginMarkers","type":"Object","description":"","privacy":"protected","sourceRange":{"start":{"line":725,"column":6},"end":{"line":727,"column":7}},"metadata":{"polymer":{}}},{"name":"options","type":"Object","description":"Configuration object for the chart. Key is the property name.","privacy":"public","sourceRange":{"start":{"line":734,"column":6},"end":{"line":738,"column":7}},"metadata":{"polymer":{"notify":true,"observer":"\"_setConfig\""}}},{"name":"disableNavigator","type":"boolean","description":"Flag to not show a navigator in the timeseries. Set to true to disable the navigator. Default false which shows the navigator","privacy":"public","sourceRange":{"start":{"line":759,"column":6},"end":{"line":763,"column":7}},"metadata":{"polymer":{"observer":"\"_disableNavigatorChanged\""}},"defaultValue":"false"},{"name":"hideGridlinesX","type":"boolean","description":"Whether to hide the gridlines perpendicular to the X axis","privacy":"public","sourceRange":{"start":{"line":767,"column":6},"end":{"line":770,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"hideGridlinesY","type":"boolean","description":"Whether to hide the gridlines perpendicular to the Y axis","privacy":"public","sourceRange":{"start":{"line":774,"column":6},"end":{"line":777,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_isReady","type":"boolean","description":"","privacy":"protected","sourceRange":{"start":{"line":779,"column":6},"end":{"line":782,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"matchTicks","type":"boolean","description":"A boolean to specify if the axis ticks should align (which affects\ntheir individual range). Default (false) is for each have their own\nranges and tick marks may not align\nOnly useful if using multiple axis","privacy":"public","sourceRange":{"start":{"line":789,"column":6},"end":{"line":792,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_navSelectedDomain","type":"Object","description":"","privacy":"protected","sourceRange":{"start":{"line":793,"column":6},"end":{"line":795,"column":7}},"metadata":{"polymer":{}}},{"name":"_axisActionConfig","type":"Object","description":"","privacy":"protected","sourceRange":{"start":{"line":796,"column":6},"end":{"line":800,"column":7}},"metadata":{"polymer":{"notify":true,"readOnly":true}}},{"name":"_navChartExtents","type":"Object","description":"","privacy":"protected","sourceRange":{"start":{"line":801,"column":6},"end":{"line":806,"column":7}},"metadata":{"polymer":{}}},{"name":"_stripeHighlight","type":"Object","description":"Holder object for the stripe highlight","privacy":"protected","sourceRange":{"start":{"line":832,"column":6},"end":{"line":834,"column":7}},"metadata":{"polymer":{}}},{"name":"_stripeController","type":"Object","description":"Holder object for the stripe handles","privacy":"protected","sourceRange":{"start":{"line":839,"column":6},"end":{"line":841,"column":7}},"metadata":{"polymer":{}}},{"name":"_stripeBrush","type":"Object","description":"Holder object for the stripe brush","privacy":"protected","sourceRange":{"start":{"line":845,"column":6},"end":{"line":847,"column":7}},"metadata":{"polymer":{}}},{"name":"_stripeDataIndex","type":"number","description":"The current data index value for the active stripe","privacy":"protected","sourceRange":{"start":{"line":852,"column":6},"end":{"line":855,"column":7}},"metadata":{"polymer":{}},"defaultValue":"null"}],"methods":[{"name":"hasUndefinedArguments","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":35,"column":2},"end":{"line":44,"column":3}},"metadata":{},"params":[{"name":"args"}],"inheritedFrom":"PxVisBehavior.observerCheck"},{"name":"_isValidData","description":"returns true if the data is valid: non NaN, null or undefined","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":354,"column":4},"end":{"line":357,"column":3}},"metadata":{},"params":[{"name":"d"}],"inheritedFrom":"PxVisBehavior.dataChecks"},{"name":"_isDataNotNull","description":"returns true if the data is not null","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":362,"column":2},"end":{"line":365,"column":3}},"metadata":{},"params":[{"name":"d"}],"inheritedFrom":"PxVisBehavior.dataChecks"},{"name":"muteUnmuteSeries","description":"Method to mute or umute","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":606,"column":2},"end":{"line":625,"column":3}},"metadata":{},"params":[{"name":"series"},{"name":"fromRegister"}],"inheritedFrom":"PxVisBehavior.muteUnmuteSeries"},{"name":"_isObjEmpty","description":"Checks to see if an object is empty","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":834,"column":2},"end":{"line":842,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_isD3Empty","description":"Checks to see if an d3 obj is empty","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":850,"column":2},"end":{"line":855,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_doesD3HaveValues","description":"Checks to see if an d3 obj has something","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":863,"column":2},"end":{"line":868,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_doesObjHaveValues","description":"Checks to see if an object has values","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":876,"column":2},"end":{"line":885,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_hasProps","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":887,"column":2},"end":{"line":899,"column":3}},"metadata":{},"params":[{"name":"obj"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_isVarDefined","description":"Checks to see if an object is defined","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":907,"column":2},"end":{"line":912,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_isVarUndefined","description":"Checks to see if an object is defined","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":919,"column":2},"end":{"line":924,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_escapeCssSelector","description":"escapes '.' in css selectors so that we can appropriately select stuff with dots in thei ids","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":929,"column":2},"end":{"line":931,"column":3}},"metadata":{},"params":[{"name":"selector"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_checkThemeVariable","description":"Checks if a theme variable exists, if so, returns the theme value, if not, returns the default","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":936,"column":2},"end":{"line":953,"column":3}},"metadata":{},"params":[{"name":"varName"},{"name":"defaultValue"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_hexToRgb","description":"converts a hex to rgb color","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":958,"column":2},"end":{"line":969,"column":3}},"metadata":{},"params":[{"name":"hex"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_binarySearch","description":"Binary search through sorted chartData","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":974,"column":2},"end":{"line":992,"column":3}},"metadata":{},"params":[{"name":"data"},{"name":"key"},{"name":"val"},{"name":"lowerIndex"},{"name":"upperIndex"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_fuzzyBinarySearch","description":"Binary search through sorted chartData returning all vals within a window","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":997,"column":2},"end":{"line":1015,"column":3}},"metadata":{},"params":[{"name":"data"},{"name":"key"},{"name":"lowerFuzz"},{"name":"upperFuzz"},{"name":"lowerIndex"},{"name":"upperIndex"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_getAdjacentValues","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1017,"column":2},"end":{"line":1047,"column":3}},"metadata":{},"params":[{"name":"data"},{"name":"key"},{"name":"lowerFuzz"},{"name":"upperFuzz"},{"name":"lowerIndex"},{"name":"upperIndex"},{"name":"index"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"clone","description":"deep-copy object into newObject","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1052,"column":2},"end":{"line":1065,"column":3}},"metadata":{},"params":[{"name":"object"},{"name":"newObject"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"isVarNumber","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1067,"column":2},"end":{"line":1069,"column":3}},"metadata":{},"params":[{"name":"n"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"detached","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":240,"column":2},"end":{"line":248,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"generateRandomID","description":"Generates a random id string.\n\nTakes a string prefix, then adds 10 random chars","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":68,"column":2},"end":{"line":87,"column":3}},"metadata":{},"params":[{"name":"baseStr"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"cloneSVGElem","description":"Clones a SVG elem and sets a component property with the d3 instance of that clone.\n\nThe intent of this is to clone the high level 'g' elem we draw to and attach it.\nThe draw order matters  in SVG and we want the some stuff to appear on top of everything else\nSince we cannot easily ensure it draw order with components, we can stick top level items in a different 'g' that we know is drawn after the main 'g'","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":98,"column":2},"end":{"line":110,"column":3}},"metadata":{},"params":[{"name":"svg"},{"name":"prop"},{"name":"onBottom"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_drawSVGOnCanvas","description":"Draws the current svg into a canvas","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":115,"column":2},"end":{"line":173,"column":3}},"metadata":{},"params":[{"name":"canvas"},{"name":"elem"},{"name":"callback"},{"name":"x"},{"name":"y"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_drawCanvg","description":"Uses canvg third party to \"translate\" svg to javascript instructions\nfor the canvas, and draw on the canvas","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":178,"column":2},"end":{"line":186,"column":3}},"metadata":{},"params":[{"name":"canvas"},{"name":"svgData"},{"name":"x"},{"name":"y"},{"name":"callback"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_nativeDrawSvgOnCanvas","description":"Tries to draw the SVG to canvas and if that doesnt work, falls back on a failure callback","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":191,"column":2},"end":{"line":221,"column":3}},"metadata":{},"params":[{"name":"canvas"},{"name":"svgData"},{"name":"x"},{"name":"y"},{"name":"sucessCallback"},{"name":"failureCallback"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_getSVGOuterHtml","description":"fix for IE to get outer HTML","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":225,"column":2},"end":{"line":272,"column":3}},"metadata":{},"params":[{"name":"svg"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"attached","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":223,"column":2},"end":{"line":239,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderToCanvasChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":403,"column":2},"end":{"line":418,"column":3}},"metadata":{},"params":[{"name":"renderToCanvas"}],"inheritedFrom":"PxVisBehaviorD3.renderToCanvas"},{"name":"_getIsMultiY","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":469,"column":2},"end":{"line":475,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"_processYValues","description":"This functions process Y axis and applies the result to some variable.\nIf in single Y it just run the function and assign the result to `result`, if multi Y\nit runs the function for each axis and stores the result against the axis key\non `result`","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":482,"column":2},"end":{"line":500,"column":3}},"metadata":{},"params":[{"name":"callback"}],"inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"_rangeChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":691,"column":2},"end":{"line":722,"column":3}},"metadata":{},"params":[{"name":"range"}],"inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"name":"addClipPath","description":"Add the clip-path attr to the element","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":805,"column":2},"end":{"line":809,"column":3}},"metadata":{},"params":[{"name":"elem"}],"inheritedFrom":"PxVisBehaviorD3.clipPath"},{"name":"_getColor","description":"Helper function to return the correct color for a particular index.","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":229,"column":2},"end":{"line":234,"column":3}},"metadata":{},"params":[{"name":"i"}],"inheritedFrom":"PxColorsBehavior.getSeriesColors"},{"name":"_calcIndex","description":"Helper function to calculate the index. When we run out of indcies, it loops back over valid indicies.","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":239,"column":2},"end":{"line":241,"column":3}},"metadata":{},"params":[{"name":"i"},{"name":"l"}],"inheritedFrom":"PxColorsBehavior.getSeriesColors"},{"name":"getToolbar","description":"Convenience method for searching for a toolbar in a chart.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":36,"column":2},"end":{"line":38,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.searchToolbar"},{"name":"_returnAllKeys","description":"Goes through an array of objects and gathers all unique keys. Returns a list of keys\n\nExpects and array of objects\n\nReturns an array of strings","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":61,"column":2},"end":{"line":71,"column":3}},"metadata":{},"params":[{"name":"d"}],"inheritedFrom":"PxVisBehaviorChart.chartCommonMethods"},{"name":"_isTimeType","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3421,"column":2},"end":{"line":3423,"column":3}},"metadata":{},"params":[{"name":"scale"}],"inheritedFrom":"PxVisBehavior.scaleTypeCheck"},{"name":"_isOrdinalType","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3425,"column":2},"end":{"line":3427,"column":3}},"metadata":{},"params":[{"name":"scale"}],"inheritedFrom":"PxVisBehavior.scaleTypeCheck"},{"name":"_calcChartExts","description":"Calcs the extents of the charts","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":205,"column":4},"end":{"line":214,"column":5}},"metadata":{},"params":[{"name":"mins"},{"name":"maxes"},{"name":"axis"}],"inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"_setCompleteSeriesConfig","description":"Creates the real series confit object based on the default settings, the dev defined series config, and the includeAllSeries flag.","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":220,"column":4},"end":{"line":421,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"_sideRegister","description":"Helper function for the register. Returns true if the side register should exist","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":427,"column":4},"end":{"line":429,"column":5}},"metadata":{},"params":[{"name":"location"}],"inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"_topRegister","description":"Helper function for the register. Returns true if the top register should exist","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":435,"column":4},"end":{"line":437,"column":5}},"metadata":{},"params":[{"name":"location"}],"inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"_chartTypeLine","description":"Helper function for the line series. Returns true if the series is a line","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":443,"column":4},"end":{"line":448,"column":5}},"metadata":{},"params":[{"name":"key"},{"name":"obj"}],"inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"_chartTypeScatter","description":"Helper function for the line series. Returns true if the series is a line","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":454,"column":4},"end":{"line":459,"column":5}},"metadata":{},"params":[{"name":"key"},{"name":"obj"}],"inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"_returnKeys","description":"returns the keys of an object","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":465,"column":4},"end":{"line":467,"column":5}},"metadata":{},"params":[{"name":"obj"}],"inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"_updateDSC","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":469,"column":4},"end":{"line":483,"column":5}},"metadata":{},"params":[{"name":"dsc"}],"inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"getImage","description":"Takes a graphic \"snapshot\" of the component and pass results through a callback:\n- a canvas containing the graphical snapshot\n- a png base 64 data uri\n\ncallback object:\n{\n canvas: theCanvasObject\n image: \"data:image/png;base64;iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACN...\"\n}\n\nthe data uri can be used to save the image and the canvas object to do\nfurther processing, such as combining different elements snapshot into one image","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":639,"column":4},"end":{"line":710,"column":5}},"metadata":{},"params":[{"name":"callback"},{"name":"renderLegend"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"_finishGetImage","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":711,"column":4},"end":{"line":716,"column":5}},"metadata":{},"params":[{"name":"callback"},{"name":"canvas"},{"name":"renderLegend"},{"name":"drawingWidth"},{"name":"drawingHeight"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"_getRegisterWidth","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":717,"column":4},"end":{"line":751,"column":5}},"metadata":{},"params":[{"name":"drawingWidth"},{"name":"drawingHeight"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"_drawRegister","description":"Draws a fake representation of the registers","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":755,"column":4},"end":{"line":783,"column":5}},"metadata":{},"params":[{"name":"context"},{"name":"startWidth"},{"name":"drawingHeight"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"_applyConfigToElement","description":"Applies the config object to the element. Each key in the config object\nis the name of the property to be applied","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":919,"column":4},"end":{"line":937,"column":5}},"metadata":{},"params":[{"name":"config"},{"name":"element"}],"inheritedFrom":"PxVisBehaviorChart.subConfiguration"},{"name":"_getHideClass","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1060,"column":2},"end":{"line":1068,"column":3}},"metadata":{},"params":[{"name":"hide"}],"inheritedFrom":"PxVisBehaviorChart.getHideClass"},{"name":"_getRegisterWrapperClass","description":"determine the flex class on the wrapper depending on where the register is","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1105,"column":2},"end":{"line":1122,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.registerPositioning"},{"name":"_hideRegisterChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1123,"column":2},"end":{"line":1129,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.registerPositioning"},{"name":"created","description":"","privacy":"protected","sourceRange":{"start":{"line":895,"column":4},"end":{"line":898,"column":5}},"metadata":{},"params":[]},{"name":"notifyResize","description":"Can be called to manually notify a resizable and its descendant\nresizables of a resize change.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":80,"column":4},"end":{"line":92,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"assignParentResizable","description":"Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":98,"column":4},"end":{"line":110,"column":5}},"metadata":{},"params":[{"name":"parentResizable"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"stopResizeNotificationsFor","description":"Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":116,"column":4},"end":{"line":123,"column":5}},"metadata":{},"params":[{"name":"target"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"resizerShouldNotify","description":"This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":134,"column":4},"end":{"line":136,"column":5}},"metadata":{},"params":[{"name":"element","type":"HTMLElement","description":"A candidate descendant element that\nimplements `IronResizableBehavior`."}],"return":{"type":"boolean","desc":"True if the `element` should be notified of resize."},"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_onDescendantIronResize","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":138,"column":4},"end":{"line":150,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_fireResize","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":152,"column":4},"end":{"line":154,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_onIronRequestResizeNotifications","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":156,"column":4},"end":{"line":166,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_parentResizableChanged","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":168,"column":4},"end":{"line":172,"column":5}},"metadata":{},"params":[{"name":"parentResizable"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_notifyDescendant","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":174,"column":4},"end":{"line":185,"column":5}},"metadata":{},"params":[{"name":"descendant"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_requestResizeNotifications","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":187,"column":4},"end":{"line":232,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_findParent","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":234,"column":4},"end":{"line":246,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_preventResizeChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":854,"column":4},"end":{"line":862,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"_getChartWrapperClass","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":863,"column":4},"end":{"line":887,"column":5}},"metadata":{},"params":[{"name":"hor"},{"name":"vert"}],"inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"_onIronResize","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":889,"column":4},"end":{"line":897,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"_createLayers","description":"Creates <g> layers","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1499,"column":2},"end":{"line":1522,"column":3}},"metadata":{},"params":[{"name":"svg"},{"name":"numberOfLayers"},{"name":"propName"}],"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"_createLayersOnce","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1523,"column":2},"end":{"line":1534,"column":3}},"metadata":{},"params":[{"name":"svg"},{"name":"numberOfLayers"},{"name":"generateLayers"},{"name":"propName"}],"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"ready","description":"","privacy":"protected","sourceRange":{"start":{"line":899,"column":4},"end":{"line":914,"column":5}},"metadata":{},"params":[]},{"name":"syncCSSTheme","description":"Retrieves the CSS style variables set on this element and applies them\nto the appropriate properties, triggering a redraw.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":71,"column":4},"end":{"line":76,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_debounceSyncCSSTheme","description":"Debounced function call for `syncCSSTheme` method. Loops through available\nstyle variables to apply them to appropriate objects.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":85,"column":4},"end":{"line":108,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_applyStyleVariables","description":"Called when there is at least one style variable applied (the first is\nexpected to be named `--px-vis-series-color-0`). Loops through each\nstyle variable in the format `--px-vis-series-color-[n]` and applies\nthe resulting values and series color order to the element. Stops looping\nthrough style variables when it finds a gap.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":120,"column":4},"end":{"line":165,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_colorHexToRgb","description":"Converts a hex-format color to RGB.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":176,"column":4},"end":{"line":186,"column":5}},"metadata":{},"params":[{"name":"hex","type":"String","description":"A color in hex format"}],"return":{"type":"String","desc":"A color in RGB format"},"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_checkIfDevSetSeriesColorOrder","description":"Compares seriesColorOrder property value to the seriesColorOrder to determine if the dev set their own override.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":195,"column":4},"end":{"line":209,"column":5}},"metadata":{},"params":[],"return":{"type":"Boolean","desc":"true if dev set seriesColorOrder"},"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_addAxisToList","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2269,"column":2},"end":{"line":2296,"column":3}},"metadata":{},"params":[{"name":"axisId"},{"name":"axisNum"},{"name":"thisSet"},{"name":"otherSet"},{"name":"dims"}],"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"_calcAxes","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2298,"column":2},"end":{"line":2349,"column":3}},"metadata":{},"params":[{"name":"completeSeriesConfig"}],"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"_calcMultiMargins","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2351,"column":2},"end":{"line":2362,"column":3}},"metadata":{},"params":[{"name":"margin"},{"name":"leftAxisWidth"},{"name":"rightAxisWidth"}],"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"_returnYScale","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2366,"column":2},"end":{"line":2378,"column":3}},"metadata":{},"params":[{"name":"seriesId"},{"name":"config"}],"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"_recreateScales","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":137,"column":2},"end":{"line":154,"column":3}},"metadata":{},"params":[{"name":"width"},{"name":"height"},{"name":"margin"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_setXScale","description":"Sets the x scale or update its range if already existing","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":161,"column":2},"end":{"line":166,"column":3}},"metadata":{},"params":[{"name":"width"},{"name":"margin"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_internalSetXScale","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":167,"column":2},"end":{"line":187,"column":3}},"metadata":{},"params":[{"name":"width"},{"name":"margin"},{"name":"forceRecreation"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_setYScale","description":"Sets the y scale or update its range if already existing","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":194,"column":2},"end":{"line":199,"column":3}},"metadata":{},"params":[{"name":"height"},{"name":"margin"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_internalSetYScale","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":200,"column":2},"end":{"line":220,"column":3}},"metadata":{},"params":[{"name":"height"},{"name":"margin"},{"name":"forceRecreation"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_setMultiYScale","description":"Sets a multi y scale","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":227,"column":2},"end":{"line":232,"column":3}},"metadata":{},"params":[{"name":"height"},{"name":"margin"},{"name":"axes"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_internalSetMultiYScale","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":233,"column":2},"end":{"line":268,"column":3}},"metadata":{},"params":[{"name":"height"},{"name":"margin"},{"name":"axes"},{"name":"forceRecreation"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_setScale","description":"Helper function to set the x and y based on scale type","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":275,"column":2},"end":{"line":309,"column":3}},"metadata":{},"params":[{"name":"type"},{"name":"range"},{"name":"currentAxis"},{"name":"isMultiAxis"},{"name":"key"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_setDomain","description":"Calculates and Sets the x and y domain after data loads\n\nhttps://github.com/mbostock/d3/wiki/API-Reference","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":318,"column":3},"end":{"line":383,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_createOrdinalInvert","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":385,"column":2},"end":{"line":397,"column":3}},"metadata":{},"params":[{"name":"scale"},{"name":"invert"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_applyExtents","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":399,"column":2},"end":{"line":450,"column":3}},"metadata":{},"params":[{"name":"extents"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_determineExtents","description":"Calculates the extents based on chartExtents, dataExtents, and the data.","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":456,"column":2},"end":{"line":550,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_checkForExtents","description":"Looks at chartExtents and dataExtents for extents values per axis","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":556,"column":2},"end":{"line":591,"column":3}},"metadata":{},"params":[{"name":"isOrd"},{"name":"chartExtents"},{"name":"dataExtents"},{"name":"axis"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_checkChartExtents","description":"Looks at chartExtents for extents values per axis","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":597,"column":2},"end":{"line":605,"column":3}},"metadata":{},"params":[{"name":"cExts"},{"name":"axis"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_checkDataExtents","description":"Looks at dataExtents for extents values per axis; resolves chartExtents","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":611,"column":2},"end":{"line":628,"column":3}},"metadata":{},"params":[{"name":"dExts"},{"name":"cExts"},{"name":"axis"},{"name":"bool"},{"name":"exts"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_findMinMax","description":"Find the min and max values or ordinal values in data, for X and/or Y axis","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":635,"column":2},"end":{"line":660,"column":3}},"metadata":{},"params":[{"name":"data"},{"name":"doX"},{"name":"doY"},{"name":"ordX"},{"name":"ordY"},{"name":"timeX"},{"name":"result"},{"name":"keys"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_getDataExtents","description":"Goes through the data and extracts min and max values","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":666,"column":2},"end":{"line":680,"column":3}},"metadata":{},"params":[{"name":"d"},{"name":"keysArr"},{"name":"axis"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_findTimeMM","description":"Finds time based Max and Min","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":686,"column":2},"end":{"line":693,"column":3}},"metadata":{},"params":[{"name":"result"},{"name":"d"},{"name":"l"},{"name":"x"},{"name":"doMin"},{"name":"doMax"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_setMin","description":"Compares existing min and new data for min","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":699,"column":2},"end":{"line":703,"column":3}},"metadata":{},"params":[{"name":"r"},{"name":"d"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_setMax","description":"Compares existing max and new data for max","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":709,"column":2},"end":{"line":713,"column":3}},"metadata":{},"params":[{"name":"r"},{"name":"d"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_processDataValues","description":"Goes through the values from the data and calcs the extents","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":719,"column":2},"end":{"line":735,"column":3}},"metadata":{},"params":[{"name":"isOrd"},{"name":"r"},{"name":"d"},{"name":"axis"},{"name":"key"},{"name":"i"},{"name":"doMin"},{"name":"doMax"},{"name":"v0"},{"name":"v1"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_checkInSeriesConfig","description":"Loop through each series and see if it has mins and maxes in seriesConfig","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":742,"column":0},"end":{"line":754,"column":1}},"metadata":{},"params":[{"name":"exts"},{"name":"a"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_applyChartExtents","description":"Apply chart extents","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":760,"column":0},"end":{"line":781,"column":1}},"metadata":{},"params":[{"name":"exts"},{"name":"a"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_searchForExtents","description":"Search for multi axis extents","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":787,"column":0},"end":{"line":803,"column":1}},"metadata":{},"params":[{"name":"exts"},{"name":"seriesToSearch"},{"name":"data"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_calcSeriesToSearch","description":"Search for multi axis extents","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":809,"column":0},"end":{"line":821,"column":1}},"metadata":{},"params":[{"name":"exts"},{"name":"a"},{"name":"seriesToSearch"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_calcMultiAxisExtents","description":"calculates chart extents for multi axis","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":827,"column":0},"end":{"line":871,"column":1}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_updateDomain","description":"When the domain gets set via a user interaction, set the scale function to use the new domain\n\nhttps://github.com/mbostock/d3/wiki/API-Reference","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":880,"column":2},"end":{"line":905,"column":3}},"metadata":{},"params":[{"name":"selectedDomain"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_chartDataChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":906,"column":2},"end":{"line":911,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_setAxisScale","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":913,"column":2},"end":{"line":951,"column":3}},"metadata":{},"params":[{"name":"leftDims"},{"name":"rightDims"},{"name":"leftAxisSize"},{"name":"rightAxisSize"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"getPixelFromData","description":"Gets pixel values for data values relating to a series (series is the id\nused in seriesConfig). data is an array: [xValue, yValue]\nif margin is specified it will use thos to adjust the pixel values\ninstead of the normal `margin` property\nreturns an object with the result and whether that result is out of\nbounds for the current domain","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":961,"column":2},"end":{"line":979,"column":3}},"metadata":{},"params":[{"name":"data"},{"name":"series"},{"name":"margin"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"getDataFromPixel","description":"Gets data values for pixel values relating to a series (series is the id\nused in seriesConfig). pixelVal is an array: [xValue, yValue]\nplease note that the values returned have no guarantee to match any\nactual chart data, this is just a conversion based on pixel","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":987,"column":2},"end":{"line":995,"column":3}},"metadata":{},"params":[{"name":"pixelVal"},{"name":"series"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_pixelRequest","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":997,"column":2},"end":{"line":1000,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_updatePadding","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":1002,"column":2},"end":{"line":1018,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_updateLogBase","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":1020,"column":2},"end":{"line":1043,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_fixLogExt","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":1045,"column":2},"end":{"line":1067,"column":3}},"metadata":{},"params":[{"name":"ext"}],"inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"_extentsDataRouter","description":"FIXME import extentsAction","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1669,"column":2},"end":{"line":1689,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.extentsDataRouter"},{"name":"zoomIn","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1733,"column":2},"end":{"line":1736,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"zoomOut","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1737,"column":2},"end":{"line":1740,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"_intSpaceStartPan","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1741,"column":2},"end":{"line":1743,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"_intSpaceStopPan","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1744,"column":2},"end":{"line":1746,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"undoZoom","description":"Restore zoom to its previous value, do nothing if no previous value","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1799,"column":2},"end":{"line":1810,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"_saveZoomState","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1811,"column":2},"end":{"line":1825,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"_saveOrdinalOriginalExtents","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1826,"column":2},"end":{"line":1837,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"_autoZoom","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1838,"column":2},"end":{"line":1898,"column":3}},"metadata":{},"params":[{"name":"isZoomIn"}],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"_calcNewOrdinalExtents","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1899,"column":2},"end":{"line":1905,"column":3}},"metadata":{},"params":[{"name":"currentDomain"},{"name":"originalDomain"},{"name":"isZoomIn"}],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"_calcNewZoomedInOrdinal","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1906,"column":2},"end":{"line":1917,"column":3}},"metadata":{},"params":[{"name":"currentDomain"}],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"_calcNewZoomedOutOrdinal","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1918,"column":2},"end":{"line":1951,"column":3}},"metadata":{},"params":[{"name":"currentDomain"},{"name":"originalDomain"}],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"_calcNewLinearExtents","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1952,"column":2},"end":{"line":1962,"column":3}},"metadata":{},"params":[{"name":"min"},{"name":"max"},{"name":"isZoomIn"}],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"_convertValue","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1963,"column":2},"end":{"line":1969,"column":3}},"metadata":{},"params":[{"name":"value"},{"name":"axisType"},{"name":"convertFrom"}],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"_zoomOrPan","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1971,"column":2},"end":{"line":1975,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"zoom","description":"Sets the selectedDomain to the drawn zoom and shows the button","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1980,"column":2},"end":{"line":1983,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"pan","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1985,"column":2},"end":{"line":1987,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"resetZoom","description":"resets the extents","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1993,"column":2},"end":{"line":2006,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"_notifyZoomed","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2007,"column":2},"end":{"line":2012,"column":3}},"metadata":{},"params":[{"name":"isReset"}],"inheritedFrom":"PxVisBehaviorChart.zooming"},{"name":"_actionRequest","description":"Runs a custom function within the context of the chart","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2035,"column":2},"end":{"line":2046,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.actionRequest"},{"name":"_eventRequest","description":"Fires a custom event within the context of the chart","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2050,"column":2},"end":{"line":2056,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.actionRequest"},{"name":"_startPanning","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2114,"column":2},"end":{"line":2139,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.noDebounceOnPanning"},{"name":"_stopPanning","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2140,"column":2},"end":{"line":2161,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.noDebounceOnPanning"},{"name":"_computeShowTooltip","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2192,"column":2},"end":{"line":2198,"column":3}},"metadata":{},"params":[{"name":"showTooltip"},{"name":"_internalShowTooltip"}],"inheritedFrom":"PxVisBehaviorChart.showTooltip"},{"name":"_checkInterpolation","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":1226,"column":2},"end":{"line":1246,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorD3.interpolationFunction"},{"name":"_computedShowTooltipChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2889,"column":2},"end":{"line":2904,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.tooltipFollowMouseCalculation"},{"name":"_calcMousePos","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2905,"column":2},"end":{"line":2907,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.tooltipFollowMouseCalculation"},{"name":"_createHandler","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2908,"column":2},"end":{"line":2910,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.tooltipFollowMouseCalculation"},{"name":"_keepDataInSync","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":597,"column":4},"end":{"line":610,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.webWorkerSynchronization"},{"name":"loadResources","description":"","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":222,"column":2},"end":{"line":255,"column":3}},"metadata":{},"params":[{"name":"path"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__computeLocalize","description":"Returns a computed `localize` method, based on the current `language`.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":260,"column":2},"end":{"line":300,"column":3}},"metadata":{},"params":[{"name":"language"},{"name":"resources"},{"name":"formats"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestResponse","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":302,"column":2},"end":{"line":330,"column":3}},"metadata":{},"params":[{"name":"event"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestError","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":332,"column":2},"end":{"line":334,"column":3}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__checkLocalizationCache","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":336,"column":2},"end":{"line":344,"column":3}},"metadata":{},"params":[{"name":"proto"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"_panningStarted","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":77,"column":2},"end":{"line":87,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"_panningStopped","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":89,"column":2},"end":{"line":93,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"_initializeRendererTypeObject","description":"Creates an object with all renderer types and a default value for each","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":253,"column":2},"end":{"line":261,"column":3}},"metadata":{},"params":[{"name":"initialVal"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_updateTargetProperty","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":263,"column":2},"end":{"line":280,"column":3}},"metadata":{},"params":[{"name":"e"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_registerDrawingElement","description":"Elements wanting to use the renderer need to fire an event which\nwill be processed here","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":286,"column":2},"end":{"line":296,"column":3}},"metadata":{},"params":[{"name":"e"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_unregisterDrawingElement","description":"Elements wanting to use the renderer need to fire an event (on detached)\nwhich will be processed here","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":302,"column":2},"end":{"line":330,"column":3}},"metadata":{},"params":[{"name":"e"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderSeriesOnTop","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":337,"column":2},"end":{"line":369,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderTypedContext","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":371,"column":2},"end":{"line":404,"column":3}},"metadata":{},"params":[{"name":"renderType"},{"name":"canvasesToClear"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderChartData","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":406,"column":2},"end":{"line":416,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderFilteredChartData","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":418,"column":2},"end":{"line":428,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderHighlight","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":430,"column":2},"end":{"line":440,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderMarkers","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":442,"column":2},"end":{"line":447,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderAllLines","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":449,"column":2},"end":{"line":476,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderData","description":"Initial entry point, debouncing as needed or cancel","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":484,"column":2},"end":{"line":501,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderDataDebounced","description":"Ensure we the basic conditions for allowign rendering\nand start it","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":507,"column":2},"end":{"line":516,"column":3}},"metadata":{},"params":[{"name":"ctx"},{"name":"allowCanvasClearing"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_initializeCanvasRendering","description":"Resets var relating to 1 complete rendering, call initializeDrawingSession\non all rendering targets and kick the process","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":522,"column":2},"end":{"line":544,"column":3}},"metadata":{},"params":[{"name":"ctx"},{"name":"allowCanvasClearing"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_processCanvasRendering","description":"Called each frame.\n- Updates previous frame timings if there was one\n- Render what can be in the current frame\n- Exit or wait for next frame","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":552,"column":2},"end":{"line":589,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_processCanvasOneFrame","description":"Rendering process during one frame. Calculate how many points can be\nrendered for the current target an render those. Keep rendering next\ntargets if we have enough time, based on same process","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":596,"column":2},"end":{"line":637,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_updatePreviousFrameTiming","description":"Updates stats of the previous frame: how many points have been\nrendered per type and how long it took","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":643,"column":2},"end":{"line":675,"column":3}},"metadata":{},"params":[{"name":"ctx"},{"name":"now"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_getCurrentCanvasRenderingTarget","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":677,"column":2},"end":{"line":684,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_firstCanvasRender","description":"Used when rendering a target we don't have stats about. Assumes a first\nnumber of points to render, measure that and render more if we think we can","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":690,"column":2},"end":{"line":734,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_renderTargetToCanvas","description":"Tries to render toRender number of points for the current target.\nreturns the number of points actually rendered and how much of the budget\nthis used","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":741,"column":2},"end":{"line":772,"column":3}},"metadata":{},"params":[{"name":"toRender"},{"name":"ctx"},{"name":"currentBudget"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_calculatePointsAllowance","description":"Calculates how many points we can render in one frame for the\ncontext current target. Based on stats of previous rendering of same type.\nReturns -1 if we don't have stats about this type of rendering","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":779,"column":2},"end":{"line":821,"column":3}},"metadata":{},"params":[{"name":"ctx"}],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_targetTimingChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":823,"column":2},"end":{"line":825,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"_changePage","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2774,"column":2},"end":{"line":2785,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"_resetPages","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2787,"column":2},"end":{"line":2798,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.registerPagnationBase"},{"name":"_tooltipDataUpdated","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2816,"column":2},"end":{"line":2821,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.registerPagnation"},{"name":"_updateRegisterData","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2823,"column":2},"end":{"line":2829,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.registerPagnation"},{"name":"_heightChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2428,"column":2},"end":{"line":2434,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_computeVerticalRegisterHeight","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2435,"column":2},"end":{"line":2465,"column":3}},"metadata":{},"params":[{"name":"deductions"}],"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"_computeRegisterHeight","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2467,"column":2},"end":{"line":2473,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.sizeVerticalRegister"},{"name":"formatTimestamp","description":"Method that takes a datetime string, timezone string, and a formatting string. Returns a formated datetime string.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":105,"column":2},"end":{"line":115,"column":3}},"metadata":{},"params":[{"name":"datetime"},{"name":"timezone"},{"name":"format"}],"return":{"type":"formatedDatetimeString"},"inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"_getTooltipToUse","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3400,"column":2},"end":{"line":3409,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_createTooltip","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3411,"column":2},"end":{"line":3420,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_centralTooltipDisplayRequest","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3422,"column":2},"end":{"line":3449,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_centralTooltipCancelRequest","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3451,"column":2},"end":{"line":3467,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_centralTooltipLockRequest","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3469,"column":2},"end":{"line":3475,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_centralTooltipLockCancel","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3477,"column":2},"end":{"line":3482,"column":3}},"metadata":{},"params":[{"name":"evt"}],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_resizeTooltip","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3484,"column":2},"end":{"line":3488,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_updateTooltipProps","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3490,"column":2},"end":{"line":3512,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"_getWrapperClass","description":"","privacy":"protected","sourceRange":{"start":{"line":915,"column":4},"end":{"line":919,"column":5}},"metadata":{},"params":[{"name":"_registerWrapperClass"}]},{"name":"_setConfig","description":"Cycles through the Configuration object and sets each property. Triggers each components declarative binding","privacy":"protected","sourceRange":{"start":{"line":925,"column":4},"end":{"line":940,"column":5}},"metadata":{},"params":[]},{"name":"_navigatorConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":941,"column":4},"end":{"line":955,"column":5}},"metadata":{},"params":[{"name":"conf"}]},{"name":"_xAxisConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":956,"column":4},"end":{"line":962,"column":5}},"metadata":{},"params":[{"name":"conf"}]},{"name":"_tooltipConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":963,"column":4},"end":{"line":969,"column":5}},"metadata":{},"params":[{"name":"conf"}]},{"name":"_registerConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":970,"column":4},"end":{"line":976,"column":5}},"metadata":{},"params":[{"name":"conf"}]},{"name":"_cursorConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":977,"column":4},"end":{"line":983,"column":5}},"metadata":{},"params":[{"name":"conf"}]},{"name":"_toolbarConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":984,"column":4},"end":{"line":990,"column":5}},"metadata":{},"params":[{"name":"conf"}]},{"name":"_interactionSpaceConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":991,"column":4},"end":{"line":997,"column":5}},"metadata":{},"params":[{"name":"interactionSpaceConfig"}]},{"name":"_highlighterConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":998,"column":4},"end":{"line":1005,"column":5}},"metadata":{},"params":[]},{"name":"_calcMargins","description":"Overwrites default margins based on settings","privacy":"protected","sourceRange":{"start":{"line":1012,"column":4},"end":{"line":1083,"column":5}},"metadata":{},"params":[]},{"name":"_calcMarkerMargins","description":"","privacy":"protected","sourceRange":{"start":{"line":1085,"column":4},"end":{"line":1117,"column":5}},"metadata":{},"params":[]},{"name":"_chartOrNavMargin","description":"","privacy":"protected","sourceRange":{"start":{"line":1123,"column":4},"end":{"line":1128,"column":5}},"metadata":{},"params":[{"name":"disableNavigator"}]},{"name":"_resizeCalculations","description":"","privacy":"protected","sourceRange":{"start":{"line":1134,"column":4},"end":{"line":1154,"column":5}},"metadata":{},"params":[]},{"name":"getCombinedImage","description":"gets a combined graphical snapshot of the chart and its navigator","privacy":"public","sourceRange":{"start":{"line":1159,"column":4},"end":{"line":1178,"column":5}},"metadata":{},"params":[{"name":"callback"},{"name":"renderLegend"}]},{"name":"_disableNavigatorChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":1184,"column":4},"end":{"line":1194,"column":5}},"metadata":{},"params":[]},{"name":"_showHorizontalGrid","description":"","privacy":"protected","sourceRange":{"start":{"line":1200,"column":4},"end":{"line":1214,"column":5}},"metadata":{},"params":[{"name":"hideGrid"},{"name":"axes"},{"name":"y"},{"name":"matchTicks"}]},{"name":"_returnGridAxis","description":"","privacy":"protected","sourceRange":{"start":{"line":1220,"column":4},"end":{"line":1226,"column":5}},"metadata":{},"params":[]},{"name":"_returnXDomain","description":"","privacy":"protected","sourceRange":{"start":{"line":1232,"column":4},"end":{"line":1240,"column":5}},"metadata":{},"params":[]},{"name":"_mutedChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":1242,"column":4},"end":{"line":1250,"column":5}},"metadata":{},"params":[]},{"name":"_setDomainCaller","description":"","privacy":"protected","sourceRange":{"start":{"line":1255,"column":4},"end":{"line":1263,"column":5}},"metadata":{},"params":[]},{"name":"_bothDomainsSet","description":"","privacy":"protected","sourceRange":{"start":{"line":1269,"column":4},"end":{"line":1279,"column":5}},"metadata":{},"params":[]},{"name":"_navSelectedDomainChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":1285,"column":4},"end":{"line":1291,"column":5}},"metadata":{},"params":[]},{"name":"_getXKey","description":"","privacy":"protected","sourceRange":{"start":{"line":1297,"column":4},"end":{"line":1309,"column":5}},"metadata":{},"params":[]},{"name":"_computeAxisActionConfig","description":"","privacy":"protected","sourceRange":{"start":{"line":1315,"column":4},"end":{"line":1335,"column":5}},"metadata":{},"params":[]},{"name":"_computeNavChartExtents","description":"","privacy":"protected","sourceRange":{"start":{"line":1341,"column":4},"end":{"line":1346,"column":5}},"metadata":{},"params":[{"name":"e"}]},{"name":"_langChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":1352,"column":4},"end":{"line":1360,"column":5}},"metadata":{},"params":[]},{"name":"_createStripe","description":"Creates a new stripe: checks that we have the necessary values and vars","privacy":"protected","sourceRange":{"start":{"line":1366,"column":4},"end":{"line":1381,"column":5}},"metadata":{},"params":[]},{"name":"_addStripeToData","description":"Addes a new stripe to the dataset","privacy":"protected","sourceRange":{"start":{"line":1387,"column":4},"end":{"line":1396,"column":5}},"metadata":{},"params":[]},{"name":"_checkForOverlap","description":"Look through our stripes and make sure they do not overlap","privacy":"protected","sourceRange":{"start":{"line":1402,"column":4},"end":{"line":1433,"column":5}},"metadata":{},"params":[{"name":"exts"},{"name":"indexes"}]},{"name":"_deleteRedundantStripes","description":"Removes overlapped stripes from the dataset","privacy":"protected","sourceRange":{"start":{"line":1439,"column":4},"end":{"line":1443,"column":5}},"metadata":{},"params":[{"name":"indexes"}]},{"name":"_stripeCoords","description":"Debounces mousemove for calc stripe coords","privacy":"protected","sourceRange":{"start":{"line":1449,"column":4},"end":{"line":1453,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_stripeCoordsDebounced","description":"On mousemove from the IS, calcs the mouse pos and if we are hovering over a stripe.","privacy":"protected","sourceRange":{"start":{"line":1459,"column":4},"end":{"line":1493,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_deleteStripe","description":"Removes a stripe from the dataset","privacy":"protected","sourceRange":{"start":{"line":1499,"column":4},"end":{"line":1502,"column":5}},"metadata":{},"params":[]},{"name":"_hoverEditableStripe","description":"When a stripe is hovered over, set up our brush to capture other interactions","privacy":"protected","sourceRange":{"start":{"line":1508,"column":4},"end":{"line":1540,"column":5}},"metadata":{},"params":[{"name":"index"}]},{"name":"_hoverSingleVectorStripe","description":"","privacy":"protected","sourceRange":{"start":{"line":1542,"column":4},"end":{"line":1560,"column":5}},"metadata":{},"params":[{"name":"index"}]},{"name":"_buildStripeHandles","description":"builds the brush for capturing other stripe interactions","privacy":"protected","sourceRange":{"start":{"line":1566,"column":4},"end":{"line":1592,"column":5}},"metadata":{},"params":[]},{"name":"_hideStripeHover","description":"Hides the brush for strip edits","privacy":"protected","sourceRange":{"start":{"line":1598,"column":4},"end":{"line":1614,"column":5}},"metadata":{},"params":[]},{"name":"_stripeEditStart","description":"Runs when a brush is first interacted with","privacy":"protected","sourceRange":{"start":{"line":1620,"column":4},"end":{"line":1624,"column":5}},"metadata":{},"params":[]},{"name":"_stripeEditEnd","description":"When they are done interacting with a brush, calc its new size","privacy":"protected","sourceRange":{"start":{"line":1630,"column":4},"end":{"line":1643,"column":5}},"metadata":{},"params":[]},{"name":"_showRef","description":"","privacy":"protected","sourceRange":{"start":{"line":1645,"column":4},"end":{"line":1647,"column":5}},"metadata":{},"params":[]}],"staticMethods":[],"demos":[{"url":"demo.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":587,"column":10},"end":{"line":1648,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"width","description":"The width of the elem; generally the width of the charting area for most components","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":63,"column":4},"end":{"line":66,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehavior.baseSize"},{"name":"height","description":"The height of the component; generally the height of the charting area for most components.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":72,"column":4},"end":{"line":75,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehavior.baseSize"},{"name":"margin","description":"Defines the base margin for the chart. Calcs are run to add to the margin to accommodate axes and other elements which exist within the SVG frame, but outside the chart frame.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":110,"column":4},"end":{"line":120,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.margins"},{"name":"chart-data","description":"container for the data object that drives the chart / component\nGenerally loaded with an iron-ajax tag (but doesnt have to be)\nThis can be set declaratively","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":390,"column":6},"end":{"line":392,"column":7}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.dataset"},{"name":"complete-series-config","description":"A configuration file generated by the chart behavior based on seriesConfig and defaultSeriesConfig.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":414,"column":7},"end":{"line":417,"column":8}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.completeSeriesConfig"},{"name":"muted-series","description":"A list of user selected muted series. Tied declaratively to series components\n\nThe series name is the key and the value is a boolean for whether it is muted or not:\n\n```\n{\n    'seriesId1':true,\n    'seriesId2':false,\n }\n```\n\nIn this example, seriesId1 is muted. seriesId2 was muted, but has been turned back on.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":476,"column":4},"end":{"line":480,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.mutedSeries"},{"name":"hard-mute","description":"Allows for a \"hard\" muting of the series/categories: the\nseries/category won't show up\nin the tooltip anymore, it's tooltip data won't be shown in the register\nand its extents won't be taken into account by the chart","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":487,"column":5},"end":{"line":490,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehavior.mutedSeries"},{"name":"tooltip-data","description":"Data reported back by the interaction space component. Displays the series name, values, and timestamp in the register. tooltipData is in the form:\n\n```\n   {\n       \"time\": \"2015-03-25T20:34:47.085Z\",\n       \"hidden\": false,\n       \"series\":[{\n           \"name\":\"seriesId1\",\n           \"coord\":[xCoord1, yCoord1],  //in pixel space\n           \"value\":{\n               \"x\":xVal1,             //in data space\n               \"seriesId1\":yVal1    //in data space\n           }\n       },{\n           \"name\":\"seriesId2\",\n           \"coord\":[xCoord2, yCoord2],  //in pixel space\n           \"value\":{\n               \"x\":xVal2,             //in data space\n               \"seriesId2\":yVal2    //in data space\n           },\n       }],\n       \"mouse\":[ mouseX, mouseY ],   //in pixel space\n       \"xArr\":[xCoord1 , xCoord2],   //in pixel space\n       \"yArr\":[yCoord1 , yCoord2],   //in pixel space\n   }\n```\n\nWhen not hovering on a chart, the tooltipData should still have the series names in order for them to still appear in the register. IE:\n\n```\n   {\n       \"time\": null,\n       \"hidden\": true,\n       \"series\":[{\n           \"name\":\"seriesId1\",\n           \"value\": null\n       },{\n           \"name\":\"seriesName1\",\n           \"value\": null\n       }],\n       \"mouse\": null,\n       \"xArr\": null,\n       \"yArr\": null\n   }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":692,"column":4},"end":{"line":695,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.tooltipData"},{"name":"default-empty-data","description":"The \"empty\" dataset that should be used for tooltipData when not hovering","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":700,"column":4},"end":{"line":704,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.tooltipData"},{"name":"extents-data","description":"Data reported back by the interaction space. Displays the interpreted x & y coords, width and height, and domain extents. extentsData is in the form:\n\n```\n  {\n    x1 = {pixel-space}\n    y1 = {pixel-space}\n    x2 = {pixel-space}\n    y2 = {pixel-space}\n    w = {pixels}\n    h = {pixels}\n    eX = [{domain}, {domain}];\n    eY = [{domain}, {domain}];\n  }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":801,"column":4},"end":{"line":804,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.extentsData"},{"name":"extents-action","description":"Used by the chart to interpret if extentsData is strip or zoom","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":808,"column":4},"end":{"line":811,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.extentsData"},{"name":"selection-type","description":"The zoom selection type:\n- xy\n- xAxis\n- yAxis","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2289,"column":4},"end":{"line":2293,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.selectionType"},{"name":"chart-extents","description":"Developer set chart extents for the chart. The chart will draw to whatever values are specified in the chartExtents.\nSetting this and not using \"dynamic\" will prevent the chart from\nhaving to parse the data to find the extents and therefore improve\nperformance for initial rendering\n```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nTo force the chart to calculate based on data, use \"dynamic\".\n```\n {\n     \"x\": [0,\"dynamic\"],\n     \"y\": [-10,\"dynamic\"],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1191,"column":4},"end":{"line":1194,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.chartExtents"},{"name":"data-extents","description":"```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1227,"column":4},"end":{"line":1230,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.dataExtents"},{"name":"event-config","description":"Configuration object to define what event should map to what icon and color.\nThe object has a key being the event name, the value being a configuration object for that event. The configuration object has four properties:\n- `color`: A valid color name found in the px-colors-design\n- `icon`: the reference to the icon; for 'px' it is an icon set and an icon name; for an image, it is a path\n- `type`: 'px', or 'image'.\n- `offset`: a 2 element array with the number of pixels to offset the icon. offset[0] is along the x-axis; offset[1] is along the y-axis; necessary for some icons to adjust their values to achieve a better alignment over the event line.\n- `size`: a size in pixels for images.\n- `enableTooltip` enable/disable tooltip on the event, useful when using a lot of events\n- `firstDateTimeFormat`: moment.js format string for the first part of the timestamp if the x Axis is time based\n- `separator`: the separator character between the two datetime strings\n- `secondDateTimeFormat`: moment.js format string for the second part of the timestamp if the x Axis is time based\n- `tooltipOrientation`: orientation of the tooltip\n- `timezone`: the moment.js timezone to be used for the timestamp\n- `lineWeight`: thickness of the line\n- `dataKey`: the access key for the eventData value to be used to position the event\n```\nFormat: {\n  \"Event-Name-A\":{\n    \"color\": \"a color, rgb or hex\",\n    \"icon\": \"a px icon\",\n    \"type\": \"px\",\n    \"offset\":[0,0],\n    'enableTooltip': true\n  },\n  \"Event-Name-C\":{\n    \"color\": \"a color, rgb or hex\",\n    \"icon\": \"path-to-an-img\",\n    \"type\": \"image\",\n    \"offset\":[0,0]\n  },\n}\n```\n\n```\nExample: {\n  \"Recalibrate\":{\n    \"color\": \"rgb(0,0,255)\",\n    \"icon\": \"px-vis:mov\",\n    \"type\": \"px\",\n    \"offset\":[-3,0]\n  },\n  \"Fan stop\":{\n    \"icon\": \"Dancing_banana.gif\",\n    \"type\": \"image\",\n    \"offset\":[-2,-20],\n    \"size\":\"25\"\n   }\n}\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1328,"column":4},"end":{"line":1330,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.events"},{"name":"default-event-config","description":"Configuration object to define what the default icon should be. This gets used if a) no eventConfig is defined or b) the particular event is not defined in the eventConfig object.\n\n```\nDefault: {\n  'color': 'grey7', //or theme var\n  'icon': 'px-vis:mov',\n  'type': 'px',\n  'offset': 0,\n  'lineColor': 'grey9',\n  'lineWeight': 1,\n  'enableTooltip': true\n  'firstDateTimeFormat': 'HH:mm:ss ZZ',\n  'secondDateTimeFormat': 'DD MMM YYYY',\n  'separator': '|',\n  'timezone': 'utc',\n  'tooltipOrientation': 'left'\n}\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1354,"column":4},"end":{"line":1356,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.events"},{"name":"event-data","description":"container for the data object that drives the events\nGenerally loaded with an iron-ajax tag (but doesnt have to be)\nThis can be set declaratively","sourceRange":{"start":{"line":747,"column":6},"end":{"line":750,"column":7}},"metadata":{},"type":"Array"},{"name":"svg","description":"svg is a holder for the d3 instantiated svg container to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":46,"column":4},"end":{"line":49,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"px-svg-elem","description":"","sourceRange":{"start":{"line":751,"column":6},"end":{"line":754,"column":7}},"metadata":{},"type":"Object"},{"name":"px-svg-elem-lower","description":"The SVG element inside the chart - not a D3 selected element. Used when there are two svgs in a chart","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":293,"column":4},"end":{"line":296,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.svgLower"},{"name":"canvas-layers-config","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2760,"column":4},"end":{"line":2763,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.canvasLayersConfig"},{"name":"canvas-context","description":"canvasContext is a holder for the instantiated canvas context to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":319,"column":4},"end":{"line":322,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"canvas-layers","description":"An array of the generated layers","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":328,"column":4},"end":{"line":332,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"render-to-canvas","description":"Boolean to specify if drawings should render to canvas instead of svg","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":397,"column":4},"end":{"line":401,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorD3.renderToCanvas"},{"name":"x","description":"x is a holder for the d3 instantiated scale object\nMust be set in the svg component and passed to all components so they know the drawing scale.\nThis can be set declaratively\n\nSee: https://github.com/d3/d3/blob/master/API.md#scales-d3-scale","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":445,"column":4},"end":{"line":448,"column":5}},"metadata":{},"type":"Function","inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"y","description":"y is a holder for the d3 instantiated scale object\nMust be set in the svg component and passed to all components so they know the drawing scale.\nThis can be set declaratively\n\nSee: https://github.com/d3/d3/blob/master/API.md#scales-d3-scale","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":459,"column":4},"end":{"line":462,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"is-multi-y","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":463,"column":4},"end":{"line":467,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorD3.axes"},{"name":"selected-domain","description":"New chart extents selected by the user\n\nServes as a trigger for the scale component to redefine the chart extents","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":634,"column":4},"end":{"line":640,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.selectedDomain"},{"name":"range","description":"Range object defining the time span\n  * Format ISO8601 strings\n```\n{\n   \"from\": \"2013-01-07T22:44:30.652Z\",\n   \"to\" : \"2013-02-04T22:44:30.652Z\"\n}\n```\n\nUpdates and is updated by SelectedDomain","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":672,"column":4},"end":{"line":675,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"name":"clip-path","description":"Holder for a clipping path ID","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":787,"column":4},"end":{"line":790,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorD3.clipPath"},{"name":"series-clip-path","description":"A more restricting clip path used to limit where the series are being drawn","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":795,"column":4},"end":{"line":798,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorD3.clipPath"},{"name":"series-color-list","description":"Defines an colors in order that will be used for series.","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":35,"column":4},"end":{"line":43,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxColorsBehavior.dataVisColors"},{"name":"x-axis-type","description":"Sets the type of data for the x values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `scaleBand`: another ordinal type meant to create a bar instead of a point.\n- `time`: for time domains.\n- `timeLocal`: for local time domains.\n- `linear`: for continuous input domains, such as numbers.\n- `log`: for continuous input domains displayed logarithmicly. NOTE: Per d3 docs, this scale cannot cross or include 0.\n- `pie`: for pie/donut charts","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1099,"column":4},"end":{"line":1102,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.axisTypes"},{"name":"y-axis-type","description":"Sets the type of data for the y values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `scaleBand`: another ordinal type meant to create a bar instead of a point.\n- `linear`: for continuous input domains, such as numbers.\n- `log`: for continuous input domains, such as numbers.\n- `pie`: for pie/donut charts","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1113,"column":4},"end":{"line":1116,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.axisTypes"},{"name":"series-config","description":"A configuration file to associate series order, name, type, and colors.\n\nAssociation of name, type, and seriesNumber should be developer set. Color and axis are optional.\n\n```\n {\n    \"seriesKey\": {  //seriesKey is a unique identifier for the configuration\n        \"type\": \"line\",  //line or scatter or both\n        \"priority\": 0, //relative priority is used to decide which series draw on top of each other. priority 0 => smaller priority. 2 draws over 1, which itself draws over 0, etc.. CANVAS ONLY\n        \"markerSymbol\": \"diamond\" //if using scatter different markerSymbol can be used. See \"markerSymbol\" in px-vis-scatter\n        \"markerSize\": \"64\" //if using scatter allows to change the size of markers\n        \"markerScale\": \"2\" //if using scatter allows to scale the size of markers\n        \"markerFillOpacity\": \"0.5\" //if using scatter allows to specify the opacity of the inside of the marker\n        \"markerStrokeOpacity\": \"1\" //if using scatter allows to specify the opacity of the outside of the marker\n        \"strokeWidth\": \"1\" //if using line, allows you to specify the thickness of the line\n        \"mutedOpacity\": \"0.3\" //opacity value to use when muting a serie\n        \"name\": \"My Series\",  //human readable name\n        \"x\": \"x\",  //index or key name for independent variable\n        \"y\": \"y\",  //index or key name for dependent variable\n        \"xAxisUnit\": \"Volt\" //Unit to be used for the X axis. Can be ignored if x axis is time based\n        \"yAxisUnit\": \"Oranges\" //unit to be used for the Y axis.\n        \"xMin\": 0,  // minimum x value\n        \"xMax\": 100,  //maximum x value\n        \"yMin\": 5,  //minimum y value\n        \"yMax\": 50,  //maximum y value\n        \"hideInRegister\": true, //dont show in the register\n        \"color\": \"rgb(0,0,0)\", //color you want for the series\n        \"negativeColor\": \"rgb(255,255,255)\", //color you want negative values of the series to be (not all charts)\n        \"interpolationFunction\": Px.d3.curveBasis, //The line interpretor you want to use. See property 'interpolationFunction'\n        \"axis\": {\n            \"id\": \"AXIS_ID\"   //a unique identifier\n            \"side\": \"left\"    //the side that you want the axis to draw on, `left` or `right`\n            \"number\": 1       //the order of the axis on each side\n         }\n    }\n }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":127,"column":6},"end":{"line":132,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"default-series-config","description":"Overwrites to the default configuration file. The defaultSeriesConfig is used to fill in the missing parts of seriesConfig. Any option from seriesConfig can be specified in the defaultSeriesConfig and will be automatically used if not defined in the seriesConfig","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":169,"column":6},"end":{"line":173,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"include-all-series","description":"A boolean flag on whether to include all the series in the data.\n- `false`: only series defined in the seriesConfig file will be drawn\n- `true`: All series in the dataset will be drawn. Defaults will be used for the seriesConfig. If this is used do not specify a seriesConfig","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":180,"column":6},"end":{"line":183,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"prevent-complete-series-config-calc","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":192,"column":6},"end":{"line":195,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.chartCommon"},{"name":"domain-changed","description":"Number which increments up when the domain(s) has(have) changed.\n\n0 (false) indicates that domains have not been set.\n\nServes as a trigger for many elements to redraw.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":527,"column":4},"end":{"line":531,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorD3.domainUpdate"},{"name":"tooltip-config","description":"Configuration object used to customize the tooltip cosmetic properties.\nPlease refer to px-vis-tooltip and px-vis-register (https://github.com/PredixDev/px-vis) for a list of supported properties\nMost interesting properties include:\n- width\n- height\n- tooltipStyle\n- forceDateTimeDisplay","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1155,"column":4},"end":{"line":1157,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.registerConfigs"},{"name":"register-config","description":"Configuration object used to customize the register cosmetic properties.\nPlease refer to px-vis-register (https://github.com/PredixDev/px-vis) for a list of supported properties","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1163,"column":4},"end":{"line":1165,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.registerConfigs"},{"name":"x-axis-config","description":"Configuration object used to customize the X axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1241,"column":4},"end":{"line":1243,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.axisConfigs"},{"name":"y-axis-config","description":"Configuration object used to customize the Y axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1249,"column":4},"end":{"line":1251,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.axisConfigs"},{"name":"hide-register","description":"Allows to hide the register","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1089,"column":4},"end":{"line":1093,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.registerPositioning"},{"name":"prevent-resize","description":"Prevents the chart from automatically resizing to fit its container","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":806,"column":6},"end":{"line":810,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"chart-horizontal-alignment","description":"This allows to decide how the chart\ndrawing will be horizontally aligned when smaller than its container. Values:\n- center\n- left\n- right\n\nif any other value is used then left alignment will be chosen","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":820,"column":6},"end":{"line":823,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"chart-vertical-alignment","description":"This allows to decide how the chart\ndrawing will be vertically aligned when smaller than its container. Values:\n- center\n- top\n- bottom\n\nif any other value is used then top alignment will be chosen","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":833,"column":6},"end":{"line":836,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"debounce-resize-timing","description":"Timing (in ms) to be used for iron resize when the chart auto size\n(preventResize = false)","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":848,"column":6},"end":{"line":851,"column":7}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.chartAutoResize"},{"name":"threshold-config","description":"Configuration object used to customize the threshold properties.\nPlease refer to px-vis-threshold (https://github.com/PredixDev/px-vis) for a list of supported properties","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2928,"column":4},"end":{"line":2930,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.thresholdConfig"},{"name":"threshold-data","description":"Data representing the events. Example:\n```\n[\n     { \"for\":\"y0\", \"type\":\"max\", \"value\":35.4784 },\n     { \"for\":\"y0\", \"type\":\"min\", \"value\":7.6531 },\n     { \"for\":\"y0\", \"type\":\"mean\", \"value\":15.330657585139331 },\n     { \"for\":\"y1\", \"type\":\"mean\", \"value\":75 },\n     { \"for\":\"\", \"type\":\"quartile\", \"value\":17 }\n ]\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1562,"column":4},"end":{"line":1564,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.thresholds"},{"name":"layer","description":"Array of the svg layers","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1479,"column":4},"end":{"line":1482,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"number-of-layers","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1483,"column":4},"end":{"line":1485,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"generate-layers","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1486,"column":4},"end":{"line":1489,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"navigator-config","description":"Configuration object used to customize the navigator cosmetic properties.\n\nThis can be a collection of other configureation properties, such as axisConfig","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1275,"column":4},"end":{"line":1277,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.navigatorConfig"},{"name":"serie-to-redraw-on-top","description":"Array containing a set of series to redraw on top of everything (in the order\nthey are found in this array)","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1916,"column":4},"end":{"line":1918,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.serieToRedrawOnTop"},{"name":"dynamic-menu-config","description":"The config used by a dynamic menu to create menu entries. Example:\n```\n[\n    {\n     'name': 'Delete',\n      'action': function(data) {\n        console.log('run delete');\n      },\n      'actionContext': aComponent,\n      'eventName': 'delete',\n      'icon': 'fa-trash'\n    },\n    {\n      'name': 'Bring To Front',\n      'action': function(data) {\n        console.log('run bring to front');\n      },\n      'eventName': 'bring-to-front',\n      'icon': 'fa-arrow-up'\n    }\n  ];\n```\n\n- `action` is function that will be run when a menu item is clicked. You can pass\na specific context to be used in that function through `actionContext`. Otherwsie the\ncontext is going to be the chart itself. The `data` parameter has 2 properties: `itemConfig`\nwhich is this specific menu item config object and `additionalDetail` which represents the\nregister item: `value` and `name` (name is the serie id). Please note that because `itemConfig`\nis being passed back you could tie anything to it and have it available in this function.\nIf dynamicMenuConfig is passed in directly in the HTML then `action` will have to be passed in\nas a string with quotes escaped rather than directly as a function.\n- `name` is the menu item displayed text\n- if `eventName` is defined then an event with this name will be fired when clicking the item\nthe detail of this event will include `data` which ahs 2 properties: `itemConfig` and `additionalDetail`\njust like `action` is getting. The event is fired from the chart\n- `icon` is optional and defines a font-awesome icon to be used for the menu entry","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2032,"column":4},"end":{"line":2034,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.dynamicMenuConfig"},{"name":"show-gaps","description":"A boolean spcifying if the line should show gaps on undefined data.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":1421,"column":4},"end":{"line":1424,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorD3.lineGaps"},{"name":"axes","description":"Represents all axes plotted by the chart, including muted ones.\nIt doesn't guarantee to have the same order as the current visual\nrepresentation.\nCan be set by the developer to define which axes to plot","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1586,"column":4},"end":{"line":1588,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.dimensions"},{"name":"dimensions","description":"An array of dimensions (axes) which the chart uses. This array represents\nthe current state of all axes: muted axes won't be included and the\narray is ordered based on the current visual representation.\nDo not set at a chart level, only read","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1595,"column":4},"end":{"line":1598,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.dimensions"},{"name":"series-key","description":"A string specifying which key to use as the series","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1603,"column":4},"end":{"line":1605,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.dimensions"},{"name":"series-to-axes","description":"Object linking which series belong to which axis","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2178,"column":5},"end":{"line":2180,"column":6}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.seriesToAxes"},{"name":"left-axis-size","description":"The size of an individual axis","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2221,"column":4},"end":{"line":2224,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"right-axis-size","description":"The size of an individual axis","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2230,"column":4},"end":{"line":2233,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"num-left-axes","description":"Number of axes on the left","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2239,"column":4},"end":{"line":2242,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"num-right-axes","description":"Number of axes on the right","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2248,"column":4},"end":{"line":2251,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"name":"offset","description":"An optional offset for a variety of elements","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":143,"column":4},"end":{"line":148,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.sizing"},{"name":"prevent-web-worker-synchronization","description":"Prevents the chart from synchronizing its data with a webworker.\nThis can be turned on to minimize the memory footprint of the\nchart\nWARNING: turning the synchronization off will:\n- prevent the chart from being able to use crosshair feature\n- slow down data search for tooltip/register\n- slow down calculating extents for the chart if it needs to\n\nWe advise against turning it off but it might be beneficial in\nspecific scenarios (high number of small charts with minimum\ninteraction for example)","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3078,"column":6},"end":{"line":3081,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehavior.preventWebWorkerSynchronization"},{"name":"disable-dynamic-update","description":"Defines if the viewable chart extents should update when chartData is updated","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":89,"column":4},"end":{"line":92,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"chart-id","description":"Internal unique ID","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":102,"column":4},"end":{"line":104,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"scale-padding","description":"The padding for ordinal type scales - effective controls the spacing between ordinal groups\n\nExpressed as a percent of the ordinal group width, so a value of 0.5 for a bar chart means your bar and the gap between bars are the same size","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":111,"column":4},"end":{"line":114,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"padding-outer","description":"The outer padding for ordinal type scales - effective controls the spacing between the first and last ordinal group the the axes\n\nExpressed as a percent of the ordinal group width, so a value of 0.5 for a bar chart means your bar and the gap between bars are the same size","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":120,"column":5},"end":{"line":123,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"log-base","description":"The base for logarithmic type scales","sourceRange":{"file":"../px-vis/px-vis-behavior-scale.html","start":{"line":127,"column":4},"end":{"line":130,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorScale.scale"},{"name":"action-config","description":"Configuration used to define what actions happen on events. Each key represents an event,\neach value can be:\n- a predefined action found as a key in px-vis-interaction-space `actionMapping`\n- a function, where `this` will be bound to the chart and the function's argument will be the mouse position on the chart","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2055,"column":4},"end":{"line":2058,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.actionConfig"},{"name":"zoom-stack","description":"Stack of previous zooms","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1705,"column":4},"end":{"line":1710,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"zoom-in-percentage","description":"Percentage used to calculate new extents when using zoomIn feature.\nThe higher the number the more it will zoom in. should be less than 1.","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1715,"column":4},"end":{"line":1718,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"zoom-out-percentage","description":"Percentage used to calculate new extents when using zoomOut feature.\nThe higher the number the more it will zoom out. should be less than 1.","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1723,"column":4},"end":{"line":1726,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.zoomGeneric"},{"name":"toolbar-sub-config","description":"toolbarSubConfig can be passed around from a toolbar to another so that clicking\non a \"global\" toolbar drives the sub row state for other toolbars","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2074,"column":4},"end":{"line":2076,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.toolbarSubConfig"},{"name":"interaction-space-config","description":"Configuration object used to customize the interaction space\nPlease refer to px-vis-interation space (https://github.com/PredixDev/px-vis) for a list of supported properties.","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1187,"column":4},"end":{"line":1190,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.interactionSpaceConfig"},{"name":"toolbar-config","description":"Configuration object used to customize the toolbar\nPlease refer to px-vis-toolbar (https://github.com/PredixDev/px-vis) for a list of supported properties.\nMost interesting properties include:\n- config (complex object for customizing the toolbar)\n- horizontalAlignment\n- subToolbarAlignment","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1216,"column":4},"end":{"line":1218,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.chartToolbarConfig"},{"name":"show-tooltip","description":"Whether to display the tooltip","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2179,"column":4},"end":{"line":2182,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.showTooltip"},{"name":"interpolation-function","description":"A d3 function used to interpolate the series lines.\n\nCan also be a string referencing simple, built in d3 functions:\n- `\"curveBasis\"`\n- `\"curveBasisClosed\"`\n- `\"curveBasisOpen\"`\n- `\"curveLinear\"`\n- `\"curveLinearClosed\"`\n- `\"curveMonotoneX\"`\n- `\"curveMonotoneY\"`\n- `\"curveNatural\"`\n- `\"curveStep\"`\n- `\"curveStepAfter\"`\n- `\"curveStepBefore\"`\n\nSee: https://github.com/d3/d3-shape/blob/master/README.md#curves","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":1202,"column":4},"end":{"line":1204,"column":5}},"metadata":{},"type":"Function","inheritedFrom":"PxVisBehaviorD3.interpolationFunction"},{"name":"mouse-position","description":"The mouse position in pixel coordinates. Only valid if _computedShowTooltip is true","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2882,"column":6},"end":{"line":2884,"column":7}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehaviorChart.tooltipFollowMouseCalculation"},{"name":"highlighter-config","description":"Configuration object used to customize the highlighter properties.\nPlease refer to px-vis-point-highlighter and px-vis-line-highlighter (https://github.com/PredixDev/px-vis) for a list of supported properties\nMost interesting properties include:\n- `fuzz` : +/- search window around the datapoint value\n- 'differenDataset' : if this chart has a different dataset from the crosshair data origin chart","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1302,"column":4},"end":{"line":1304,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.highlighterConfigs"},{"name":"crosshair-data","description":"Data reported back by the interaction space component so charts can share a crosshair. Has two sets of data: 1) the full data retrieved at the shared key so if all charts use the same datasets, this data can just be displayed on all the charts. 2) a list of just the shared key so if they use different datasets, a search for the closest data at each point can be made. crosshairData is in the form:\n\n```\n   {\n       \"rawData\":[{\n           \"[[sharedKey]]\": [[sharedKeyVal1]],\n           \"[[key1]]\":[[val]],\n           \"[[key2]]\":[[val]]\n       },{\n           \"[[sharedKey]]\": [[sharedKeyVal2]],\n           \"[[key1]]\":[[val]],\n           \"[[key2]]\":[[val]]\n       }],\n       \"timeStamps\":[ timeStamp1, timeStamp2 ]\n   }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":742,"column":4},"end":{"line":745,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"generating-crosshair-data","description":"Bool indicating if interaction space is currently generating data","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":751,"column":4},"end":{"line":755,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"crosshair-pixel-search","description":"Allows the crosshair to search all datapoints within a pixel radius. If set\nto 0 will only pick up the closest point","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":761,"column":4},"end":{"line":764,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehavior.crosshairData"},{"name":"ww-data-sync-counter","description":"Updated every time the chart gets new data and a sync request\nto the web worker happened. Use it for triggering observers\ninstead of chartData if the observer needs the data in the webworker\n(i.e kicking another webworker processing)","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3102,"column":4},"end":{"line":3105,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehavior.wwDataSyncCounter"},{"name":"language","description":"set a default for localizing","sourceRange":{"start":{"line":816,"column":6},"end":{"line":819,"column":7}},"metadata":{},"type":"string"},{"name":"resources","description":"List of key/values to be included for translating this component","sourceRange":{"start":{"line":810,"column":6},"end":{"line":812,"column":7}},"metadata":{},"type":"Object"},{"name":"formats","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"use-key-if-missing","description":"Use the key for localization if value for  language is missing. Should\nalways be true for  our components","sourceRange":{"start":{"line":824,"column":6},"end":{"line":827,"column":7}},"metadata":{},"type":"boolean"},{"name":"localize","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{},"type":"Function","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubble-event","description":"If true, will bubble up the event to the parents","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"stripe-config","description":"Configuration file for the striping.\n\nExample:\n{\n \"stripe1\": {\n      fillColor: \"rgb(255,0,0)\",\n      fillOpacity: 0.5\n },\n \"stripe2\": {\n      fillColor: \"rgb(0, 255,0)\",\n      fillOpacity: 0.5\n      dash: [5,2]\n  }\n}\n\n`dash` option is for single timestamp entries. This will draw a dashed line instead of an area. Default dash pattern is [5,2]. To create a solid line instead, put [0]","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3138,"column":4},"end":{"line":3140,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.stripProperties"},{"name":"stripe-data","description":"Data to create the striping. A list of start and end pairs for each strip type\n\nExample:\n{\n \"stripe1\": [\n   [t1, t2],\n   [t3, t4]\n],\n \"stripe2\": [\n   [t5, t6],\n   [t7, t8]\n]\n}","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3156,"column":4},"end":{"line":3160,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.stripProperties"},{"name":"stripe-type","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3161,"column":4},"end":{"line":3163,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.stripProperties"},{"name":"prevent-initial-drawing","description":"blocks initial drawings of axis until set to false","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2266,"column":4},"end":{"line":2269,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehavior.preventInitialDrawing"},{"name":"draw-debounce-time","description":"Debounce time to use for different types of rendering","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":40,"column":4},"end":{"line":50,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"debounce-on-panning","description":"Whether the drawings will be debounced on panning the chart.\nWhen not debounced the redraw will happen more often on panning,\nwhich should result in a smoother experience. However if rendering\na big number of points this can have the opposite effect since\nit wil redraw too often comapred tot he time taken to re render everything","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":61,"column":4},"end":{"line":64,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorRenderer.debounceOnPanning"},{"name":"renderer-minimum-points-per-frame","description":"The minimum number of points to render per frame\neven if the chart is laggy","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":170,"column":4},"end":{"line":173,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"renderer-frame-duration-target","description":"Target duration (in ms) for one frame. The renderer will try to render\nas much data as possible in that given timeframe before calling the next\nanimation frame.\nWARNING: this needs to be higher than 16ms since by default\nrequestAnimationFrame will be called every ~16ms, so our target needs to\nbe higher to ensure we keep the processor busy","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":182,"column":4},"end":{"line":185,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"renderer-frame-count-to-average","description":"Number of previous frames to average for the adaptive\nprogressive rendering","sourceRange":{"file":"../px-vis/px-vis-behavior-renderer.html","start":{"line":194,"column":4},"end":{"line":197,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorRenderer.base"},{"name":"marker-config","description":"Configuration object to define what marker should map to what icon, color, and row.\nThe object has a key being the marker name, the value being a configuration object for that marker. The configuration object has four properties:\n- `color`: A rgb color value for the fill or stroke.\n- `priority`: relative priority is used to decide which type of markers draw on top of each other. priority 0 => smaller priority. 2 draws over 1, which itself draws over 0, etc..\n- `markerFillOpacity`: the opacity of the inside of the marker\n- `markerStrokeOpacity`: the opacity of the outside of the marker\n- `markerSymbol`: the symbol type; see below\n- `markerSize`: specifies the size of markers\n- `markerScale`: allows to scale the size of markers\n- `location`: \"top\" or \"bottom\"\n- `row`: the row number on the top or the bottom, starting at 0\n- `showTooltip`: whether a tooltip should be shown on hover\n- `firstDateTimeFormat`: used to format the date part of the timestamp in the tooltip\n- `secondDateTimeFormat`: used to format the time part of the timestamp in the tooltip\n- `separator`: symbol between date and time in the tooltip\n- `timezone`: timezone to use for the timestamp in the tooltip\n- `tooltipOrientation`: orientation of the tooltip: \"left\", \"right\", \"bottom\", \"top\"\n- `tooltipLabel`: label to be used in the tooltip for this type. If not defined the key\nof this type will be used (which should match 'label' in the markerData)\n\nThe symbol used for the marker. Supported symbols:\n- 'circle'\n- 'cross'\n- 'diamond'\n- 'square'\n- 'triangle-up'\n- 'star'\n- 'wye'\nmore info at https://github.com/d3/d3-shape/blob/master/README.md#symbols\n\nSome additional \"custom\" types are also available:\n- 'bar'\n- 'thin-bar'\n- 'thick-bar'\n- 'x'\n```\nExample: {\n  'myMarkerType':{\n      'fillColor': 'rgb(123,0,0)',\n      'markerFillOpacity': 0.5,\n      'markerSymbol': 'square',\n      'markerSize': 4,\n      'location': 'top',\n      'row': 1,\n      'priority': 10,\n      'showTooltip': true,\n      'tooltipOrientation': 'top'\n  }\n}\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1453,"column":4},"end":{"line":1455,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.markers"},{"name":"marker-data","description":"Data representing the markers. Example:\n[\n   {\n     \"time\": 2,\n     \"label\": \"Recalibrate\"\n   },\n   {\n     \"time\": 3,\n     \"label\": \"Fan start\"\n   },\n   {\n     \"time\": 4,\n     \"label\": \"Fan stop\"\n   },\n   {\n     \"time\": 8,\n     \"label\": \"Default\"\n   }\n ]","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1477,"column":4},"end":{"line":1479,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.markers"},{"name":"annotation-data","description":"The annotation data: x and y values + the series which scale should be used.\nData is an arbitrary object you want to store for use when showing the\nannotation\n```\n   [{\n       x: 1325897523,\n       y: 15.7,\n       series: y0,\n       data: {...}\n   },{\n    ...\n    }]\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3373,"column":4},"end":{"line":3378,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.annotationData"},{"name":"show-strong-icon","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3380,"column":4},"end":{"line":3383,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehavior.annotationData"},{"name":"cursor-config","description":"Configuration object used to customize the cursor properties.\nPlease refer to px-vis-cursor (https://github.com/PredixDev/px-vis) for a list of supported properties","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1459,"column":4},"end":{"line":1461,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.cursorConfig"},{"name":"reference-data","description":"Data to create reference curves. Format matches chartData and requires a referenceConfig with similar props to seriesConfig.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3446,"column":4},"end":{"line":3446,"column":24}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.referenceCurveProps"},{"name":"reference-config","description":"A configuration object needed to draw reference curves. Format is similar to seriesConfig. Valid entries:\n- `x` : default: 'x'\n- `y`: default: 'y'\n- `interpolationFunction` : default: Px.d3.curveCardinal\n- `color` :\n- `strokeWidth` default: 1","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3457,"column":4},"end":{"line":3457,"column":27}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.referenceCurveProps"},{"name":"first-date-time-format","description":"Defines the format for the first datetime string. The first datetime is shown in normal font weight.\n\nDefault is the first datetime string is TIME presented as \"15:00:00 +0000\"\n\nFor valid string formats, see: http://momentjs.com/docs/#/displaying/","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":47,"column":4},"end":{"line":50,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"second-date-time-format","description":"Defines the format for the second datetime string. The second datetime is shown in bold font weight.\n\nDefault is the second datetime string is DATE presented as \"12 Feb 2016\"\n\nFor valid string formats, see: http://momentjs.com/docs/#/displaying/","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":62,"column":4},"end":{"line":65,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"separator","description":"Defines a separator character between the two datetime strings.","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":74,"column":4},"end":{"line":77,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"timezone","description":"Sets what timezone the event time should display in.\n\nTimezone defaults to UTC time. If a valid timezone is specified, then times include daylight savings time if applicable.\n\nFor a list of valid timezones, see: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n\nFor more details on timezones, see: http://momentjs.com/timezone/","sourceRange":{"file":"../px-vis/px-vis-behavior-datetime.html","start":{"line":91,"column":4},"end":{"line":94,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorTime.datetime"},{"name":"tooltip-requested","description":"Whether the tooltip should be shown or hidden","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3308,"column":5},"end":{"line":3311,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"tooltip-orientation","description":"Specifies the orientation of the event tooltip.","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":3318,"column":6},"end":{"line":3321,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehaviorChart.centralTooltip"},{"name":"x-axis-location","description":"Defines where to locate the X-axis.\n- `bottom`\n- `top`","sourceRange":{"start":{"line":673,"column":6},"end":{"line":676,"column":7}},"metadata":{},"type":"string"},{"name":"y-axis-location","description":"Defines where to locate the Y-axis.\n- `left`\n- `right`","sourceRange":{"start":{"line":686,"column":6},"end":{"line":689,"column":7}},"metadata":{},"type":"string"},{"name":"margin-nav","description":"Defines the base margin for the navigator.","sourceRange":{"start":{"line":698,"column":6},"end":{"line":701,"column":7}},"metadata":{},"type":"Object"},{"name":"margin-markers-adjustment","description":"Defines the adjusted margin for adding markers. By default the chart\nalready calculates margins for the markers (taking into account\naxes and normal margin) but this can be used to manually adjust\nwhere the markers are drawn\nmargin object:\n- top\n- bottom\n- left\n- right\nNot every property needs to be defined, only the one that have been\ndefined will be used.","sourceRange":{"start":{"line":715,"column":6},"end":{"line":718,"column":7}},"metadata":{},"type":"Object"},{"name":"options","description":"Configuration object for the chart. Key is the property name.","sourceRange":{"start":{"line":734,"column":6},"end":{"line":738,"column":7}},"metadata":{},"type":"Object"},{"name":"disable-navigator","description":"Flag to not show a navigator in the timeseries. Set to true to disable the navigator. Default false which shows the navigator","sourceRange":{"start":{"line":759,"column":6},"end":{"line":763,"column":7}},"metadata":{},"type":"boolean"},{"name":"hide-gridlines-x","description":"Whether to hide the gridlines perpendicular to the X axis","sourceRange":{"start":{"line":767,"column":6},"end":{"line":770,"column":7}},"metadata":{},"type":"boolean"},{"name":"hide-gridlines-y","description":"Whether to hide the gridlines perpendicular to the Y axis","sourceRange":{"start":{"line":774,"column":6},"end":{"line":777,"column":7}},"metadata":{},"type":"boolean"},{"name":"match-ticks","description":"A boolean to specify if the axis ticks should align (which affects\ntheir individual range). Default (false) is for each have their own\nranges and tick marks may not align\nOnly useful if using multiple axis","sourceRange":{"start":{"line":789,"column":6},"end":{"line":792,"column":7}},"metadata":{},"type":"boolean"}],"events":[{"type":"CustomEvent","name":"width-changed","description":"Fired when the `width` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.baseSize"},{"type":"CustomEvent","name":"height-changed","description":"Fired when the `height` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.baseSize"},{"type":"CustomEvent","name":"complete-series-config-changed","description":"Fired when the `completeSeriesConfig` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.completeSeriesConfig"},{"type":"CustomEvent","name":"muted-series-changed","description":"Fired when the `mutedSeries` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.mutedSeries"},{"type":"CustomEvent","name":"tooltip-data-changed","description":"Fired when the `tooltipData` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.tooltipData"},{"type":"CustomEvent","name":"default-empty-data-changed","description":"Fired when the `defaultEmptyData` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.tooltipData"},{"type":"CustomEvent","name":"extents-data-changed","description":"Fired when the `extentsData` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.extentsData"},{"type":"CustomEvent","name":"extents-action-changed","description":"Fired when the `extentsAction` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.extentsData"},{"type":"CustomEvent","name":"chart-extents-changed","description":"Fired when the `chartExtents` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.chartExtents"},{"type":"CustomEvent","name":"data-extents-changed","description":"Fired when the `dataExtents` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.dataExtents"},{"type":"CustomEvent","name":"svg-changed","description":"Fired when the `svg` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.svg"},{"type":"CustomEvent","name":"px-svg-elem-changed","description":"Fired when the `pxSvgElem` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.svg"},{"type":"CustomEvent","name":"px-svg-elem-lower-changed","description":"Fired when the `pxSvgElemLower` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.svgLower"},{"type":"CustomEvent","name":"canvas-context-changed","description":"Fired when the `canvasContext` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"type":"CustomEvent","name":"canvas-layers-changed","description":"Fired when the `canvasLayers` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"type":"CustomEvent","name":"x-changed","description":"Fired when the `x` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.axes"},{"type":"CustomEvent","name":"y-changed","description":"Fired when the `y` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.axes"},{"type":"CustomEvent","name":"selected-domain-changed","description":"Fired when the `selectedDomain` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.selectedDomain"},{"type":"CustomEvent","name":"range-changed","description":"Fired when the `range` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.selectedTimeDomain"},{"type":"CustomEvent","name":"clip-path-changed","description":"Fired when the `clipPath` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.clipPath"},{"type":"CustomEvent","name":"series-clip-path-changed","description":"Fired when the `seriesClipPath` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.clipPath"},{"type":"CustomEvent","name":"domain-changed-changed","description":"Fired when the `domainChanged` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.domainUpdate"},{"type":"CustomEvent","name":"layer-changed","description":"Fired when the `layer` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorChart.layers"},{"type":"CustomEvent","name":"dimensions-changed","description":"Fired when the `dimensions` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.dimensions"},{"type":"CustomEvent","name":"left-axis-size-changed","description":"Fired when the `leftAxisSize` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"type":"CustomEvent","name":"right-axis-size-changed","description":"Fired when the `rightAxisSize` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"type":"CustomEvent","name":"num-left-axes-changed","description":"Fired when the `numLeftAxes` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"type":"CustomEvent","name":"num-right-axes-changed","description":"Fired when the `numRightAxes` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorChart.multiAxis"},{"type":"CustomEvent","name":"px-vis-extents-applied","description":"px-vis-extents-applied","metadata":{},"inheritedFrom":"PxVisBehaviorScale.scale"},{"type":"CustomEvent","name":"action-config-changed","description":"Fired when the `actionConfig` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.actionConfig"},{"type":"CustomEvent","name":"px-vis-zoomed","description":"px-vis-zoomed","metadata":{},"inheritedFrom":"PxVisBehaviorChart.zooming"},{"type":"CustomEvent","name":"selection-type-changed","description":"Fired when the `selectionType` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.selectionType"},{"type":"CustomEvent","name":"crosshair-data-changed","description":"Fired when the `crosshairData` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.crosshairData"},{"type":"CustomEvent","name":"generating-crosshair-data-changed","description":"Fired when the `generatingCrosshairData` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.crosshairData"},{"type":"CustomEvent","name":"app-localize-resources-error","description":"app-localize-resources-error","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"app-localize-resources-loaded","description":"app-localize-resources-loaded","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"stripe-data-changed","description":"Fired when the `stripeData` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.stripProperties"},{"type":"CustomEvent","name":"px-vis-chart-canvas-rendering-ended","description":"px-vis-chart-canvas-rendering-ended","metadata":{},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"type":"CustomEvent","name":"px-vis-chart-canvas-rendering-started","description":"px-vis-chart-canvas-rendering-started","metadata":{},"inheritedFrom":"PxVisBehaviorRenderer.base"},{"type":"CustomEvent","name":"options-changed","description":"Fired when the `options` property changes.","metadata":{}},{"type":"CustomEvent","name":"event-data-changed","description":"Fired when the `eventData` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-vis-timeseries"}]}