{"schema_version":"1.0.0","elements":[{"description":"Creates an interactive box plot chart with both vertical and horizontal orientation.\n\n### Usage\n\n    <px-vis-boxplot\n      chart-data=[[chartData]]\n      width=\"500\"\n      height=\"300\">\n    </px-vis-boxplot>\n\n### Styling\nThe following custom properties are available for styling:\n\nCustom property | Description\n:----------------|:-------------\n  `--px-vis-axis-color` | The color for the axis lines, axis ticks, and axis tick labels\n  `--px-vis-axis-title-color` | The color for the axis title\n  |\n  |\n  |\n  `--px-vis-gridlines-color` | The color for the gridlines\n  |\n  |\n  |\n  `--px-vis-threshold-color` | The default color for a threshold\n  |\n  |\n  |\n  `--px-tooltip-background-color` | The color of the tooltip\n  `--px-tooltip-text-color` | The color of the tooltip text\n  `--px-tooltip-light-background-color` | The color of the light version tooltip\n  `--px-tooltip-light-text-color` | The color of the light version tooltip text\n  `--px-tooltip-light-border-color`| The color of the light version tooltip border\n  |\n  |\n  |\n  `--px-vis-font-family` | The font family for all labels and text","summary":"","path":"../px-vis-boxplot/px-vis-boxplot.html","properties":[{"name":"seriesColorList","type":"Array","description":"Defines an colors in order that will be used for series.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":35,"column":4},"end":{"line":43,"column":5}},"metadata":{"polymer":{}},"defaultValue":"[\"rgb(0,0,0)\",\"rgb(75,75,75)\",\"rgb(125,125,125)\",\"rgb(200,200,200)\"]","inheritedFrom":"PxColorsBehavior.dataVisColors"},{"name":"xAxisType","type":"string","description":"Sets the type of data for the x values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `scaleBand`: another ordinal type meant to create a bar instead of a point.\n- `time`: for time domains.\n- `timeLocal`: for local time domains.\n- `linear`: for continuous input domains, such as numbers.\n- `log`: for continuous input domains displayed logarithmicly. NOTE: Per d3 docs, this scale cannot cross or include 0.\n- `pie`: for pie/donut charts","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1099,"column":4},"end":{"line":1102,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"linear\"","inheritedFrom":"PxVisBehavior.axisTypes"},{"name":"yAxisType","type":"string","description":"Sets the type of data for the y values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `scaleBand`: another ordinal type meant to create a bar instead of a point.\n- `linear`: for continuous input domains, such as numbers.\n- `log`: for continuous input domains, such as numbers.\n- `pie`: for pie/donut charts","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1113,"column":4},"end":{"line":1116,"column":5}},"metadata":{"polymer":{}},"defaultValue":"\"linear\"","inheritedFrom":"PxVisBehavior.axisTypes"},{"name":"width","type":"number","description":"The width of the elem; generally the width of the charting area for most components","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":63,"column":4},"end":{"line":66,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.baseSize"},{"name":"height","type":"number","description":"The height of the component; generally the height of the charting area for most components.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":72,"column":4},"end":{"line":75,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.baseSize"},{"name":"chartExtents","type":"Object","description":"Developer set chart extents for the chart. The chart will draw to whatever values are specified in the chartExtents.\nSetting this and not using \"dynamic\" will prevent the chart from\nhaving to parse the data to find the extents and therefore improve\nperformance for initial rendering\n```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nTo force the chart to calculate based on data, use \"dynamic\".\n```\n {\n     \"x\": [0,\"dynamic\"],\n     \"y\": [-10,\"dynamic\"],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1191,"column":4},"end":{"line":1194,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.chartExtents"},{"name":"completeSeriesConfig","type":"Object","description":"A configuration file generated by the chart behavior based on seriesConfig and defaultSeriesConfig.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":414,"column":7},"end":{"line":417,"column":8}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.completeSeriesConfig"},{"name":"chartData","type":"Array","description":"An array of objects that contain data for each box and whisker\ncomponent on the box plot chart.\n\n```\n[{\n  series1: {\n    position: 1,\n    data: {\n      max: 90,\n      q3: 70,\n      mean: 50,\n      median: 50,\n      q1: 30,\n      min: 10,\n      outliers: [5, 2]\n    }\n  },\n  series2: {\n    position: 1,\n    data: {\n      max: 90,\n      q3: 70,\n      mean: 50,\n      median: 50,\n      q1: 30,\n      min: 10,\n      outliers: [5, 2]\n    }\n  }\n}]\n```","privacy":"public","sourceRange":{"start":{"line":356,"column":8},"end":{"line":360,"column":9}},"metadata":{"polymer":{"notify":true}},"defaultValue":"[]"},{"name":"dataExtents","type":"Object","description":"```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1227,"column":4},"end":{"line":1230,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehavior.dataExtents"},{"name":"_defaultMargin","type":"Object","description":"","privacy":"protected","sourceRange":{"start":{"line":434,"column":8},"end":{"line":442,"column":9}},"metadata":{"polymer":{}},"defaultValue":"{\"top\":10,\"right\":10,\"bottom\":50,\"left\":50}"},{"name":"margin","type":"Object","description":"Defines the base margin for the chart. Calcs are run to add to the margin\nto accommodate axes and other elements which exist within the SVG frame,\nbut outside the chart frame.","privacy":"public","sourceRange":{"start":{"line":372,"column":8},"end":{"line":375,"column":9}},"metadata":{"polymer":{}},"defaultValue":"[]"},{"name":"seriesId","type":"string","description":"A unique ID for each line series","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1763,"column":4},"end":{"line":1765,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.seriesId"},{"name":"thresholdConfig","type":"Object","description":"Configuration object used to customize the threshold properties.\nPlease refer to px-vis-threshold (https://github.com/PredixDev/px-vis) for a list of supported properties","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2928,"column":4},"end":{"line":2930,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.thresholdConfig"},{"name":"_defaultThresholdConfig","type":"Object","description":"Configuration object to define what the default icon should be. This gets used if a) no eventConfig is defined or b) the particular event is not defined in the eventConfig object.\n\n```\nDefault: {\n  'strokeWidth': '1',\n  'dashPattern': '5,2'\n}\n```","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1541,"column":4},"end":{"line":1549,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{\"strokeWidth\":\"1\",\"dashPattern\":\"5,2\"}","inheritedFrom":"PxVisBehavior.thresholds"},{"name":"thresholdData","type":"Array","description":"Data representing the events. Example:\n```\n[\n     { \"for\":\"y0\", \"type\":\"max\", \"value\":35.4784 },\n     { \"for\":\"y0\", \"type\":\"min\", \"value\":7.6531 },\n     { \"for\":\"y0\", \"type\":\"mean\", \"value\":15.330657585139331 },\n     { \"for\":\"y1\", \"type\":\"mean\", \"value\":75 },\n     { \"for\":\"\", \"type\":\"quartile\", \"value\":17 }\n ]\n```","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1562,"column":4},"end":{"line":1564,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.thresholds"},{"name":"_updateStyles","type":"Function","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3206,"column":4},"end":{"line":3208,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehavior.updateStylesOverride"},{"name":"_stylesUpdated","type":"number","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3209,"column":4},"end":{"line":3212,"column":5}},"metadata":{"polymer":{}},"defaultValue":"0","inheritedFrom":"PxVisBehavior.updateStylesOverride"},{"name":"domainChanged","type":"number","description":"Number which increments up when the domain(s) has(have) changed.\n\n0 (false) indicates that domains have not been set.\n\nServes as a trigger for many elements to redraw.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":527,"column":4},"end":{"line":531,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"0","inheritedFrom":"PxVisBehaviorD3.domainUpdate"},{"name":"xAxisConfig","type":"Object","description":"Configuration object used to customize the X axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1241,"column":4},"end":{"line":1243,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.axisConfigs"},{"name":"yAxisConfig","type":"Object","description":"Configuration object used to customize the Y axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1249,"column":4},"end":{"line":1251,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.axisConfigs"},{"name":"svg","type":"Object","description":"svg is a holder for the d3 instantiated svg container to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":46,"column":4},"end":{"line":49,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_uniqueIdsUsed","type":"Array","description":"Array of unique IDs generated for this comp. cleaned from global\nstore on detached","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2202,"column":5},"end":{"line":2207,"column":6}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"PxVisBehavior.uniqueIds"},{"name":"pxSvgElem","type":"Object","description":"The SVG element inside the chart - not a D3 selected element.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":54,"column":4},"end":{"line":57,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"layer","type":"Array","description":"Array of the svg layers","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1479,"column":4},"end":{"line":1482,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"numberOfLayers","type":"number","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1483,"column":4},"end":{"line":1485,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"generateLayers","type":"boolean","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1486,"column":4},"end":{"line":1489,"column":5}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"canvasLayersConfig","type":"Object","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2760,"column":4},"end":{"line":2763,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"PxVisBehavior.canvasLayersConfig"},{"name":"canvasContext","type":"Object","description":"canvasContext is a holder for the instantiated canvas context to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":319,"column":4},"end":{"line":322,"column":5}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"canvasLayers","type":"Object","description":"An array of the generated layers","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":328,"column":4},"end":{"line":332,"column":5}},"metadata":{"polymer":{"notify":true}},"defaultValue":"{}","inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"seriesConfig","type":"Object","description":"TODO: import behavior PxVisBehaviorChart.chartCommon","privacy":"public","sourceRange":{"start":{"line":363,"column":8},"end":{"line":365,"column":9}},"metadata":{"polymer":{}}},{"name":"boxWhiskerConfig","type":"Object","description":"Configuration object used to configure the box and whisker\ncomponents.  Refer to px-vis-box-whisker.html for a list\nof valid properties.","privacy":"public","sourceRange":{"start":{"line":382,"column":8},"end":{"line":384,"column":9}},"metadata":{"polymer":{}}},{"name":"scalePadding","type":"number","description":"Padding between boxes.","privacy":"public","sourceRange":{"start":{"line":389,"column":8},"end":{"line":392,"column":9}},"metadata":{"polymer":{}},"defaultValue":"0.5"},{"name":"orientation","type":"string","description":"Direction of the box plot chart.  The values can be\n'vertical' or 'horizontal'.","privacy":"public","sourceRange":{"start":{"line":398,"column":8},"end":{"line":401,"column":9}},"metadata":{"polymer":{}},"defaultValue":"\"vertical\""},{"name":"hideGridLines","type":"boolean","description":"If true the grid lines will be hidden.","privacy":"public","sourceRange":{"start":{"line":406,"column":8},"end":{"line":409,"column":9}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"tooltipDelay","type":"number","description":"Delay in miliseconds before tooltip appears.","privacy":"public","sourceRange":{"start":{"line":414,"column":8},"end":{"line":417,"column":9}},"metadata":{"polymer":{}},"defaultValue":"0"},{"name":"thresholdType","type":"string","description":"Sets the orientation of the threshold line. Applicable values:\n\n`x`: Threshold line will be vertical. Aligning with a value on the x-axis.\n`y`: Threshold line will be horizontal. Aligning with a value on the y-axis.","privacy":"public","sourceRange":{"start":{"line":425,"column":8},"end":{"line":428,"column":9}},"metadata":{"polymer":{}},"defaultValue":"\"y\""},{"name":"_internalMargin","type":"Object","description":"","privacy":"protected","sourceRange":{"start":{"line":430,"column":8},"end":{"line":432,"column":9}},"metadata":{"polymer":{}}},{"name":"_defaultColor","type":"string","description":"","privacy":"protected","sourceRange":{"start":{"line":444,"column":8},"end":{"line":447,"column":9}},"metadata":{"polymer":{}},"defaultValue":"\"#000\""},{"name":"_boxWidth","type":"number","description":"","privacy":"protected","sourceRange":{"start":{"line":449,"column":8},"end":{"line":451,"column":9}},"metadata":{"polymer":{}}},{"name":"_edgeWidth","type":"number","description":"","privacy":"protected","sourceRange":{"start":{"line":453,"column":8},"end":{"line":455,"column":9}},"metadata":{"polymer":{}}},{"name":"_paddingOuter","type":"number","description":"Padding seperating the axis and the box and whisker drawings.","privacy":"protected","sourceRange":{"start":{"line":460,"column":8},"end":{"line":463,"column":9}},"metadata":{"polymer":{}},"defaultValue":"0.5"},{"name":"_stylesResolved","type":"boolean","description":"Observe changes to this in order to know when css vars have changed.","privacy":"protected","sourceRange":{"start":{"line":468,"column":8},"end":{"line":471,"column":9}},"metadata":{"polymer":{}},"defaultValue":"false"}],"methods":[{"name":"ready","description":"","privacy":"protected","sourceRange":{"start":{"line":492,"column":6},"end":{"line":495,"column":7}},"metadata":{},"params":[]},{"name":"syncCSSTheme","description":"Retrieves the CSS style variables set on this element and applies them\nto the appropriate properties, triggering a redraw.","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":71,"column":4},"end":{"line":76,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_debounceSyncCSSTheme","description":"Debounced function call for `syncCSSTheme` method. Loops through available\nstyle variables to apply them to appropriate objects.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":85,"column":4},"end":{"line":108,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_applyStyleVariables","description":"Called when there is at least one style variable applied (the first is\nexpected to be named `--px-vis-series-color-0`). Loops through each\nstyle variable in the format `--px-vis-series-color-[n]` and applies\nthe resulting values and series color order to the element. Stops looping\nthrough style variables when it finds a gap.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":120,"column":4},"end":{"line":165,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_colorHexToRgb","description":"Converts a hex-format color to RGB.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":176,"column":4},"end":{"line":186,"column":5}},"metadata":{},"params":[{"name":"hex","type":"String","description":"A color in hex format"}],"return":{"type":"String","desc":"A color in RGB format"},"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_checkIfDevSetSeriesColorOrder","description":"Compares seriesColorOrder property value to the seriesColorOrder to determine if the dev set their own override.","privacy":"private","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":195,"column":4},"end":{"line":209,"column":5}},"metadata":{},"params":[],"return":{"type":"Boolean","desc":"true if dev set seriesColorOrder"},"inheritedFrom":"PxColorsBehavior.dataVisColorTheming"},{"name":"_getColor","description":"Helper function to return the correct color for a particular index.","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":229,"column":2},"end":{"line":234,"column":3}},"metadata":{},"params":[{"name":"i"}],"inheritedFrom":"PxColorsBehavior.getSeriesColors"},{"name":"_calcIndex","description":"Helper function to calculate the index. When we run out of indcies, it loops back over valid indicies.","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":239,"column":2},"end":{"line":241,"column":3}},"metadata":{},"params":[{"name":"i"},{"name":"l"}],"inheritedFrom":"PxColorsBehavior.getSeriesColors"},{"name":"_isValidData","description":"returns true if the data is valid: non NaN, null or undefined","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":354,"column":4},"end":{"line":357,"column":3}},"metadata":{},"params":[{"name":"d"}],"inheritedFrom":"PxVisBehavior.dataChecks"},{"name":"_isDataNotNull","description":"returns true if the data is not null","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":362,"column":2},"end":{"line":365,"column":3}},"metadata":{},"params":[{"name":"d"}],"inheritedFrom":"PxVisBehavior.dataChecks"},{"name":"hasUndefinedArguments","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":35,"column":2},"end":{"line":44,"column":3}},"metadata":{},"params":[{"name":"args"}],"inheritedFrom":"PxVisBehavior.observerCheck"},{"name":"created","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":3215,"column":2},"end":{"line":3236,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehavior.updateStylesOverride"},{"name":"detached","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2209,"column":2},"end":{"line":2216,"column":3}},"metadata":{},"params":[],"inheritedFrom":"PxVisBehavior.uniqueIds"},{"name":"generateRandomID","description":"Generates a random id string.\n\nTakes a string prefix, then adds 10 random chars","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":68,"column":2},"end":{"line":87,"column":3}},"metadata":{},"params":[{"name":"baseStr"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"cloneSVGElem","description":"Clones a SVG elem and sets a component property with the d3 instance of that clone.\n\nThe intent of this is to clone the high level 'g' elem we draw to and attach it.\nThe draw order matters  in SVG and we want the some stuff to appear on top of everything else\nSince we cannot easily ensure it draw order with components, we can stick top level items in a different 'g' that we know is drawn after the main 'g'","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":98,"column":2},"end":{"line":110,"column":3}},"metadata":{},"params":[{"name":"svg"},{"name":"prop"},{"name":"onBottom"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_drawSVGOnCanvas","description":"Draws the current svg into a canvas","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":115,"column":2},"end":{"line":173,"column":3}},"metadata":{},"params":[{"name":"canvas"},{"name":"elem"},{"name":"callback"},{"name":"x"},{"name":"y"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_drawCanvg","description":"Uses canvg third party to \"translate\" svg to javascript instructions\nfor the canvas, and draw on the canvas","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":178,"column":2},"end":{"line":186,"column":3}},"metadata":{},"params":[{"name":"canvas"},{"name":"svgData"},{"name":"x"},{"name":"y"},{"name":"callback"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_nativeDrawSvgOnCanvas","description":"Tries to draw the SVG to canvas and if that doesnt work, falls back on a failure callback","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":191,"column":2},"end":{"line":221,"column":3}},"metadata":{},"params":[{"name":"canvas"},{"name":"svgData"},{"name":"x"},{"name":"y"},{"name":"sucessCallback"},{"name":"failureCallback"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_getSVGOuterHtml","description":"fix for IE to get outer HTML","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":225,"column":2},"end":{"line":272,"column":3}},"metadata":{},"params":[{"name":"svg"}],"inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"_isObjEmpty","description":"Checks to see if an object is empty","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":834,"column":2},"end":{"line":842,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_isD3Empty","description":"Checks to see if an d3 obj is empty","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":850,"column":2},"end":{"line":855,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_doesD3HaveValues","description":"Checks to see if an d3 obj has something","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":863,"column":2},"end":{"line":868,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_doesObjHaveValues","description":"Checks to see if an object has values","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":876,"column":2},"end":{"line":885,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_hasProps","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":887,"column":2},"end":{"line":899,"column":3}},"metadata":{},"params":[{"name":"obj"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_isVarDefined","description":"Checks to see if an object is defined","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":907,"column":2},"end":{"line":912,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_isVarUndefined","description":"Checks to see if an object is defined","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":919,"column":2},"end":{"line":924,"column":3}},"metadata":{},"params":[{"name":"obj"}],"return":{"type":"bool"},"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_escapeCssSelector","description":"escapes '.' in css selectors so that we can appropriately select stuff with dots in thei ids","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":929,"column":2},"end":{"line":931,"column":3}},"metadata":{},"params":[{"name":"selector"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_checkThemeVariable","description":"Checks if a theme variable exists, if so, returns the theme value, if not, returns the default","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":936,"column":2},"end":{"line":953,"column":3}},"metadata":{},"params":[{"name":"varName"},{"name":"defaultValue"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_hexToRgb","description":"converts a hex to rgb color","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":958,"column":2},"end":{"line":969,"column":3}},"metadata":{},"params":[{"name":"hex"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_binarySearch","description":"Binary search through sorted chartData","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":974,"column":2},"end":{"line":992,"column":3}},"metadata":{},"params":[{"name":"data"},{"name":"key"},{"name":"val"},{"name":"lowerIndex"},{"name":"upperIndex"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_fuzzyBinarySearch","description":"Binary search through sorted chartData returning all vals within a window","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":997,"column":2},"end":{"line":1015,"column":3}},"metadata":{},"params":[{"name":"data"},{"name":"key"},{"name":"lowerFuzz"},{"name":"upperFuzz"},{"name":"lowerIndex"},{"name":"upperIndex"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_getAdjacentValues","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1017,"column":2},"end":{"line":1047,"column":3}},"metadata":{},"params":[{"name":"data"},{"name":"key"},{"name":"lowerFuzz"},{"name":"upperFuzz"},{"name":"lowerIndex"},{"name":"upperIndex"},{"name":"index"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"clone","description":"deep-copy object into newObject","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1052,"column":2},"end":{"line":1065,"column":3}},"metadata":{},"params":[{"name":"object"},{"name":"newObject"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"isVarNumber","description":"","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1067,"column":2},"end":{"line":1069,"column":3}},"metadata":{},"params":[{"name":"n"}],"inheritedFrom":"PxVisBehavior.commonMethods"},{"name":"_createLayers","description":"Creates <g> layers","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1499,"column":2},"end":{"line":1522,"column":3}},"metadata":{},"params":[{"name":"svg"},{"name":"numberOfLayers"},{"name":"propName"}],"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"_createLayersOnce","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1523,"column":2},"end":{"line":1534,"column":3}},"metadata":{},"params":[{"name":"svg"},{"name":"numberOfLayers"},{"name":"generateLayers"},{"name":"propName"}],"inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"getImage","description":"Takes a graphic \"snapshot\" of the component and pass results through a callback:\n- a canvas containing the graphical snapshot\n- a png base 64 data uri\n\ncallback object:\n{\n canvas: theCanvasObject\n image: \"data:image/png;base64;iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACN...\"\n}\n\nthe data uri can be used to save the image and the canvas object to do\nfurther processing, such as combining different elements snapshot into one image","privacy":"public","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":639,"column":4},"end":{"line":710,"column":5}},"metadata":{},"params":[{"name":"callback"},{"name":"renderLegend"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"_finishGetImage","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":711,"column":4},"end":{"line":716,"column":5}},"metadata":{},"params":[{"name":"callback"},{"name":"canvas"},{"name":"renderLegend"},{"name":"drawingWidth"},{"name":"drawingHeight"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"_getRegisterWidth","description":"","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":717,"column":4},"end":{"line":751,"column":5}},"metadata":{},"params":[{"name":"drawingWidth"},{"name":"drawingHeight"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"_drawRegister","description":"Draws a fake representation of the registers","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":755,"column":4},"end":{"line":783,"column":5}},"metadata":{},"params":[{"name":"context"},{"name":"startWidth"},{"name":"drawingHeight"}],"inheritedFrom":"PxVisBehaviorChart.saveImage"},{"name":"_applyConfigToElement","description":"Applies the config object to the element. Each key in the config object\nis the name of the property to be applied","privacy":"protected","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":919,"column":4},"end":{"line":937,"column":5}},"metadata":{},"params":[{"name":"config"},{"name":"element"}],"inheritedFrom":"PxVisBehaviorChart.subConfiguration"},{"name":"_chartDataChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":497,"column":6},"end":{"line":499,"column":7}},"metadata":{},"params":[{"name":"chartData"}]},{"name":"_orientationChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":501,"column":6},"end":{"line":517,"column":7}},"metadata":{},"params":[{"name":"orientation"}]},{"name":"_calcDataExtents","description":"","privacy":"protected","sourceRange":{"start":{"line":519,"column":6},"end":{"line":561,"column":7}},"metadata":{},"params":[{"name":"chartData"}]},{"name":"_resolveFirstKey","description":"","privacy":"protected","sourceRange":{"start":{"line":563,"column":6},"end":{"line":570,"column":7}},"metadata":{},"params":[{"name":"obj"}]},{"name":"_resolveFirstValue","description":"","privacy":"protected","sourceRange":{"start":{"line":572,"column":6},"end":{"line":579,"column":7}},"metadata":{},"params":[{"name":"obj"}]},{"name":"_getBoxWhiskerSeriesKey","description":"Returns name of the series for an object from the\nchartData array. Used mainly by template.","privacy":"protected","sourceRange":{"start":{"line":585,"column":6},"end":{"line":587,"column":7}},"metadata":{},"params":[{"name":"item"}]},{"name":"_getBoxWhiskerData","description":"Returns box plot data from an object in the\nchartData array. Used mainly by template.","privacy":"protected","sourceRange":{"start":{"line":593,"column":6},"end":{"line":601,"column":7}},"metadata":{},"params":[{"name":"item"}]},{"name":"_getBoxWhiskerPosition","description":"Returns box plot position value from an object in the\nchartData array. Used mainly by template.","privacy":"protected","sourceRange":{"start":{"line":607,"column":6},"end":{"line":609,"column":7}},"metadata":{},"params":[{"name":"item"}]},{"name":"_showGridlines","description":"","privacy":"protected","sourceRange":{"start":{"line":611,"column":6},"end":{"line":613,"column":7}},"metadata":{},"params":[{"name":"hideGridLines"},{"name":"orientation"},{"name":"direction"}]},{"name":"_boxWhiskerConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":615,"column":6},"end":{"line":632,"column":7}},"metadata":{},"params":[{"name":"conf"}]},{"name":"_xAxisConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":634,"column":6},"end":{"line":639,"column":7}},"metadata":{},"params":[{"name":"xAxisConfig"}]},{"name":"_yAxisConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":641,"column":6},"end":{"line":646,"column":7}},"metadata":{},"params":[{"name":"yAxisConfig"}]},{"name":"_thresholdConfigChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":648,"column":6},"end":{"line":653,"column":7}},"metadata":{},"params":[{"name":"thresholdConfig"}]},{"name":"_updateSeriesConfig","description":"","privacy":"protected","sourceRange":{"start":{"line":655,"column":6},"end":{"line":660,"column":7}},"metadata":{},"params":[]},{"name":"_generateSeriesConfig","description":"Generates seriesConfig object based on chartData. Used if application does\nnot define its own seriesConfig.","privacy":"protected","sourceRange":{"start":{"line":666,"column":6},"end":{"line":677,"column":7}},"metadata":{},"params":[{"name":"chartData"}]},{"name":"_setScalePadding","description":"","privacy":"protected","sourceRange":{"start":{"line":679,"column":6},"end":{"line":691,"column":7}},"metadata":{},"params":[]},{"name":"_updateMargin","description":"","privacy":"protected","sourceRange":{"start":{"line":693,"column":6},"end":{"line":705,"column":7}},"metadata":{},"params":[]},{"name":"_handleBoxMouseover","description":"","privacy":"protected","sourceRange":{"start":{"line":707,"column":6},"end":{"line":710,"column":7}},"metadata":{},"params":[{"name":"event"},{"name":"details"}]},{"name":"_handleBoxMouseout","description":"","privacy":"protected","sourceRange":{"start":{"line":712,"column":6},"end":{"line":715,"column":7}},"metadata":{},"params":[{"name":"event"},{"name":"details"}]},{"name":"_handleOutlierMouseover","description":"","privacy":"protected","sourceRange":{"start":{"line":717,"column":6},"end":{"line":720,"column":7}},"metadata":{},"params":[{"name":"event"},{"name":"details"}]},{"name":"_handleOutlierMouseout","description":"","privacy":"protected","sourceRange":{"start":{"line":722,"column":6},"end":{"line":725,"column":7}},"metadata":{},"params":[{"name":"event"},{"name":"details"}]},{"name":"_setHoveredEl","description":"","privacy":"protected","sourceRange":{"start":{"line":727,"column":6},"end":{"line":756,"column":7}},"metadata":{},"params":[{"name":"hoveredEl"},{"name":"delay"}]},{"name":"_showTooltip","description":"","privacy":"protected","sourceRange":{"start":{"line":758,"column":6},"end":{"line":762,"column":7}},"metadata":{},"params":[{"name":"el"},{"name":"msg"}]},{"name":"_closeTooltip","description":"","privacy":"protected","sourceRange":{"start":{"line":764,"column":6},"end":{"line":766,"column":7}},"metadata":{},"params":[]},{"name":"_createTooltipMessageBox","description":"","privacy":"protected","sourceRange":{"start":{"line":768,"column":6},"end":{"line":791,"column":7}},"metadata":{},"params":[{"name":"item"}]},{"name":"_createTooltipMessageOutlier","description":"","privacy":"protected","sourceRange":{"start":{"line":793,"column":6},"end":{"line":802,"column":7}},"metadata":{},"params":[{"name":"item"}]},{"name":"_resolveCssVars","description":"","privacy":"protected","sourceRange":{"start":{"line":804,"column":6},"end":{"line":829,"column":7}},"metadata":{},"params":[]},{"name":"_getGridlines","description":"","privacy":"protected","sourceRange":{"start":{"line":831,"column":6},"end":{"line":837,"column":7}},"metadata":{},"params":[]}],"staticMethods":[],"demos":[{"url":"index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":221,"column":12},"end":{"line":839,"column":5}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"series-color-list","description":"Defines an colors in order that will be used for series.","sourceRange":{"file":"../px-vis/px-vis-behavior-colors.html","start":{"line":35,"column":4},"end":{"line":43,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxColorsBehavior.dataVisColors"},{"name":"x-axis-type","description":"Sets the type of data for the x values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `scaleBand`: another ordinal type meant to create a bar instead of a point.\n- `time`: for time domains.\n- `timeLocal`: for local time domains.\n- `linear`: for continuous input domains, such as numbers.\n- `log`: for continuous input domains displayed logarithmicly. NOTE: Per d3 docs, this scale cannot cross or include 0.\n- `pie`: for pie/donut charts","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1099,"column":4},"end":{"line":1102,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.axisTypes"},{"name":"y-axis-type","description":"Sets the type of data for the y values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `scaleBand`: another ordinal type meant to create a bar instead of a point.\n- `linear`: for continuous input domains, such as numbers.\n- `log`: for continuous input domains, such as numbers.\n- `pie`: for pie/donut charts","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1113,"column":4},"end":{"line":1116,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.axisTypes"},{"name":"width","description":"The width of the elem; generally the width of the charting area for most components","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":63,"column":4},"end":{"line":66,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehavior.baseSize"},{"name":"height","description":"The height of the component; generally the height of the charting area for most components.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":72,"column":4},"end":{"line":75,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehavior.baseSize"},{"name":"chart-extents","description":"Developer set chart extents for the chart. The chart will draw to whatever values are specified in the chartExtents.\nSetting this and not using \"dynamic\" will prevent the chart from\nhaving to parse the data to find the extents and therefore improve\nperformance for initial rendering\n```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nTo force the chart to calculate based on data, use \"dynamic\".\n```\n {\n     \"x\": [0,\"dynamic\"],\n     \"y\": [-10,\"dynamic\"],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1191,"column":4},"end":{"line":1194,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.chartExtents"},{"name":"complete-series-config","description":"A configuration file generated by the chart behavior based on seriesConfig and defaultSeriesConfig.","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":414,"column":7},"end":{"line":417,"column":8}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.completeSeriesConfig"},{"name":"chart-data","description":"An array of objects that contain data for each box and whisker\ncomponent on the box plot chart.\n\n```\n[{\n  series1: {\n    position: 1,\n    data: {\n      max: 90,\n      q3: 70,\n      mean: 50,\n      median: 50,\n      q1: 30,\n      min: 10,\n      outliers: [5, 2]\n    }\n  },\n  series2: {\n    position: 1,\n    data: {\n      max: 90,\n      q3: 70,\n      mean: 50,\n      median: 50,\n      q1: 30,\n      min: 10,\n      outliers: [5, 2]\n    }\n  }\n}]\n```","sourceRange":{"start":{"line":356,"column":8},"end":{"line":360,"column":9}},"metadata":{},"type":"Array"},{"name":"data-extents","description":"```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1227,"column":4},"end":{"line":1230,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.dataExtents"},{"name":"margin","description":"Defines the base margin for the chart. Calcs are run to add to the margin\nto accommodate axes and other elements which exist within the SVG frame,\nbut outside the chart frame.","sourceRange":{"start":{"line":372,"column":8},"end":{"line":375,"column":9}},"metadata":{},"type":"Object"},{"name":"series-id","description":"A unique ID for each line series","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1763,"column":4},"end":{"line":1765,"column":5}},"metadata":{},"type":"string","inheritedFrom":"PxVisBehavior.seriesId"},{"name":"threshold-config","description":"Configuration object used to customize the threshold properties.\nPlease refer to px-vis-threshold (https://github.com/PredixDev/px-vis) for a list of supported properties","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":2928,"column":4},"end":{"line":2930,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.thresholdConfig"},{"name":"threshold-data","description":"Data representing the events. Example:\n```\n[\n     { \"for\":\"y0\", \"type\":\"max\", \"value\":35.4784 },\n     { \"for\":\"y0\", \"type\":\"min\", \"value\":7.6531 },\n     { \"for\":\"y0\", \"type\":\"mean\", \"value\":15.330657585139331 },\n     { \"for\":\"y1\", \"type\":\"mean\", \"value\":75 },\n     { \"for\":\"\", \"type\":\"quartile\", \"value\":17 }\n ]\n```","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":1562,"column":4},"end":{"line":1564,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehavior.thresholds"},{"name":"domain-changed","description":"Number which increments up when the domain(s) has(have) changed.\n\n0 (false) indicates that domains have not been set.\n\nServes as a trigger for many elements to redraw.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":527,"column":4},"end":{"line":531,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorD3.domainUpdate"},{"name":"x-axis-config","description":"Configuration object used to customize the X axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1241,"column":4},"end":{"line":1243,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.axisConfigs"},{"name":"y-axis-config","description":"Configuration object used to customize the Y axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1249,"column":4},"end":{"line":1251,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorChart.axisConfigs"},{"name":"svg","description":"svg is a holder for the d3 instantiated svg container to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":46,"column":4},"end":{"line":49,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"px-svg-elem","description":"The SVG element inside the chart - not a D3 selected element.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":54,"column":4},"end":{"line":57,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.svg"},{"name":"layer","description":"Array of the svg layers","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1479,"column":4},"end":{"line":1482,"column":5}},"metadata":{},"type":"Array","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"number-of-layers","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1483,"column":4},"end":{"line":1485,"column":5}},"metadata":{},"type":"number","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"generate-layers","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-chart.html","start":{"line":1486,"column":4},"end":{"line":1489,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"PxVisBehaviorChart.layers"},{"name":"canvas-layers-config","description":"","sourceRange":{"file":"../px-vis/px-vis-behavior-common.html","start":{"line":2760,"column":4},"end":{"line":2763,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehavior.canvasLayersConfig"},{"name":"canvas-context","description":"canvasContext is a holder for the instantiated canvas context to draw to.\nMust be set in ready and passed to all components so they know whom to draw to.","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":319,"column":4},"end":{"line":322,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"canvas-layers","description":"An array of the generated layers","sourceRange":{"file":"../px-vis/px-vis-behavior-d3.html","start":{"line":328,"column":4},"end":{"line":332,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"name":"series-config","description":"TODO: import behavior PxVisBehaviorChart.chartCommon","sourceRange":{"start":{"line":363,"column":8},"end":{"line":365,"column":9}},"metadata":{},"type":"Object"},{"name":"box-whisker-config","description":"Configuration object used to configure the box and whisker\ncomponents.  Refer to px-vis-box-whisker.html for a list\nof valid properties.","sourceRange":{"start":{"line":382,"column":8},"end":{"line":384,"column":9}},"metadata":{},"type":"Object"},{"name":"scale-padding","description":"Padding between boxes.","sourceRange":{"start":{"line":389,"column":8},"end":{"line":392,"column":9}},"metadata":{},"type":"number"},{"name":"orientation","description":"Direction of the box plot chart.  The values can be\n'vertical' or 'horizontal'.","sourceRange":{"start":{"line":398,"column":8},"end":{"line":401,"column":9}},"metadata":{},"type":"string"},{"name":"hide-grid-lines","description":"If true the grid lines will be hidden.","sourceRange":{"start":{"line":406,"column":8},"end":{"line":409,"column":9}},"metadata":{},"type":"boolean"},{"name":"tooltip-delay","description":"Delay in miliseconds before tooltip appears.","sourceRange":{"start":{"line":414,"column":8},"end":{"line":417,"column":9}},"metadata":{},"type":"number"},{"name":"threshold-type","description":"Sets the orientation of the threshold line. Applicable values:\n\n`x`: Threshold line will be vertical. Aligning with a value on the x-axis.\n`y`: Threshold line will be horizontal. Aligning with a value on the y-axis.","sourceRange":{"start":{"line":425,"column":8},"end":{"line":428,"column":9}},"metadata":{},"type":"string"}],"events":[{"type":"CustomEvent","name":"width-changed","description":"Fired when the `width` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.baseSize"},{"type":"CustomEvent","name":"height-changed","description":"Fired when the `height` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.baseSize"},{"type":"CustomEvent","name":"chart-extents-changed","description":"Fired when the `chartExtents` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.chartExtents"},{"type":"CustomEvent","name":"complete-series-config-changed","description":"Fired when the `completeSeriesConfig` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.completeSeriesConfig"},{"type":"CustomEvent","name":"data-extents-changed","description":"Fired when the `dataExtents` property changes.","metadata":{},"inheritedFrom":"PxVisBehavior.dataExtents"},{"type":"CustomEvent","name":"domain-changed-changed","description":"Fired when the `domainChanged` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.domainUpdate"},{"type":"CustomEvent","name":"svg-changed","description":"Fired when the `svg` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.svg"},{"type":"CustomEvent","name":"px-svg-elem-changed","description":"Fired when the `pxSvgElem` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.svg"},{"type":"CustomEvent","name":"layer-changed","description":"Fired when the `layer` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorChart.layers"},{"type":"CustomEvent","name":"canvas-context-changed","description":"Fired when the `canvasContext` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"type":"CustomEvent","name":"canvas-layers-changed","description":"Fired when the `canvasLayers` property changes.","metadata":{},"inheritedFrom":"PxVisBehaviorD3.canvasContext"},{"type":"CustomEvent","name":"px-vis-box-click","description":"px-vis-box-click","metadata":{}},{"type":"CustomEvent","name":"px-vis-box-mouseout","description":"px-vis-box-mouseout","metadata":{}},{"type":"CustomEvent","name":"px-vis-box-mouseover","description":"px-vis-box-mouseover","metadata":{}},{"type":"CustomEvent","name":"px-vis-outlier-mouseout","description":"px-vis-outlier-mouseout","metadata":{}},{"type":"CustomEvent","name":"px-vis-outlier-mouseover","description":"px-vis-outlier-mouseover","metadata":{}},{"type":"CustomEvent","name":"chart-data-changed","description":"Fired when the `chartData` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-vis-boxplot"}]}