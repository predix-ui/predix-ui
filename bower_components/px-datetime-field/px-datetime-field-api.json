{"schema_version":"1.0.0","elements":[{"description":"The datetime components rely on [Moment.js](https://momentjs.com/) and [Moment Timezone](https://momentjs.com/timezone/).\n\n### Usage\n\n    <px-datetime-field></px-datetime-field>\n\n\n### Styling\nThe following custom property is available for styling. Please also refer to px-forms-design for additional variables that can be used to customize the field's appearance.\n\nCustom property | Description\n:----------------|:-------------\n`--px-datetime-field-background-color` | Background color for field and validation\n`--px-datetime-field-height`  | Sets the height of the input field\n`px-input` css variables | Impacts the input text, border, and background colors\n`px-validation-error` css variables | Impacts validation error text and background color","summary":"","path":"../px-datetime-field/px-datetime-field.html","properties":[{"name":"keyEventTarget","type":"?EventTarget","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":277,"column":6},"end":{"line":282,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stopKeyboardEventPropagation","type":"boolean","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":288,"column":6},"end":{"line":288,"column":65}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_boundKeyHandlers","type":"Array","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":290,"column":6},"end":{"line":295,"column":7}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_imperativeKeyBindings","type":"Object","description":"own properties of everything on the \"prototype\".","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":299,"column":6},"end":{"line":304,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyBindings","type":"Object","description":"Key bindings for iron-a11y-keys-behavior","privacy":"private","sourceRange":{"start":{"line":317,"column":4},"end":{"line":320,"column":5}},"metadata":{"polymer":{}}},{"name":"blockFutureDates","type":"boolean","description":"Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":34,"column":6},"end":{"line":37,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"blockPastDates","type":"boolean","description":"Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":41,"column":6},"end":{"line":44,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"__localizationCache","type":"Object","description":"Internal singleton cache. This is the private implementation of the\nbehaviour; don't interact with it directly.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":140,"column":2},"end":{"line":144,"column":3}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"language","type":"string","description":"set a default for localizing","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":50,"column":6},"end":{"line":53,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"en\"","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"resources","type":"Object","description":"used to pass in strings for localization","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":65,"column":6},"end":{"line":84,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{\"en\":{\"Future dates are not allowed\":\"Future dates are not allowed\",\"Past dates are not allowed\":\"Past dates are not allowed\",\"Year\":\"Year\",\"Month\":\"Month\",\"Day\":\"Day\",\"Hour\":\"Hour\",\"Minute\":\"Minute\",\"Second\":\"Second\",\"Millisecond\":\"Millisecond\",\"is not valid\":\"is not valid\",\"This hour is not within a 12 hour clock\":\"This hour is not within a 12 hour clock\"}}","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"formats","type":"Object","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"useKeyIfMissing","type":"boolean","description":"Use the key for localization if value for  language is missing. Should\nalways be true for px components","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":58,"column":6},"end":{"line":61,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"localize","type":"Function","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubbleEvent","type":"boolean","description":"If true, will bubble up the event to the parents","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"timeZone","type":"string","description":"Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":64,"column":6},"end":{"line":70,"column":8}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"minDate","type":"Object","description":"The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":89,"column":6},"end":{"line":92,"column":7}},"metadata":{"polymer":{"observer":"\"_minDateChanged\""}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"maxDate","type":"Object","description":"The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":96,"column":6},"end":{"line":99,"column":7}},"metadata":{"polymer":{"observer":"\"_maxDateChanged\""}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"momentObj","type":"Object","description":"Moment value with the date or time to display.  Will be parsed according to the moment format. (See momentFormat property.)","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-behavior.html","start":{"line":33,"column":6},"end":{"line":39,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"null","inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"showButtons","type":"boolean","description":"Whether to show Apply and Cancel buttons in the components","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-button-behavior.html","start":{"line":33,"column":6},"end":{"line":37,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.Buttons"},{"name":"isValid","type":"boolean","description":"Computed from `fieldIsValid`, `dateIsValid`, `timeIsValid`.\nAll of them must valid for `isValid` to be true.","privacy":"public","sourceRange":{"start":{"line":207,"column":6},"end":{"line":210,"column":7}},"metadata":{"polymer":{"readOnly":true}}},{"name":"validationErrorMessage","type":"string","description":"String used to describe the current invalid state","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":43,"column":6},"end":{"line":46,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"invalid\"","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"containerType","type":"string","description":"An optional type set on the px-overlay-container and px-overlay-content to associate specific overlay-contents with their container","privacy":"public","sourceRange":{"file":"../px-overlay/px-overlay-behavior.html","start":{"line":39,"column":4},"end":{"line":39,"column":25}},"metadata":{"polymer":{}},"inheritedFrom":"PxOverlayBehavior.sharedProperties"},{"name":"dateFormat","type":"string","description":"Moment format string for the DATE format to display/validate this field against\nYear, month, and day (support YYYY, YY, M, MM, D, DD)\n(see http://momentjs.com/docs/#/parsing/string/)","privacy":"public","sourceRange":{"start":{"line":116,"column":6},"end":{"line":119,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"YYYY-MM-DD\""},{"name":"timeFormat","type":"string","description":"Moment format string for the TIME format to display/validate this field against.\nHour, minute, second, millisecond, am/pm, and offset tokens\n(see http://momentjs.com/docs/#/parsing/string/)","privacy":"public","sourceRange":{"start":{"line":125,"column":6},"end":{"line":128,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"HH:mm:ss\""},{"name":"showTimeZone","type":"string","description":"The format of displaying the time zone:\n - `dropdown`: shows the time zone as a dropdown which the user can use to select a different time zone. Only contains a subset of all time zones\n - `extendedDropdown`: shows the time zone as a dropdown which the user can use to select a different time zone. Contains all existing time zones (588)\n - `text`: shows the time zone as text, non editable\n - `abbreviatedText`: shows the time zone as an abbreviated text, non editable (such as PST, EST...)","privacy":"public","sourceRange":{"start":{"line":137,"column":6},"end":{"line":140,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\""},{"name":"hideTime","type":"boolean","description":"Controls whether time is displayed in the field.","privacy":"public","sourceRange":{"start":{"line":144,"column":6},"end":{"line":147,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"hideDate","type":"boolean","description":"Controls whether date is displayed in the field.","privacy":"public","sourceRange":{"start":{"line":151,"column":6},"end":{"line":154,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"hideIcon","type":"boolean","description":"Controls whether the calendar/clock icon are displayed in the field.","privacy":"public","sourceRange":{"start":{"line":158,"column":6},"end":{"line":161,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"allowWrap","type":"boolean","description":"Controls whether the buttons will wrap under the field if\nthe horizontal space is too small.","privacy":"public","sourceRange":{"start":{"line":166,"column":6},"end":{"line":169,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"required","type":"boolean","description":"If true, the field will be invalid if empty.","privacy":"public","sourceRange":{"start":{"line":173,"column":6},"end":{"line":176,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"dateIsValid","type":"boolean","description":"Reflects if the date shown is valid.","privacy":"private","sourceRange":{"start":{"line":181,"column":6},"end":{"line":184,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true"},{"name":"timeIsValid","type":"boolean","description":"Reflects if the time shown is valid.","privacy":"private","sourceRange":{"start":{"line":189,"column":6},"end":{"line":193,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"true"},{"name":"fieldIsValid","type":"boolean","description":"Reflects if the input field is valid.\nSet in _validationField()","privacy":"private","sourceRange":{"start":{"line":199,"column":6},"end":{"line":202,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true"},{"name":"hideValidationMessage","type":"boolean","description":"Determines whether to display the validation message or not.\nUse mostly by `datetime-range-field`.","privacy":"public","sourceRange":{"start":{"line":215,"column":6},"end":{"line":218,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_validationErrorMessage","type":"string","description":"Holds the error message when the field in not valid","privacy":"protected","sourceRange":{"start":{"line":222,"column":6},"end":{"line":225,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\""},{"name":"_forcedFailedClass","type":"boolean","description":"Used to determine if the 'validation-failed' class needs to be applied to '_getWrapperClass'\nThis attribute is set by `px-datetime-range-field`","privacy":"protected","sourceRange":{"start":{"line":230,"column":7},"end":{"line":233,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"isSelected","type":"boolean","description":"True if any cell is currently selected.","privacy":"private","sourceRange":{"start":{"line":238,"column":6},"end":{"line":242,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"false"},{"name":"preventApply","type":"boolean","description":"Used to prevents the momentObjs from being set.\nUsed by `px-datetime-range-field`.","privacy":"public","sourceRange":{"start":{"line":247,"column":6},"end":{"line":250,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_dropdownActive","type":"boolean","description":"Toggles the `dt-dropdown-is-active` class","privacy":"protected","sourceRange":{"start":{"line":254,"column":6},"end":{"line":257,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_dropdownHoverFix","type":"boolean","description":"Toggles the `.dt-text-field--hover-fix` class","privacy":"protected","sourceRange":{"start":{"line":261,"column":6},"end":{"line":264,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"preventCellFocus","type":"boolean","description":"This will prevent the date cell from being focused\nwhen the calendar icon is clicked\n\nUsed by `px-datetime-picker`","privacy":"private","sourceRange":{"start":{"line":272,"column":6},"end":{"line":275,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"hoist","type":"boolean","description":"Specifies if the dropdown content should get hoisted to a container in order to escape its current stacking context","privacy":"public","sourceRange":{"start":{"line":279,"column":7},"end":{"line":282,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"}],"methods":[{"name":"registered","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":317,"column":4},"end":{"line":319,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"attached","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":321,"column":4},"end":{"line":323,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"detached","description":"when dt-field is detached set `_dropdownFocused` to false.\nprevents the dropdown from being stuck in a focused state","privacy":"protected","sourceRange":{"start":{"line":415,"column":4},"end":{"line":417,"column":5}},"metadata":{},"params":[]},{"name":"addOwnKeyBinding","description":"Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":337,"column":4},"end":{"line":341,"column":5}},"metadata":{},"params":[{"name":"eventString","type":"string"},{"name":"handlerName","type":"string"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"removeOwnKeyBindings","description":"When called, will remove all imperatively-added key bindings.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":346,"column":4},"end":{"line":350,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyboardEventMatchesKeys","description":"Returns true if a keyboard event matches `eventString`.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":359,"column":4},"end":{"line":367,"column":5}},"metadata":{},"params":[{"name":"event","type":"KeyboardEvent"},{"name":"eventString","type":"string"}],"return":{"type":"boolean"},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_collectKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":369,"column":4},"end":{"line":379,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_prepKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":381,"column":4},"end":{"line":403,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_addKeyBinding","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":405,"column":4},"end":{"line":412,"column":5}},"metadata":{},"params":[{"name":"eventString"},{"name":"handlerName"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_resetKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":414,"column":4},"end":{"line":420,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_listenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":422,"column":4},"end":{"line":435,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_unlistenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":437,"column":4},"end":{"line":452,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_onKeyBindingEvent","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":454,"column":4},"end":{"line":475,"column":5}},"metadata":{},"params":[{"name":"keyBindings"},{"name":"event"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_triggerKeyHandler","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":477,"column":4},"end":{"line":486,"column":5}},"metadata":{},"params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"loadResources","description":"","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":222,"column":2},"end":{"line":255,"column":3}},"metadata":{},"params":[{"name":"path"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__computeLocalize","description":"Returns a computed `localize` method, based on the current `language`.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":260,"column":2},"end":{"line":300,"column":3}},"metadata":{},"params":[{"name":"language"},{"name":"resources"},{"name":"formats"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestResponse","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":302,"column":2},"end":{"line":330,"column":3}},"metadata":{},"params":[{"name":"event"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestError","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":332,"column":2},"end":{"line":334,"column":3}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__checkLocalizationCache","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":336,"column":2},"end":{"line":344,"column":3}},"metadata":{},"params":[{"name":"proto"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"_updateMinMaxTz","description":"","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":104,"column":4},"end":{"line":113,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_minDateChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":114,"column":4},"end":{"line":122,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_maxDateChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":123,"column":4},"end":{"line":131,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_preserveTime","description":"Copies the time in toPreserve to dest and returns dest.\nused in `px-calendar-picker`, `px-datetime-picker`, and `px-datetime-range-panel`","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":139,"column":4},"end":{"line":147,"column":5}},"metadata":{},"params":[{"name":"toPreserve"},{"name":"dest"}],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_localeChanged","description":"Make sure the moment obj pick up the possibly new moment locale","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-behavior.html","start":{"line":48,"column":4},"end":{"line":52,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"_timeZoneChanged","description":"Makes sure the moment object reflects the right timezone.","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-behavior.html","start":{"line":56,"column":4},"end":{"line":61,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"_validateInput","description":"Validation function for 'px-datetime-entry'","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":98,"column":4},"end":{"line":116,"column":5}},"metadata":{},"params":[{"name":"format"},{"name":"tz"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validateField","description":"Validate a complete field\ncalled in px-datetime-field and px-datetime-range-field","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":129,"column":4},"end":{"line":170,"column":5}},"metadata":{},"params":[{"name":"funcOrigin","type":"String","description":"The function that called validation. Used for `_handleIncompleteEntries`"}],"return":{"desc":"validation result:\n- MomentObj - The validated new moment obj\n- False - If the new moment is invalid\n- FieldSame - If the new moment is the same as the old moment\n- FieldBlank - If the visible field(s) are blank"},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validateMomentObj","description":"Validate a moment object\ncalled in from _validateField and px-datetime-field","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":181,"column":4},"end":{"line":210,"column":5}},"metadata":{},"params":[{"name":"validatingMomentObj"}],"return":{"desc":"validation result:\n- MomentObj - The validated new moment obj\n- False - If the new moment is invalid\n- FieldSame - If the new moment is the same as the old moment"},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validField","description":"Reset field to valid","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":216,"column":4},"end":{"line":227,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"valid momentObj"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_invalidField","description":"Set field to invalid\nSet validation Error Message, turn on validation error, set isValid to false, and fire event.","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":235,"column":4},"end":{"line":240,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"Invalid momentObj"},{"name":"invalidObj","type":"Object","description":"Stores the different invalid"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_entryInputString","description":"loop through array of the entry cells and return a string of the value","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":246,"column":4},"end":{"line":258,"column":5}},"metadata":{},"params":[{"name":"cells","type":"Object","description":"Date or time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_determineValidationMessage","description":"Returns a meaningful validation message","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":265,"column":4},"end":{"line":302,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"Invalid momentObj"},{"name":"invalidObj","type":"Object","description":"Stores the different invalid"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_updateValidationEvent","description":"Fires when 'validationErrorMessage' is changed","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":309,"column":4},"end":{"line":313,"column":5}},"metadata":{},"params":[{"name":"validationErrorMessage","type":"string","description":"Values validationErrorMessage"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_submitButtonState","description":"Sets the button state based on if validation has been passed or not. This in turn enables or disables the Submit button.","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":319,"column":4},"end":{"line":321,"column":5}},"metadata":{},"params":[{"name":"state","type":"Boolean","description":"Where the validation has passed or failed"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_handleIncompleteEntries","description":"If required any incomplete momentObj is invalid\nIf not required determine if the field is blank","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":330,"column":4},"end":{"line":346,"column":5}},"metadata":{},"params":[{"name":"funcOrigin","type":"String","description":"The function that called validation"},{"name":"entry","type":"Element","description":"px-datetime-entry date"},{"name":"fieldNodes","type":"Object","description":"Object of date and time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_loopOverCellValues","description":"Checking to see if all cells are empty\nIf a cell has a value return false","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":353,"column":4},"end":{"line":365,"column":5}},"metadata":{},"params":[{"name":"cells","type":"Object","description":"Date or time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_showTimeZoneInDate","description":"Will only show the dropdown in the date entry if `hideTime`\nand `showTimeZone` are true","privacy":"protected","sourceRange":{"start":{"line":306,"column":4},"end":{"line":312,"column":5}},"metadata":{},"params":[{"name":"hideTime"},{"name":"showTimeZone"}]},{"name":"_nextFieldRequired","description":"Jumps from the date entry to time entry when using arrow keys","privacy":"protected","sourceRange":{"start":{"line":324,"column":4},"end":{"line":335,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_previousFieldRequired","description":"Jumps from the time entry to date entry when using arrow keys","privacy":"protected","sourceRange":{"start":{"line":339,"column":4},"end":{"line":350,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"focus","description":"","privacy":"public","sourceRange":{"start":{"line":353,"column":4},"end":{"line":355,"column":5}},"metadata":{},"params":[]},{"name":"_focusFirstEntry","description":"","privacy":"protected","sourceRange":{"start":{"line":358,"column":4},"end":{"line":364,"column":5}},"metadata":{},"params":[{"name":"forceTimeFocus"}]},{"name":"_focusLastEntry","description":"","privacy":"protected","sourceRange":{"start":{"line":367,"column":4},"end":{"line":373,"column":5}},"metadata":{},"params":[]},{"name":"_getWrapClass","description":"Toggles classes causing the buttons to wrap under the field","privacy":"protected","sourceRange":{"start":{"line":377,"column":4},"end":{"line":381,"column":5}},"metadata":{},"params":[{"name":"allowWrap"}]},{"name":"_getButtonMarginClass","description":"Adds a margin right if the buttons are showing","privacy":"protected","sourceRange":{"start":{"line":385,"column":4},"end":{"line":395,"column":5}},"metadata":{},"params":[{"name":"showButtons"},{"name":"allowWrap"}]},{"name":"_handleDropdownFocus","description":"event that watches when the dropdown has focus","privacy":"protected","sourceRange":{"start":{"line":399,"column":4},"end":{"line":402,"column":5}},"metadata":{},"params":[{"name":"e"}]},{"name":"_handleDropdownBlur","description":"event that watches when the dropdown loses focus","privacy":"protected","sourceRange":{"start":{"line":406,"column":4},"end":{"line":410,"column":5}},"metadata":{},"params":[{"name":"e"}]},{"name":"_handleHoverFix","description":"This is a quick fix.\nIn order to make dt-field look like an input field we have to overwrite some css on #fieldWrapper.\n\nThere is a hover state on #fieldWrapper and px-dropdown is a child of #fieldWrapper;\ntherefore, when dropdown is opened the hover to #fieldWrapper is extended.\nThis causes a flash of gray when the user selects a time zone with the mouse.\nIn order to prevent this flash we need to overwrite the hover state by added\n`.dt-text-field--hover-fix` to #fieldWrapper.\n\nThe true issue is that we can't listen to px-dropdown.opened because there is a timing issue\nwhen px-dropdown.opened is set to false vs when the dropdown is not longer visible. This causes the flash.\nWe couldn't find any other events that don't have a timing issue.","privacy":"protected","sourceRange":{"start":{"line":432,"column":4},"end":{"line":437,"column":5}},"metadata":{},"params":[]},{"name":"_getWrapperClass","description":"isValid & _forcedFailedClass - determines whether to show the validation error classes\nisSelected - sets the styles when an entryCell is selected\n_dropdownActive - overwrites the styles when the dropdown is focused\n_dropdownHoverFix - overwrites the styles when the user selects an item in the dropdown","privacy":"protected","sourceRange":{"start":{"line":444,"column":4},"end":{"line":457,"column":5}},"metadata":{},"params":[{"name":"isValid"},{"name":"_forcedFailedClass"},{"name":"isSelected"},{"name":"_dropdownActive"},{"name":"_dropdownHoverFix"}]},{"name":"_getEntryDateClass","description":"Adds a right margin if both entries are showing","privacy":"protected","sourceRange":{"start":{"line":461,"column":4},"end":{"line":470,"column":5}},"metadata":{},"params":[{"name":"hideDate"},{"name":"hideTime"},{"name":"hideIcon"}]},{"name":"_validateSetMomentObj","description":"Run validation on a moment object that has been set from the outside\nThis will set or unset validation errors","privacy":"protected","sourceRange":{"start":{"line":475,"column":4},"end":{"line":478,"column":5}},"metadata":{},"params":[{"name":"momentObj"}]},{"name":"_getIsValid","description":"computes `isValid`","privacy":"protected","sourceRange":{"start":{"line":482,"column":4},"end":{"line":484,"column":5}},"metadata":{},"params":[{"name":"fieldIsValid"},{"name":"dateIsValid"},{"name":"timeIsValid"}]},{"name":"_handleValidationMessage","description":"Reflects the error message changes to _validationErrorMessage","privacy":"protected","sourceRange":{"start":{"line":488,"column":4},"end":{"line":490,"column":5}},"metadata":{},"params":[{"name":"e"}]},{"name":"_showValidation","description":"Helper function for a dom-if\nDetermines whether to display the validation error","privacy":"protected","sourceRange":{"start":{"line":495,"column":4},"end":{"line":499,"column":5}},"metadata":{},"params":[{"name":"isValid"},{"name":"hideValidationMessage"}]},{"name":"_handleValidMoment","description":"Handles validation coming from `_validateInput()`\nSet `dateIsValid` and `timeIsValid` to true as needed\nRuns validation if buttons are hidden and field is valid","privacy":"protected","sourceRange":{"start":{"line":505,"column":4},"end":{"line":521,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_handleInvalidMoment","description":"Sets `isValid`, `dateIsValid`, and `timeIsValid` to false as needed.","privacy":"protected","sourceRange":{"start":{"line":525,"column":4},"end":{"line":533,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_iconClicked","description":"Focuses select to the next cell when an icon is clicked","privacy":"protected","sourceRange":{"start":{"line":537,"column":4},"end":{"line":544,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_dateTimeButtons","description":"Determines whether to apply or cancel the changes\nbased on the event","privacy":"protected","sourceRange":{"start":{"line":549,"column":4},"end":{"line":556,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_onEsc","description":"Runs `_cancelChanges()`","privacy":"protected","sourceRange":{"start":{"line":560,"column":4},"end":{"line":562,"column":5}},"metadata":{},"params":[]},{"name":"_onEnter","description":"Runs `_applyChanges()` and blurs the field","privacy":"protected","sourceRange":{"start":{"line":566,"column":4},"end":{"line":569,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_applyChanges","description":"Sets the momentObj if the field is valid, preventApply is not true,\nand the new and old momentObjs are not the same.","privacy":"protected","sourceRange":{"start":{"line":574,"column":4},"end":{"line":594,"column":5}},"metadata":{},"params":[{"name":"origin"}]},{"name":"_cancelChanges","description":"Clear field or reset to previous moment objs","privacy":"protected","sourceRange":{"start":{"line":598,"column":4},"end":{"line":608,"column":5}},"metadata":{},"params":[]}],"staticMethods":[],"demos":[{"url":"index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":100,"column":10},"end":{"line":609,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"key-event-target","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":277,"column":6},"end":{"line":282,"column":7}},"metadata":{},"type":"?EventTarget","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stop-keyboard-event-propagation","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":288,"column":6},"end":{"line":288,"column":65}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"block-future-dates","description":"Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":34,"column":6},"end":{"line":37,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"block-past-dates","description":"Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":41,"column":6},"end":{"line":44,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"language","description":"set a default for localizing","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":50,"column":6},"end":{"line":53,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"resources","description":"used to pass in strings for localization","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":65,"column":6},"end":{"line":84,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"formats","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"use-key-if-missing","description":"Use the key for localization if value for  language is missing. Should\nalways be true for px components","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":58,"column":6},"end":{"line":61,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"localize","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{},"type":"Function","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubble-event","description":"If true, will bubble up the event to the parents","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"time-zone","description":"Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":64,"column":6},"end":{"line":70,"column":8}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"min-date","description":"The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":89,"column":6},"end":{"line":92,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"max-date","description":"The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":96,"column":6},"end":{"line":99,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"moment-obj","description":"Moment value with the date or time to display.  Will be parsed according to the moment format. (See momentFormat property.)","sourceRange":{"file":"../px-datetime-common/px-datetime-behavior.html","start":{"line":33,"column":6},"end":{"line":39,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"show-buttons","description":"Whether to show Apply and Cancel buttons in the components","sourceRange":{"file":"../px-datetime-common/px-datetime-button-behavior.html","start":{"line":33,"column":6},"end":{"line":37,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.Buttons"},{"name":"validation-error-message","description":"String used to describe the current invalid state","sourceRange":{"file":"../px-datetime-common/px-datetime-validate.html","start":{"line":43,"column":6},"end":{"line":46,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"container-type","description":"An optional type set on the px-overlay-container and px-overlay-content to associate specific overlay-contents with their container","sourceRange":{"file":"../px-overlay/px-overlay-behavior.html","start":{"line":39,"column":4},"end":{"line":39,"column":25}},"metadata":{},"type":"string","inheritedFrom":"PxOverlayBehavior.sharedProperties"},{"name":"date-format","description":"Moment format string for the DATE format to display/validate this field against\nYear, month, and day (support YYYY, YY, M, MM, D, DD)\n(see http://momentjs.com/docs/#/parsing/string/)","sourceRange":{"start":{"line":116,"column":6},"end":{"line":119,"column":7}},"metadata":{},"type":"string"},{"name":"time-format","description":"Moment format string for the TIME format to display/validate this field against.\nHour, minute, second, millisecond, am/pm, and offset tokens\n(see http://momentjs.com/docs/#/parsing/string/)","sourceRange":{"start":{"line":125,"column":6},"end":{"line":128,"column":7}},"metadata":{},"type":"string"},{"name":"show-time-zone","description":"The format of displaying the time zone:\n - `dropdown`: shows the time zone as a dropdown which the user can use to select a different time zone. Only contains a subset of all time zones\n - `extendedDropdown`: shows the time zone as a dropdown which the user can use to select a different time zone. Contains all existing time zones (588)\n - `text`: shows the time zone as text, non editable\n - `abbreviatedText`: shows the time zone as an abbreviated text, non editable (such as PST, EST...)","sourceRange":{"start":{"line":137,"column":6},"end":{"line":140,"column":7}},"metadata":{},"type":"string"},{"name":"hide-time","description":"Controls whether time is displayed in the field.","sourceRange":{"start":{"line":144,"column":6},"end":{"line":147,"column":7}},"metadata":{},"type":"boolean"},{"name":"hide-date","description":"Controls whether date is displayed in the field.","sourceRange":{"start":{"line":151,"column":6},"end":{"line":154,"column":7}},"metadata":{},"type":"boolean"},{"name":"hide-icon","description":"Controls whether the calendar/clock icon are displayed in the field.","sourceRange":{"start":{"line":158,"column":6},"end":{"line":161,"column":7}},"metadata":{},"type":"boolean"},{"name":"allow-wrap","description":"Controls whether the buttons will wrap under the field if\nthe horizontal space is too small.","sourceRange":{"start":{"line":166,"column":6},"end":{"line":169,"column":7}},"metadata":{},"type":"boolean"},{"name":"required","description":"If true, the field will be invalid if empty.","sourceRange":{"start":{"line":173,"column":6},"end":{"line":176,"column":7}},"metadata":{},"type":"boolean"},{"name":"is-valid","description":"Computed from `fieldIsValid`, `dateIsValid`, `timeIsValid`.\nAll of them must valid for `isValid` to be true.","sourceRange":{"start":{"line":207,"column":6},"end":{"line":210,"column":7}},"metadata":{},"type":"boolean"},{"name":"hide-validation-message","description":"Determines whether to display the validation message or not.\nUse mostly by `datetime-range-field`.","sourceRange":{"start":{"line":215,"column":6},"end":{"line":218,"column":7}},"metadata":{},"type":"boolean"},{"name":"prevent-apply","description":"Used to prevents the momentObjs from being set.\nUsed by `px-datetime-range-field`.","sourceRange":{"start":{"line":247,"column":6},"end":{"line":250,"column":7}},"metadata":{},"type":"boolean"},{"name":"hoist","description":"Specifies if the dropdown content should get hoisted to a container in order to escape its current stacking context","sourceRange":{"start":{"line":279,"column":7},"end":{"line":282,"column":7}},"metadata":{},"type":"boolean"}],"events":[{"type":"CustomEvent","name":"app-localize-resources-error","description":"app-localize-resources-error","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"app-localize-resources-loaded","description":"app-localize-resources-loaded","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"time-zone-changed","description":"Fired when the `timeZone` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"type":"CustomEvent","name":"moment-obj-changed","description":"Fired when the `momentObj` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"type":"CustomEvent","name":"px-moment-valid","description":"px-moment-valid","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"type":"CustomEvent","name":"px-validation-message","description":"px-validation-message","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Validate"}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-datetime-field"}]}