(function(){"use strict";window.PxMapBehavior=window.PxMapBehavior||{};PxMapBehavior.GeoJSONLayerImpl={properties:{data:{type:Object,observer:"shouldUpdateInst"},featureStyle:{type:Object,observer:"shouldUpdateInst"},showFeatureProperties:{type:Boolean,value:!1,observer:"shouldUpdateInst"}},update:function update(){if(!this.elementInst)return;this.shouldUpdateInst()},canAddInst:function canAddInst(){return this.data&&"object"===babelHelpers.typeof(this.data)&&Object.keys(this.data).length},addInst:function addInst(parent){var _this=this,addedFn=this._handleFeatureAdded.bind(this),removedFn=this._handleFeatureRemoved.bind(this);this.bindEvents({layeradd:addedFn,layerremove:removedFn});if(0!==this.elementInst.getLayers().length){this.elementInst.eachLayer(function(layer){_this.elementInst.fire("layeradd",{layer:layer})})}PxMapBehavior.LayerImpl.addInst.call(this,parent)},createInst:function createInst(options){var _this2=this,styleAttributeProperties=this.getInstOptions().featureStyle,geojsonLayer=L.geoJson(options.data,{pointToLayer:function pointToLayer(feature,latlng){var featureProperties=feature.properties.style||{},attributeProperties=options.featureStyle,style=_this2._getStyle(feature,featureProperties,attributeProperties);return new L.CircleMarker(latlng,style)},onEachFeature:function onEachFeature(feature,layer){if(!_this2.showFeatureProperties)return;_this2._bindPopup(feature,layer)},style:function style(feature){var featureProperties=feature.properties.style||{};return _this2._getStyle(featureProperties,styleAttributeProperties)}});return geojsonLayer},_getStyle:function _getStyle(featureProperties,attributeProperties){return{radius:featureProperties.radius||attributeProperties.radius||5,color:featureProperties.color||attributeProperties.color||"#3E87E8",fillColor:featureProperties.fillColor||attributeProperties.fillColor||"#88BDE6",weight:featureProperties.weight||attributeProperties.weight||2,opacity:featureProperties.opacity||attributeProperties.opacity||1,fillOpacity:featureProperties.fillOpacity||attributeProperties.fillOpacity||.4}},_bindFeaturePopups:function _bindFeaturePopups(){var _this3=this;if(!this.elementInst)return;this.elementInst.eachLayer(function(layer){return _this3._bindPopup(layer.feature,layer)})},_bindPopup:function _bindPopup(feature,layer){var popupDataKeys=Object.keys(feature.properties).filter(function(key){return feature.properties.hasOwnProperty(key)&&"unset"!==feature.properties[key]&&"style"!==key});if(!popupDataKeys.length)return;var popupData=popupDataKeys.reduce(function(accum,key){accum[key]=feature.properties[key];return accum},{}),popup=new PxMap.DataPopup({title:"Feature Properties",data:popupData,autoPanPadding:[1,1]});layer.bindPopup(popup)},_unbindFeaturePopups:function _unbindFeaturePopups(){var _this4=this;if(!this.elementInst)return;this.elementInst.eachLayer(function(layer){return _this4._unbindPopup(layer)})},_unbindPopup:function _unbindPopup(layer){if("undefined"!==typeof layer.getPopup()){layer.unbindPopup()}},updateInst:function updateInst(lastOptions,nextOptions){var _this5=this;if(!Object.keys(nextOptions.data).length){this.elementInst.clearLayers()}else if(Object.keys(nextOptions.data).length&&(lastOptions.dataHash!==nextOptions.dataHash||lastOptions.featureStyleHash!==nextOptions.featureStyleHash)){var styleAttributeProperties=this.getInstOptions().featureStyle;this.elementInst.clearLayers();this.elementInst.options.style=function(feature){var featureProperties=feature.properties.style||{};return _this5._getStyle(featureProperties,styleAttributeProperties)};this.elementInst.addData(nextOptions.data);if(nextOptions.showFeatureProperties){this._bindFeaturePopups()}}else if(lastOptions.showFeatureProperties!==nextOptions.showFeatureProperties){if(nextOptions.showFeatureProperties)this._bindFeaturePopups();if(!nextOptions.showFeatureProperties)this._unbindFeaturePopups()}},getInstOptions:function getInstOptions(){return{data:this.data||{},dataHash:JSON.stringify(this.data||{}),featureStyle:this.featureStyle||{},featureStyleHash:JSON.stringify(this.featureStyle||{}),showFeatureProperties:this.showFeatureProperties}},_handleFeatureAdded:function _handleFeatureAdded(evt){if(!evt||!evt.layer)return;evt.layer.on("click",this._handleFeatureTapped.bind(this));evt.layer.on("popupopen",this._handleFeaturePopupOpened.bind(this));evt.layer.on("popupclose",this._handleFeaturePopupClosed.bind(this));var detail={};if(evt.layer&&evt.layer.feature){detail.feature=evt.layer.feature}this.fire("px-map-layer-geojson-feature-added",detail)},_handleFeatureRemoved:function _handleFeatureRemoved(evt){if(!evt||!evt.layer)return;evt.layer.off();var detail={};if(evt.layer&&evt.layer.feature){detail.feature=evt.layer.feature}this.fire("px-map-layer-geojson-feature-removed",detail)},_handleFeatureTapped:function _handleFeatureTapped(evt){var detail={};if(evt.target&&evt.target.feature){detail.feature=evt.target.feature}this.fire("px-map-layer-geojson-feature-tapped",detail)},_handleFeaturePopupOpened:function _handleFeaturePopupOpened(evt){var detail={};if(evt.target&&evt.target.feature){detail.feature=evt.target.feature}this.fire("px-map-layer-geojson-feature-popup-opened",detail)},_handleFeaturePopupClosed:function _handleFeaturePopupClosed(evt){var detail={};if(evt.target&&evt.target.feature){detail.feature=evt.target.feature}this.fire("px-map-layer-geojson-feature-popup-closed",detail)}};PxMapBehavior.GeoJSONLayer=[PxMapBehavior.Layer,PxMapBehavior.GeoJSONLayerImpl]})();