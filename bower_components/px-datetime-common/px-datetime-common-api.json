{"schema_version":"1.0.0","elements":[{"description":"Datetime input element. Includes iron-ally-keys-behavior to limit keystrokes to only valid characters.\n\n### Usage\n\n  <px-datetime-entry-cell\n    id=\"cell{{index}}\"\n    class=\"cell\"\n    order='{{index}}'\n    moment-obj=\"[[momentObj]]\"\n    moment-format='[[item]]'\n    time-zone=\"[[timeZone]]\">\n  </px-datetime-entry-cell>","summary":"","path":"../px-datetime-common/px-datetime-entry-cell.html","properties":[{"name":"keyEventTarget","type":"?EventTarget","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":277,"column":6},"end":{"line":282,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stopKeyboardEventPropagation","type":"boolean","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":288,"column":6},"end":{"line":288,"column":65}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_boundKeyHandlers","type":"Array","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":290,"column":6},"end":{"line":295,"column":7}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_imperativeKeyBindings","type":"Object","description":"own properties of everything on the \"prototype\".","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":299,"column":6},"end":{"line":304,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyBindings","type":"Object","description":"Key bindings for iron-a11y-keys-behavior\n\nMore keyBindings are added in _addGeneralKeyBindings","privacy":"private","sourceRange":{"start":{"line":157,"column":4},"end":{"line":160,"column":5}},"metadata":{"polymer":{}}},{"name":"blockFutureDates","type":"boolean","description":"Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":34,"column":6},"end":{"line":37,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"blockPastDates","type":"boolean","description":"Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":41,"column":6},"end":{"line":44,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"__localizationCache","type":"Object","description":"Internal singleton cache. This is the private implementation of the\nbehaviour; don't interact with it directly.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":140,"column":2},"end":{"line":144,"column":3}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"language","type":"string","description":"set a default for localizing","privacy":"public","sourceRange":{"file":"px-datetime-validate.html","start":{"line":50,"column":6},"end":{"line":53,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"en\"","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"resources","type":"Object","description":"used to pass in strings for localization","privacy":"public","sourceRange":{"file":"px-datetime-validate.html","start":{"line":65,"column":6},"end":{"line":84,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{\"en\":{\"Future dates are not allowed\":\"Future dates are not allowed\",\"Past dates are not allowed\":\"Past dates are not allowed\",\"Year\":\"Year\",\"Month\":\"Month\",\"Day\":\"Day\",\"Hour\":\"Hour\",\"Minute\":\"Minute\",\"Second\":\"Second\",\"Millisecond\":\"Millisecond\",\"is not valid\":\"is not valid\",\"This hour is not within a 12 hour clock\":\"This hour is not within a 12 hour clock\"}}","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"formats","type":"Object","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"useKeyIfMissing","type":"boolean","description":"Use the key for localization if value for  language is missing. Should\nalways be true for px components","privacy":"public","sourceRange":{"file":"px-datetime-validate.html","start":{"line":58,"column":6},"end":{"line":61,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"localize","type":"Function","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubbleEvent","type":"boolean","description":"If true, will bubble up the event to the parents","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"timeZone","type":"string","description":"Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.","privacy":"public","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":64,"column":6},"end":{"line":70,"column":8}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"minDate","type":"Object","description":"The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":89,"column":6},"end":{"line":92,"column":7}},"metadata":{"polymer":{"observer":"\"_minDateChanged\""}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"maxDate","type":"Object","description":"The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":96,"column":6},"end":{"line":99,"column":7}},"metadata":{"polymer":{"observer":"\"_maxDateChanged\""}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"momentObj","type":"Object","description":"Moment value with the date or time to display.  Will be parsed according to the moment format. (See momentFormat property.)","privacy":"public","sourceRange":{"file":"px-datetime-behavior.html","start":{"line":33,"column":6},"end":{"line":39,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"null","inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"isValid","type":"boolean","description":"Boolean stating if the current component is valid. Gets updated in '_validateInput'","privacy":"private","sourceRange":{"file":"px-datetime-validate.html","start":{"line":35,"column":6},"end":{"line":39,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"true","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"validationErrorMessage","type":"string","description":"String used to describe the current invalid state","privacy":"public","sourceRange":{"file":"px-datetime-validate.html","start":{"line":43,"column":6},"end":{"line":46,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"invalid\"","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"momentFormat","type":"string","description":"Moment format tokens for the format to display/validate this field against (see http://momentjs.com/docs/#/parsing/string-format/)\n\nCan only be configured statically; not data-bindable\n\n`example: 'YYYY'`","privacy":"private","sourceRange":{"start":{"line":85,"column":6},"end":{"line":88,"column":7}},"metadata":{"polymer":{"observer":"\"_formatChanged\""}}},{"name":"symbol","type":"string","description":"The separator character, passed down from px-datetime-entry","privacy":"private","sourceRange":{"start":{"line":94,"column":6},"end":{"line":96,"column":7}},"metadata":{"polymer":{}}},{"name":"order","type":"number","description":"Order number this cell is in px-datetime-entry, passed down from px-datetime-entry","privacy":"private","sourceRange":{"start":{"line":102,"column":6},"end":{"line":105,"column":7}},"metadata":{"polymer":{}}},{"name":"isSelected","type":"boolean","description":"Whether the cell is currently selected. Read-only.","privacy":"public","sourceRange":{"start":{"line":109,"column":6},"end":{"line":114,"column":7}},"metadata":{"polymer":{"notify":true,"readOnly":true}},"defaultValue":"false"},{"name":"_max","type":"number","description":"Maximum numeric value for given field type.","privacy":"protected","sourceRange":{"start":{"line":118,"column":6},"end":{"line":121,"column":7}},"metadata":{"polymer":{"readOnly":true}}},{"name":"_min","type":"number","description":"Minimum numeric value for given field type.","privacy":"protected","sourceRange":{"start":{"line":125,"column":6},"end":{"line":128,"column":7}},"metadata":{"polymer":{"readOnly":true}}},{"name":"_isNumber","type":"boolean","description":"Determine is the cell is a number\nbased off the `momentFormat`","privacy":"protected","sourceRange":{"start":{"line":133,"column":6},"end":{"line":136,"column":7}},"metadata":{"polymer":{"readOnly":true}}},{"name":"_cellLength","type":"number","description":"Number of characters the cell is allow to be","privacy":"protected","sourceRange":{"start":{"line":140,"column":6},"end":{"line":143,"column":7}},"metadata":{"polymer":{}},"defaultValue":"0"}],"methods":[{"name":"registered","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":317,"column":4},"end":{"line":319,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"attached","description":"On attached, set up key bindings.","privacy":"protected","sourceRange":{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},"metadata":{},"params":[]},{"name":"detached","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":325,"column":4},"end":{"line":327,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"addOwnKeyBinding","description":"Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":337,"column":4},"end":{"line":341,"column":5}},"metadata":{},"params":[{"name":"eventString","type":"string"},{"name":"handlerName","type":"string"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"removeOwnKeyBindings","description":"When called, will remove all imperatively-added key bindings.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":346,"column":4},"end":{"line":350,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyboardEventMatchesKeys","description":"Returns true if a keyboard event matches `eventString`.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":359,"column":4},"end":{"line":367,"column":5}},"metadata":{},"params":[{"name":"event","type":"KeyboardEvent"},{"name":"eventString","type":"string"}],"return":{"type":"boolean"},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_collectKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":369,"column":4},"end":{"line":379,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_prepKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":381,"column":4},"end":{"line":403,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_addKeyBinding","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":405,"column":4},"end":{"line":412,"column":5}},"metadata":{},"params":[{"name":"eventString"},{"name":"handlerName"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_resetKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":414,"column":4},"end":{"line":420,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_listenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":422,"column":4},"end":{"line":435,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_unlistenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":437,"column":4},"end":{"line":452,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_onKeyBindingEvent","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":454,"column":4},"end":{"line":475,"column":5}},"metadata":{},"params":[{"name":"keyBindings"},{"name":"event"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_triggerKeyHandler","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":477,"column":4},"end":{"line":486,"column":5}},"metadata":{},"params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"loadResources","description":"","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":222,"column":2},"end":{"line":255,"column":3}},"metadata":{},"params":[{"name":"path"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__computeLocalize","description":"Returns a computed `localize` method, based on the current `language`.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":260,"column":2},"end":{"line":300,"column":3}},"metadata":{},"params":[{"name":"language"},{"name":"resources"},{"name":"formats"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestResponse","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":302,"column":2},"end":{"line":330,"column":3}},"metadata":{},"params":[{"name":"event"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestError","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":332,"column":2},"end":{"line":334,"column":3}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__checkLocalizationCache","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":336,"column":2},"end":{"line":344,"column":3}},"metadata":{},"params":[{"name":"proto"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"_updateMinMaxTz","description":"","privacy":"protected","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":104,"column":4},"end":{"line":113,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_minDateChanged","description":"","privacy":"protected","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":114,"column":4},"end":{"line":122,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_maxDateChanged","description":"","privacy":"protected","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":123,"column":4},"end":{"line":131,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_preserveTime","description":"Copies the time in toPreserve to dest and returns dest.\nused in `px-calendar-picker`, `px-datetime-picker`, and `px-datetime-range-panel`","privacy":"protected","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":139,"column":4},"end":{"line":147,"column":5}},"metadata":{},"params":[{"name":"toPreserve"},{"name":"dest"}],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_localeChanged","description":"Make sure the moment obj pick up the possibly new moment locale","privacy":"protected","sourceRange":{"file":"px-datetime-behavior.html","start":{"line":48,"column":4},"end":{"line":52,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"_timeZoneChanged","description":"Makes sure the moment object reflects the right timezone.","privacy":"protected","sourceRange":{"file":"px-datetime-behavior.html","start":{"line":56,"column":4},"end":{"line":61,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"_validateInput","description":"Validation function for 'px-datetime-entry'","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":98,"column":4},"end":{"line":116,"column":5}},"metadata":{},"params":[{"name":"format"},{"name":"tz"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validateField","description":"Validate a complete field\ncalled in px-datetime-field and px-datetime-range-field","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":129,"column":4},"end":{"line":170,"column":5}},"metadata":{},"params":[{"name":"funcOrigin","type":"String","description":"The function that called validation. Used for `_handleIncompleteEntries`"}],"return":{"desc":"validation result:\n- MomentObj - The validated new moment obj\n- False - If the new moment is invalid\n- FieldSame - If the new moment is the same as the old moment\n- FieldBlank - If the visible field(s) are blank"},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validateMomentObj","description":"Validate a moment object\ncalled in from _validateField and px-datetime-field","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":181,"column":4},"end":{"line":210,"column":5}},"metadata":{},"params":[{"name":"validatingMomentObj"}],"return":{"desc":"validation result:\n- MomentObj - The validated new moment obj\n- False - If the new moment is invalid\n- FieldSame - If the new moment is the same as the old moment"},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validField","description":"Reset field to valid","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":216,"column":4},"end":{"line":227,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"valid momentObj"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_invalidField","description":"Set field to invalid\nSet validation Error Message, turn on validation error, set isValid to false, and fire event.","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":235,"column":4},"end":{"line":240,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"Invalid momentObj"},{"name":"invalidObj","type":"Object","description":"Stores the different invalid"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_entryInputString","description":"loop through array of the entry cells and return a string of the value","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":246,"column":4},"end":{"line":258,"column":5}},"metadata":{},"params":[{"name":"cells","type":"Object","description":"Date or time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_determineValidationMessage","description":"Returns a meaningful validation message","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":265,"column":4},"end":{"line":302,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"Invalid momentObj"},{"name":"invalidObj","type":"Object","description":"Stores the different invalid"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_updateValidationEvent","description":"Fires when 'validationErrorMessage' is changed","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":309,"column":4},"end":{"line":313,"column":5}},"metadata":{},"params":[{"name":"validationErrorMessage","type":"string","description":"Values validationErrorMessage"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_submitButtonState","description":"Sets the button state based on if validation has been passed or not. This in turn enables or disables the Submit button.","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":319,"column":4},"end":{"line":321,"column":5}},"metadata":{},"params":[{"name":"state","type":"Boolean","description":"Where the validation has passed or failed"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_handleIncompleteEntries","description":"If required any incomplete momentObj is invalid\nIf not required determine if the field is blank","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":330,"column":4},"end":{"line":346,"column":5}},"metadata":{},"params":[{"name":"funcOrigin","type":"String","description":"The function that called validation"},{"name":"entry","type":"Element","description":"px-datetime-entry date"},{"name":"fieldNodes","type":"Object","description":"Object of date and time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_loopOverCellValues","description":"Checking to see if all cells are empty\nIf a cell has a value return false","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":353,"column":4},"end":{"line":365,"column":5}},"metadata":{},"params":[{"name":"cells","type":"Object","description":"Date or time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"clear","description":"Clears the input value for the cell.","privacy":"public","sourceRange":{"start":{"line":170,"column":4},"end":{"line":172,"column":5}},"metadata":{},"params":[]},{"name":"setValueFromMoment","description":"Sets the value of the cell to the current moment obj","privacy":"public","sourceRange":{"start":{"line":176,"column":4},"end":{"line":183,"column":5}},"metadata":{},"params":[]},{"name":"_computeIsNumber","description":"","privacy":"protected","sourceRange":{"start":{"line":184,"column":4},"end":{"line":186,"column":5}},"metadata":{},"params":[{"name":"momentFormat"}]},{"name":"_getPattern","description":"","privacy":"protected","sourceRange":{"start":{"line":187,"column":4},"end":{"line":197,"column":5}},"metadata":{},"params":[]},{"name":"_getType","description":"Set the correct type of input field based on the momentFormat","privacy":"protected","sourceRange":{"start":{"line":201,"column":4},"end":{"line":206,"column":5}},"metadata":{},"params":[]},{"name":"_getDisabled","description":"Disables the input field for time zone entry cells.","privacy":"protected","sourceRange":{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},"metadata":{},"params":[{"name":"momentFormat"}]},{"name":"_formatChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":213,"column":4},"end":{"line":227,"column":5}},"metadata":{},"params":[]},{"name":"_sizeInputs","description":"Size the input fields based on the value or placeholder text","privacy":"protected","sourceRange":{"start":{"line":231,"column":4},"end":{"line":255,"column":5}},"metadata":{},"params":[]},{"name":"_addGeneralKeyBindings","description":"Sets up regular key bindings","privacy":"protected","sourceRange":{"start":{"line":259,"column":4},"end":{"line":267,"column":5}},"metadata":{},"params":[]},{"name":"_addSeparatorKeyBinding","description":"Sets up separator keybindings","privacy":"protected","sourceRange":{"start":{"line":271,"column":5},"end":{"line":274,"column":5}},"metadata":{},"params":[]},{"name":"_updateInputValue","description":"If `momentObj` or `timeZone` update, reflect this in the cell","privacy":"protected","sourceRange":{"start":{"line":278,"column":4},"end":{"line":283,"column":5}},"metadata":{},"params":[]},{"name":"_moveFocusBack","description":"Fires when 'left' key is hit","privacy":"protected","sourceRange":{"start":{"line":290,"column":4},"end":{"line":294,"column":5}},"metadata":{},"params":[]},{"name":"_moveFocusForward","description":"Fires when 'right' key is hit","privacy":"protected","sourceRange":{"start":{"line":301,"column":4},"end":{"line":305,"column":5}},"metadata":{},"params":[]},{"name":"_handleFocus","description":"Propagate the focus event up to entry to apply inline edit styles if applicable.","privacy":"protected","sourceRange":{"start":{"line":309,"column":4},"end":{"line":314,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_wraparound","description":"Allow the user to loop through valid cell values\nex If the momentFormat is MM the cell value can go from 12 to 1 by hitting the up arrow","privacy":"protected","sourceRange":{"start":{"line":319,"column":4},"end":{"line":339,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_checkValue","description":"Checks that the value has the correct number of digits for our format\nAutocomplete function","privacy":"protected","sourceRange":{"start":{"line":344,"column":4},"end":{"line":361,"column":5}},"metadata":{},"params":[]},{"name":"_handleBlur","description":"Fires on blur","privacy":"protected","sourceRange":{"start":{"line":367,"column":4},"end":{"line":372,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_toggleAMPM","description":"Toggles AM & PM when up/down or A/P keys are pressed.","privacy":"protected","sourceRange":{"start":{"line":376,"column":4},"end":{"line":396,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_setAMPM","description":"Sets the AM/PM value.","privacy":"protected","sourceRange":{"start":{"line":400,"column":5},"end":{"line":403,"column":6}},"metadata":{},"params":[{"name":"ampm"}]},{"name":"_preventDeleteDefault","description":"Prevent the delete button from navigating back","privacy":"protected","sourceRange":{"start":{"line":407,"column":4},"end":{"line":410,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_placeholderText","description":"If the momentFormat format is not 'Z', 'ZZ', 'X', 'x', 'A' or 'a' then return the momentFormat","privacy":"protected","sourceRange":{"start":{"line":414,"column":4},"end":{"line":428,"column":5}},"metadata":{},"params":[{"name":"momentFormat"}]},{"name":"_beforeCopy","description":"Handles before copy event, used for IE instead of the copy event","privacy":"protected","sourceRange":{"start":{"line":438,"column":4},"end":{"line":443,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_beforePaste","description":"Handles before paste event, used for IE instead of the paste event","privacy":"protected","sourceRange":{"start":{"line":447,"column":4},"end":{"line":452,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_handlePaste","description":"Handles paste event","privacy":"protected","sourceRange":{"start":{"line":456,"column":4},"end":{"line":462,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_handleCopy","description":"Handles copy event","privacy":"protected","sourceRange":{"start":{"line":466,"column":4},"end":{"line":472,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_convertMomentFormat","description":"Format strings and setting/modification strings are different (?!?!)\nThis method converts one to the other","privacy":"protected","sourceRange":{"start":{"line":477,"column":4},"end":{"line":493,"column":5}},"metadata":{},"params":[]},{"name":"_getMax","description":"Set the max value a token can be","privacy":"protected","sourceRange":{"start":{"line":497,"column":4},"end":{"line":529,"column":5}},"metadata":{},"params":[{"name":"momentFormat"}]},{"name":"_getMin","description":"Set the min value a token can be","privacy":"protected","sourceRange":{"start":{"line":533,"column":4},"end":{"line":541,"column":5}},"metadata":{},"params":[{"name":"momentFormat"}]},{"name":"_keyPress","description":"","privacy":"protected","sourceRange":{"start":{"line":543,"column":4},"end":{"line":570,"column":5}},"metadata":{},"params":[{"name":"evt"}]}],"staticMethods":[],"demos":[{"url":"index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":65,"column":10},"end":{"line":571,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"key-event-target","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":277,"column":6},"end":{"line":282,"column":7}},"metadata":{},"type":"?EventTarget","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stop-keyboard-event-propagation","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":288,"column":6},"end":{"line":288,"column":65}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"block-future-dates","description":"Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":34,"column":6},"end":{"line":37,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"block-past-dates","description":"Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":41,"column":6},"end":{"line":44,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"language","description":"set a default for localizing","sourceRange":{"file":"px-datetime-validate.html","start":{"line":50,"column":6},"end":{"line":53,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"resources","description":"used to pass in strings for localization","sourceRange":{"file":"px-datetime-validate.html","start":{"line":65,"column":6},"end":{"line":84,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"formats","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"use-key-if-missing","description":"Use the key for localization if value for  language is missing. Should\nalways be true for px components","sourceRange":{"file":"px-datetime-validate.html","start":{"line":58,"column":6},"end":{"line":61,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"localize","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{},"type":"Function","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubble-event","description":"If true, will bubble up the event to the parents","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"time-zone","description":"Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":64,"column":6},"end":{"line":70,"column":8}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"min-date","description":"The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":89,"column":6},"end":{"line":92,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"max-date","description":"The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":96,"column":6},"end":{"line":99,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"moment-obj","description":"Moment value with the date or time to display.  Will be parsed according to the moment format. (See momentFormat property.)","sourceRange":{"file":"px-datetime-behavior.html","start":{"line":33,"column":6},"end":{"line":39,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"validation-error-message","description":"String used to describe the current invalid state","sourceRange":{"file":"px-datetime-validate.html","start":{"line":43,"column":6},"end":{"line":46,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"is-selected","description":"Whether the cell is currently selected. Read-only.","sourceRange":{"start":{"line":109,"column":6},"end":{"line":114,"column":7}},"metadata":{},"type":"boolean"}],"events":[{"type":"CustomEvent","name":"app-localize-resources-error","description":"app-localize-resources-error","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"app-localize-resources-loaded","description":"app-localize-resources-loaded","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"time-zone-changed","description":"Fired when the `timeZone` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"type":"CustomEvent","name":"moment-obj-changed","description":"Fired when the `momentObj` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"type":"CustomEvent","name":"px-moment-valid","description":"px-moment-valid","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"type":"CustomEvent","name":"px-validation-message","description":"px-validation-message","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"type":"CustomEvent","name":"px-cell-blurred","description":"px-cell-blurred","metadata":{}},{"type":"CustomEvent","name":"px-entry-cell-move","description":"px-entry-cell-move","metadata":{}},{"type":"CustomEvent","name":"px-request-datetime-entry-copy","description":"px-request-datetime-entry-copy","metadata":{}},{"type":"CustomEvent","name":"is-selected-changed","description":"Fired when the `isSelected` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-datetime-entry-cell"},{"description":"Range field component which displays a time or date and font awesome icon.\n\n### Usage\n\n    <px-datetime-entry\n      moment=\"{{...}}\"\n      date-or-time=\"Date\"\n      moment-format=\"MM/DD/YYYY\">\n    </px-datetime-entry>\n\n#### Styling\nThe following custom property is available for styling. Please also refer to px-forms-design for additional variables that can be used to customize the field's appearance.\n\nCustom property | Description\n:----------------|:-------------\n`--px-datetime-read-only-text-color` | Text color for the text timezones\n`--px-datetime-entry-selected` | Text highlight color when a cell is selected\n`--px-datetime-icon-color` | Color of the icons\n`--px-validation-error-text-color` | Color of invalid text","summary":"","path":"../px-datetime-common/px-datetime-entry.html","properties":[{"name":"keyEventTarget","type":"?EventTarget","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":277,"column":6},"end":{"line":282,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stopKeyboardEventPropagation","type":"boolean","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":288,"column":6},"end":{"line":288,"column":65}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_boundKeyHandlers","type":"Array","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":290,"column":6},"end":{"line":295,"column":7}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_imperativeKeyBindings","type":"Object","description":"own properties of everything on the \"prototype\".","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":299,"column":6},"end":{"line":304,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyBindings","type":"!Object","description":"To be used to express what combination of keys  will trigger the relative\ncallback. e.g. `keyBindings: { 'esc': '_onEscPressed'}`","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":315,"column":4},"end":{"line":315,"column":19}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"blockFutureDates","type":"boolean","description":"Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":34,"column":6},"end":{"line":37,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"blockPastDates","type":"boolean","description":"Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":41,"column":6},"end":{"line":44,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"__localizationCache","type":"Object","description":"Internal singleton cache. This is the private implementation of the\nbehaviour; don't interact with it directly.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":140,"column":2},"end":{"line":144,"column":3}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"language","type":"string","description":"set a default for localizing","privacy":"public","sourceRange":{"file":"px-datetime-validate.html","start":{"line":50,"column":6},"end":{"line":53,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"en\"","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"resources","type":"Object","description":"used to pass in strings for localization","privacy":"public","sourceRange":{"file":"px-datetime-validate.html","start":{"line":65,"column":6},"end":{"line":84,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{\"en\":{\"Future dates are not allowed\":\"Future dates are not allowed\",\"Past dates are not allowed\":\"Past dates are not allowed\",\"Year\":\"Year\",\"Month\":\"Month\",\"Day\":\"Day\",\"Hour\":\"Hour\",\"Minute\":\"Minute\",\"Second\":\"Second\",\"Millisecond\":\"Millisecond\",\"is not valid\":\"is not valid\",\"This hour is not within a 12 hour clock\":\"This hour is not within a 12 hour clock\"}}","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"formats","type":"Object","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"useKeyIfMissing","type":"boolean","description":"Use the key for localization if value for  language is missing. Should\nalways be true for px components","privacy":"public","sourceRange":{"file":"px-datetime-validate.html","start":{"line":58,"column":6},"end":{"line":61,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"localize","type":"Function","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubbleEvent","type":"boolean","description":"If true, will bubble up the event to the parents","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"timeZone","type":"string","description":"Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.","privacy":"public","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":64,"column":6},"end":{"line":70,"column":8}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"minDate","type":"Object","description":"The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":89,"column":6},"end":{"line":92,"column":7}},"metadata":{"polymer":{"observer":"\"_minDateChanged\""}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"maxDate","type":"Object","description":"The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":96,"column":6},"end":{"line":99,"column":7}},"metadata":{"polymer":{"observer":"\"_maxDateChanged\""}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"momentObj","type":"Object","description":"Moment value with the date or time to display.  Will be parsed according to the moment format. (See momentFormat property.)","privacy":"public","sourceRange":{"file":"px-datetime-behavior.html","start":{"line":33,"column":6},"end":{"line":39,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"null","inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"isValid","type":"boolean","description":"Boolean stating if the current component is valid. Gets updated in '_validateInput'","privacy":"private","sourceRange":{"file":"px-datetime-validate.html","start":{"line":35,"column":6},"end":{"line":39,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"true","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"validationErrorMessage","type":"string","description":"String used to describe the current invalid state","privacy":"public","sourceRange":{"file":"px-datetime-validate.html","start":{"line":43,"column":6},"end":{"line":46,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"invalid\"","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"containerType","type":"string","description":"An optional type set on the px-overlay-container and px-overlay-content to associate specific overlay-contents with their container","privacy":"public","sourceRange":{"file":"../px-overlay/px-overlay-behavior.html","start":{"line":39,"column":4},"end":{"line":39,"column":25}},"metadata":{"polymer":{}},"inheritedFrom":"PxOverlayBehavior.sharedProperties"},{"name":"dateOrTime","type":"string","description":"Date or Time icon/text\n\nFormat is 'Date' or 'Time'","privacy":"public","sourceRange":{"start":{"line":131,"column":6},"end":{"line":134,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"Date\""},{"name":"momentFormat","type":"string","description":"Moment format string for the format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)","privacy":"public","sourceRange":{"start":{"line":139,"column":6},"end":{"line":143,"column":7}},"metadata":{"polymer":{"observer":"\"_formatChanged\""}},"defaultValue":"\"YYYY/MM/DD\""},{"name":"hideIcon","type":"boolean","description":"Whether to hide the calendar or clock icon","privacy":"public","sourceRange":{"start":{"line":147,"column":6},"end":{"line":150,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_cellFormatArray","type":"Array","description":"An array of tokens (e.g. [\"YY\",\"MM\", \"DD\"])","privacy":"protected","sourceRange":{"start":{"line":154,"column":6},"end":{"line":157,"column":7}},"metadata":{"polymer":{"notify":true}}},{"name":"_symbolCharArray","type":"Array","description":"An array of the separator characters (e.g. [\"/\",\"/\"])","privacy":"protected","sourceRange":{"start":{"line":161,"column":6},"end":{"line":167,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"[]"},{"name":"showTimeZone","type":"string","description":"Determines how to display the timezone:\n- 'dropdown': shows the timezone as a dropdown which the user can use to select a different timezone. Only contains a subset of all timezones.\n**NOTE: this collection of timezones uses the POSIX convention for timezone offset, meaning that positive values correspond to timezones WEST of GMT and negative values correspond to timezones EAST of GMT.**\n- 'extendedDropdown': shows the timezone as a dropdown which the user can use to select a different timezone. Contains all existing timezones (588)\n- 'text': shows the timezone as text, non editable\n- 'abbreviatedText': shows the timezone as an abbreviated text, non editable (e.g. UTC, PST, EST, etc)","privacy":"public","sourceRange":{"start":{"line":176,"column":6},"end":{"line":179,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\""},{"name":"isSelected","type":"boolean","description":"True if any cell is currently selected.","privacy":"public","sourceRange":{"start":{"line":183,"column":6},"end":{"line":186,"column":7}},"metadata":{"polymer":{"notify":true}}},{"name":"hoist","type":"boolean","description":"Specifies if the dropdown content should get hoisted to a container in order to escape its current stacking context","privacy":"public","sourceRange":{"start":{"line":190,"column":7},"end":{"line":193,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"}],"methods":[{"name":"registered","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":317,"column":4},"end":{"line":319,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"attached","description":"calls `_formatChanged` if `momentFormat` is defined","privacy":"protected","sourceRange":{"start":{"line":206,"column":4},"end":{"line":210,"column":5}},"metadata":{},"params":[]},{"name":"detached","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":325,"column":4},"end":{"line":327,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"addOwnKeyBinding","description":"Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":337,"column":4},"end":{"line":341,"column":5}},"metadata":{},"params":[{"name":"eventString","type":"string"},{"name":"handlerName","type":"string"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"removeOwnKeyBindings","description":"When called, will remove all imperatively-added key bindings.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":346,"column":4},"end":{"line":350,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyboardEventMatchesKeys","description":"Returns true if a keyboard event matches `eventString`.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":359,"column":4},"end":{"line":367,"column":5}},"metadata":{},"params":[{"name":"event","type":"KeyboardEvent"},{"name":"eventString","type":"string"}],"return":{"type":"boolean"},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_collectKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":369,"column":4},"end":{"line":379,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_prepKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":381,"column":4},"end":{"line":403,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_addKeyBinding","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":405,"column":4},"end":{"line":412,"column":5}},"metadata":{},"params":[{"name":"eventString"},{"name":"handlerName"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_resetKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":414,"column":4},"end":{"line":420,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_listenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":422,"column":4},"end":{"line":435,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_unlistenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":437,"column":4},"end":{"line":452,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_onKeyBindingEvent","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":454,"column":4},"end":{"line":475,"column":5}},"metadata":{},"params":[{"name":"keyBindings"},{"name":"event"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_triggerKeyHandler","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":477,"column":4},"end":{"line":486,"column":5}},"metadata":{},"params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"loadResources","description":"","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":222,"column":2},"end":{"line":255,"column":3}},"metadata":{},"params":[{"name":"path"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__computeLocalize","description":"Returns a computed `localize` method, based on the current `language`.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":260,"column":2},"end":{"line":300,"column":3}},"metadata":{},"params":[{"name":"language"},{"name":"resources"},{"name":"formats"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestResponse","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":302,"column":2},"end":{"line":330,"column":3}},"metadata":{},"params":[{"name":"event"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestError","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":332,"column":2},"end":{"line":334,"column":3}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__checkLocalizationCache","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":336,"column":2},"end":{"line":344,"column":3}},"metadata":{},"params":[{"name":"proto"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"_updateMinMaxTz","description":"","privacy":"protected","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":104,"column":4},"end":{"line":113,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_minDateChanged","description":"","privacy":"protected","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":114,"column":4},"end":{"line":122,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_maxDateChanged","description":"","privacy":"protected","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":123,"column":4},"end":{"line":131,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_preserveTime","description":"Copies the time in toPreserve to dest and returns dest.\nused in `px-calendar-picker`, `px-datetime-picker`, and `px-datetime-range-panel`","privacy":"protected","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":139,"column":4},"end":{"line":147,"column":5}},"metadata":{},"params":[{"name":"toPreserve"},{"name":"dest"}],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_localeChanged","description":"Make sure the moment obj pick up the possibly new moment locale","privacy":"protected","sourceRange":{"file":"px-datetime-behavior.html","start":{"line":48,"column":4},"end":{"line":52,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"_timeZoneChanged","description":"Makes sure the moment object reflects the right timezone.","privacy":"protected","sourceRange":{"file":"px-datetime-behavior.html","start":{"line":56,"column":4},"end":{"line":61,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"_validateInput","description":"Validation function for 'px-datetime-entry'","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":98,"column":4},"end":{"line":116,"column":5}},"metadata":{},"params":[{"name":"format"},{"name":"tz"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validateField","description":"Validate a complete field\ncalled in px-datetime-field and px-datetime-range-field","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":129,"column":4},"end":{"line":170,"column":5}},"metadata":{},"params":[{"name":"funcOrigin","type":"String","description":"The function that called validation. Used for `_handleIncompleteEntries`"}],"return":{"desc":"validation result:\n- MomentObj - The validated new moment obj\n- False - If the new moment is invalid\n- FieldSame - If the new moment is the same as the old moment\n- FieldBlank - If the visible field(s) are blank"},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validateMomentObj","description":"Validate a moment object\ncalled in from _validateField and px-datetime-field","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":181,"column":4},"end":{"line":210,"column":5}},"metadata":{},"params":[{"name":"validatingMomentObj"}],"return":{"desc":"validation result:\n- MomentObj - The validated new moment obj\n- False - If the new moment is invalid\n- FieldSame - If the new moment is the same as the old moment"},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validField","description":"Reset field to valid","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":216,"column":4},"end":{"line":227,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"valid momentObj"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_invalidField","description":"Set field to invalid\nSet validation Error Message, turn on validation error, set isValid to false, and fire event.","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":235,"column":4},"end":{"line":240,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"Invalid momentObj"},{"name":"invalidObj","type":"Object","description":"Stores the different invalid"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_entryInputString","description":"loop through array of the entry cells and return a string of the value","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":246,"column":4},"end":{"line":258,"column":5}},"metadata":{},"params":[{"name":"cells","type":"Object","description":"Date or time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_determineValidationMessage","description":"Returns a meaningful validation message","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":265,"column":4},"end":{"line":302,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"Invalid momentObj"},{"name":"invalidObj","type":"Object","description":"Stores the different invalid"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_updateValidationEvent","description":"Fires when 'validationErrorMessage' is changed","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":309,"column":4},"end":{"line":313,"column":5}},"metadata":{},"params":[{"name":"validationErrorMessage","type":"string","description":"Values validationErrorMessage"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_submitButtonState","description":"Sets the button state based on if validation has been passed or not. This in turn enables or disables the Submit button.","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":319,"column":4},"end":{"line":321,"column":5}},"metadata":{},"params":[{"name":"state","type":"Boolean","description":"Where the validation has passed or failed"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_handleIncompleteEntries","description":"If required any incomplete momentObj is invalid\nIf not required determine if the field is blank","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":330,"column":4},"end":{"line":346,"column":5}},"metadata":{},"params":[{"name":"funcOrigin","type":"String","description":"The function that called validation"},{"name":"entry","type":"Element","description":"px-datetime-entry date"},{"name":"fieldNodes","type":"Object","description":"Object of date and time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_loopOverCellValues","description":"Checking to see if all cells are empty\nIf a cell has a value return false","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":353,"column":4},"end":{"line":365,"column":5}},"metadata":{},"params":[{"name":"cells","type":"Object","description":"Date or time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"clear","description":"Clears the input value for each entry-cell input field.","privacy":"public","sourceRange":{"start":{"line":214,"column":4},"end":{"line":219,"column":5}},"metadata":{},"params":[]},{"name":"setValueFromMoment","description":"Resets the input value for each entry-cell input field to the current momentObj.","privacy":"public","sourceRange":{"start":{"line":223,"column":5},"end":{"line":228,"column":5}},"metadata":{},"params":[]},{"name":"_formatChanged","description":"runs when `momentFormat` is changed\nUpdates `_cellFormatArray` and `_symbolCharArray` if one of them as changed","privacy":"protected","sourceRange":{"start":{"line":233,"column":4},"end":{"line":248,"column":5}},"metadata":{},"params":[{"name":"newMomentFormat"}]},{"name":"_sizeSymbols","description":"create a dummy canvas to measure string and make size the input correctly","privacy":"protected","sourceRange":{"start":{"line":252,"column":4},"end":{"line":267,"column":5}},"metadata":{},"params":[]},{"name":"_splitFormat","description":"Regex that splits the `momentFormat` into two arrays. One for the tokens and one for the separators","privacy":"protected","sourceRange":{"start":{"line":271,"column":4},"end":{"line":278,"column":5}},"metadata":{},"params":[{"name":"momentFormat"}]},{"name":"_isSymbol","description":"Helper function for a dom-if\nDetermines if the `_symbolCharArray` of `index` is null or undefined","privacy":"protected","sourceRange":{"start":{"line":283,"column":4},"end":{"line":288,"column":5}},"metadata":{},"params":[{"name":"i"},{"name":"_symbolCharArray"}]},{"name":"_returnSymbol","description":"return a string of the separation symbols","privacy":"protected","sourceRange":{"start":{"line":292,"column":4},"end":{"line":297,"column":5}},"metadata":{},"params":[{"name":"i"},{"name":"_symbolCharArray"}]},{"name":"_setIcon","description":"helper to determine whether to diplay the calendar or clock icon","privacy":"protected","sourceRange":{"start":{"line":301,"column":4},"end":{"line":307,"column":5}},"metadata":{},"params":[]},{"name":"_entryCellMove","description":"handle arrow keys switching cells or firing events to above components","privacy":"protected","sourceRange":{"start":{"line":316,"column":4},"end":{"line":327,"column":5}},"metadata":{},"params":[{"name":"evt"}]},{"name":"_focusCell","description":"","privacy":"protected","sourceRange":{"start":{"line":331,"column":4},"end":{"line":334,"column":5}},"metadata":{},"params":[{"name":"cellNumber"}]},{"name":"_focusLastCell","description":"","privacy":"protected","sourceRange":{"start":{"line":338,"column":4},"end":{"line":340,"column":5}},"metadata":{},"params":[]},{"name":"_handleBlur","description":"when `px-cell-blurred` is fired run `_validateInput`","privacy":"protected","sourceRange":{"start":{"line":344,"column":4},"end":{"line":346,"column":5}},"metadata":{},"params":[]},{"name":"_handleDropdownFocus","description":"Catches the `on-focus-changed` from `px-dropdown` and fires this up for `px-datetime-field`","privacy":"private","sourceRange":{"start":{"line":352,"column":4},"end":{"line":354,"column":5}},"metadata":{},"params":[]},{"name":"_handleDropdownBlur","description":"Catches the `on-blur-changed` from `px-dropdown` and fires this up for `px-datetime-field`","privacy":"private","sourceRange":{"start":{"line":360,"column":4},"end":{"line":362,"column":5}},"metadata":{},"params":[]},{"name":"_showTimeZoneText","description":"used in a dom-if\ndetermines whether to display the `text` or `abbreviatedText` option","privacy":"protected","sourceRange":{"start":{"line":367,"column":4},"end":{"line":369,"column":5}},"metadata":{},"params":[{"name":"showTimeZone"}]},{"name":"_showTimeZoneDropdown","description":"used in a dom-if\ndetermines whether to display the `dropdown` or `extendedDropdown` option","privacy":"protected","sourceRange":{"start":{"line":374,"column":4},"end":{"line":376,"column":5}},"metadata":{},"params":[{"name":"showTimeZone"}]},{"name":"_getTimeZoneList","description":"Create the `extendedDropdown` and `dropdown` items for `px-dropdown`\n\nIf showTimeZone is not `extendedDropdown` or `dropdown` return and empty array.\nBecause of a timing issue `_getTimeZoneList` can be called before `_showTimeZoneDropdown`\ncausing an issue if the dropdown tries to redraw without `items` being defined.","privacy":"protected","sourceRange":{"start":{"line":384,"column":4},"end":{"line":424,"column":5}},"metadata":{},"params":[{"name":"showTimeZone"}]},{"name":"_updateTimeZone","description":"when `px-dropdown-selection-changed` is fired update `timeZone`","privacy":"protected","sourceRange":{"start":{"line":428,"column":4},"end":{"line":430,"column":5}},"metadata":{},"params":[{"name":"e"}]},{"name":"_handleCopy","description":"","privacy":"protected","sourceRange":{"start":{"line":434,"column":4},"end":{"line":437,"column":5}},"metadata":{},"params":[{"name":"e"}]},{"name":"_handlePaste","description":"","privacy":"protected","sourceRange":{"start":{"line":441,"column":4},"end":{"line":458,"column":5}},"metadata":{},"params":[{"name":"e"}]},{"name":"_getIconClass","description":"Determines what classes should show on the label icon","privacy":"protected","sourceRange":{"start":{"line":462,"column":4},"end":{"line":464,"column":5}},"metadata":{},"params":[{"name":"hideIcon"}]},{"name":"_getTimeZoneText","description":"","privacy":"protected","sourceRange":{"start":{"line":467,"column":4},"end":{"line":474,"column":5}},"metadata":{},"params":[{"name":"timeZone"},{"name":"showTimeZone"}]},{"name":"_getTimeZoneTextClass","description":"css helper. If a dropdown is showing add a margin-left of 10px;","privacy":"protected","sourceRange":{"start":{"line":478,"column":4},"end":{"line":486,"column":5}},"metadata":{},"params":[{"name":"showTimeZone"},{"name":"isValid"}]},{"name":"_iconClicked","description":"This event is fired when the calendar or clock icon has been clicked","privacy":"protected","sourceRange":{"start":{"line":493,"column":4},"end":{"line":495,"column":5}},"metadata":{},"params":[{"name":"evt"}]}],"staticMethods":[],"demos":[{"url":"index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":115,"column":10},"end":{"line":496,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"key-event-target","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":277,"column":6},"end":{"line":282,"column":7}},"metadata":{},"type":"?EventTarget","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stop-keyboard-event-propagation","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":288,"column":6},"end":{"line":288,"column":65}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"block-future-dates","description":"Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":34,"column":6},"end":{"line":37,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"block-past-dates","description":"Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":41,"column":6},"end":{"line":44,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"language","description":"set a default for localizing","sourceRange":{"file":"px-datetime-validate.html","start":{"line":50,"column":6},"end":{"line":53,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"resources","description":"used to pass in strings for localization","sourceRange":{"file":"px-datetime-validate.html","start":{"line":65,"column":6},"end":{"line":84,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"formats","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"use-key-if-missing","description":"Use the key for localization if value for  language is missing. Should\nalways be true for px components","sourceRange":{"file":"px-datetime-validate.html","start":{"line":58,"column":6},"end":{"line":61,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"localize","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{},"type":"Function","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubble-event","description":"If true, will bubble up the event to the parents","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"time-zone","description":"Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":64,"column":6},"end":{"line":70,"column":8}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"min-date","description":"The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":89,"column":6},"end":{"line":92,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"max-date","description":"The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).","sourceRange":{"file":"px-datetime-shared-behavior.html","start":{"line":96,"column":6},"end":{"line":99,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"moment-obj","description":"Moment value with the date or time to display.  Will be parsed according to the moment format. (See momentFormat property.)","sourceRange":{"file":"px-datetime-behavior.html","start":{"line":33,"column":6},"end":{"line":39,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"name":"validation-error-message","description":"String used to describe the current invalid state","sourceRange":{"file":"px-datetime-validate.html","start":{"line":43,"column":6},"end":{"line":46,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"container-type","description":"An optional type set on the px-overlay-container and px-overlay-content to associate specific overlay-contents with their container","sourceRange":{"file":"../px-overlay/px-overlay-behavior.html","start":{"line":39,"column":4},"end":{"line":39,"column":25}},"metadata":{},"type":"string","inheritedFrom":"PxOverlayBehavior.sharedProperties"},{"name":"date-or-time","description":"Date or Time icon/text\n\nFormat is 'Date' or 'Time'","sourceRange":{"start":{"line":131,"column":6},"end":{"line":134,"column":7}},"metadata":{},"type":"string"},{"name":"moment-format","description":"Moment format string for the format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)","sourceRange":{"start":{"line":139,"column":6},"end":{"line":143,"column":7}},"metadata":{},"type":"string"},{"name":"hide-icon","description":"Whether to hide the calendar or clock icon","sourceRange":{"start":{"line":147,"column":6},"end":{"line":150,"column":7}},"metadata":{},"type":"boolean"},{"name":"show-time-zone","description":"Determines how to display the timezone:\n- 'dropdown': shows the timezone as a dropdown which the user can use to select a different timezone. Only contains a subset of all timezones.\n**NOTE: this collection of timezones uses the POSIX convention for timezone offset, meaning that positive values correspond to timezones WEST of GMT and negative values correspond to timezones EAST of GMT.**\n- 'extendedDropdown': shows the timezone as a dropdown which the user can use to select a different timezone. Contains all existing timezones (588)\n- 'text': shows the timezone as text, non editable\n- 'abbreviatedText': shows the timezone as an abbreviated text, non editable (e.g. UTC, PST, EST, etc)","sourceRange":{"start":{"line":176,"column":6},"end":{"line":179,"column":7}},"metadata":{},"type":"string"},{"name":"is-selected","description":"True if any cell is currently selected.","sourceRange":{"start":{"line":183,"column":6},"end":{"line":186,"column":7}},"metadata":{},"type":"boolean"},{"name":"hoist","description":"Specifies if the dropdown content should get hoisted to a container in order to escape its current stacking context","sourceRange":{"start":{"line":190,"column":7},"end":{"line":193,"column":7}},"metadata":{},"type":"boolean"}],"events":[{"type":"CustomEvent","name":"app-localize-resources-error","description":"app-localize-resources-error","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"app-localize-resources-loaded","description":"app-localize-resources-loaded","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"time-zone-changed","description":"Fired when the `timeZone` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"type":"CustomEvent","name":"moment-obj-changed","description":"Fired when the `momentObj` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.SingleMoment"},{"type":"CustomEvent","name":"px-moment-valid","description":"px-moment-valid","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"type":"CustomEvent","name":"px-validation-message","description":"px-validation-message","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"type":"CustomEvent","name":"px-datetime-entry-icon-clicked","description":"px-datetime-entry-icon-clicked","metadata":{}},{"type":"CustomEvent","name":"px-dropdown-blured","description":"px-dropdown-blured","metadata":{}},{"type":"CustomEvent","name":"px-dropdown-focused","description":"px-dropdown-focused","metadata":{}},{"type":"CustomEvent","name":"px-next-field","description":"px-next-field","metadata":{}},{"type":"CustomEvent","name":"is-selected-changed","description":"Fired when the `isSelected` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-datetime-entry"},{"description":"Date time button component.\n\n### Usage\n\n    <px-datetime-button>\n    </px-datetime-button>","summary":"","path":"../px-datetime-common/px-datetime-buttons.html","properties":[{"name":"__localizationCache","type":"Object","description":"Internal singleton cache. This is the private implementation of the\nbehaviour; don't interact with it directly.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":140,"column":2},"end":{"line":144,"column":3}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"language","type":"string","description":"set a default for localizing","privacy":"public","sourceRange":{"start":{"line":115,"column":5},"end":{"line":118,"column":6}},"metadata":{"polymer":{}},"defaultValue":"\"en\""},{"name":"resources","type":"Object","description":"List of key/values to be included for translating this component","privacy":"public","sourceRange":{"start":{"line":101,"column":6},"end":{"line":111,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{\"en\":{\"Cancel\":\"Cancel\",\"Apply\":\"Apply\"}}"},{"name":"formats","type":"Object","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"useKeyIfMissing","type":"boolean","description":"Use the key for localization if value for  language is missing. Should\nalways be true for  our components","privacy":"public","sourceRange":{"start":{"line":123,"column":5},"end":{"line":126,"column":6}},"metadata":{"polymer":{}},"defaultValue":"true"},{"name":"localize","type":"Function","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubbleEvent","type":"boolean","description":"If true, will bubble up the event to the parents","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"isValid","type":"boolean","description":"Boolean stating if the current component is valid. Gets updated in '_validateInput'","privacy":"private","sourceRange":{"file":"px-datetime-validate.html","start":{"line":35,"column":6},"end":{"line":39,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"true","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"validationErrorMessage","type":"string","description":"String used to describe the current invalid state","privacy":"public","sourceRange":{"file":"px-datetime-validate.html","start":{"line":43,"column":6},"end":{"line":46,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"invalid\"","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"isSubmitButtonValid","type":"boolean","description":"Whether the Submit button should be valid","privacy":"public","sourceRange":{"start":{"line":66,"column":6},"end":{"line":69,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true"},{"name":"hideSubmit","type":"boolean","description":"Hides the Submit button when true","privacy":"public","sourceRange":{"start":{"line":73,"column":6},"end":{"line":76,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"hideCancel","type":"boolean","description":"Hides the Cancel button when true","privacy":"public","sourceRange":{"start":{"line":80,"column":6},"end":{"line":83,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"submitIcon","type":"string","description":"Icon to be used for the Submit button","privacy":"public","sourceRange":{"start":{"line":87,"column":6},"end":{"line":89,"column":7}},"metadata":{"polymer":{}}},{"name":"spaceBetween","type":"boolean","description":"If true buttons will be set to `justify-content: space-between;`","privacy":"public","sourceRange":{"start":{"line":93,"column":6},"end":{"line":97,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"}],"methods":[{"name":"loadResources","description":"","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":222,"column":2},"end":{"line":255,"column":3}},"metadata":{},"params":[{"name":"path"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__computeLocalize","description":"Returns a computed `localize` method, based on the current `language`.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":260,"column":2},"end":{"line":300,"column":3}},"metadata":{},"params":[{"name":"language"},{"name":"resources"},{"name":"formats"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestResponse","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":302,"column":2},"end":{"line":330,"column":3}},"metadata":{},"params":[{"name":"event"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestError","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":332,"column":2},"end":{"line":334,"column":3}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__checkLocalizationCache","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":336,"column":2},"end":{"line":344,"column":3}},"metadata":{},"params":[{"name":"proto"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"_validateInput","description":"Validation function for 'px-datetime-entry'","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":98,"column":4},"end":{"line":116,"column":5}},"metadata":{},"params":[{"name":"format"},{"name":"tz"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validateField","description":"Validate a complete field\ncalled in px-datetime-field and px-datetime-range-field","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":129,"column":4},"end":{"line":170,"column":5}},"metadata":{},"params":[{"name":"funcOrigin","type":"String","description":"The function that called validation. Used for `_handleIncompleteEntries`"}],"return":{"desc":"validation result:\n- MomentObj - The validated new moment obj\n- False - If the new moment is invalid\n- FieldSame - If the new moment is the same as the old moment\n- FieldBlank - If the visible field(s) are blank"},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validateMomentObj","description":"Validate a moment object\ncalled in from _validateField and px-datetime-field","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":181,"column":4},"end":{"line":210,"column":5}},"metadata":{},"params":[{"name":"validatingMomentObj"}],"return":{"desc":"validation result:\n- MomentObj - The validated new moment obj\n- False - If the new moment is invalid\n- FieldSame - If the new moment is the same as the old moment"},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_validField","description":"Reset field to valid","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":216,"column":4},"end":{"line":227,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"valid momentObj"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_invalidField","description":"Set field to invalid\nSet validation Error Message, turn on validation error, set isValid to false, and fire event.","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":235,"column":4},"end":{"line":240,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"Invalid momentObj"},{"name":"invalidObj","type":"Object","description":"Stores the different invalid"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_entryInputString","description":"loop through array of the entry cells and return a string of the value","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":246,"column":4},"end":{"line":258,"column":5}},"metadata":{},"params":[{"name":"cells","type":"Object","description":"Date or time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_determineValidationMessage","description":"Returns a meaningful validation message","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":265,"column":4},"end":{"line":302,"column":5}},"metadata":{},"params":[{"name":"submittedMoment","type":"Object","description":"Invalid momentObj"},{"name":"invalidObj","type":"Object","description":"Stores the different invalid"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_updateValidationEvent","description":"Fires when 'validationErrorMessage' is changed","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":309,"column":4},"end":{"line":313,"column":5}},"metadata":{},"params":[{"name":"validationErrorMessage","type":"string","description":"Values validationErrorMessage"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_submitButtonState","description":"Sets the button state based on if validation has been passed or not. This in turn enables or disables the Submit button.","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":319,"column":4},"end":{"line":321,"column":5}},"metadata":{},"params":[{"name":"state","type":"Boolean","description":"Where the validation has passed or failed"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_handleIncompleteEntries","description":"If required any incomplete momentObj is invalid\nIf not required determine if the field is blank","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":330,"column":4},"end":{"line":346,"column":5}},"metadata":{},"params":[{"name":"funcOrigin","type":"String","description":"The function that called validation"},{"name":"entry","type":"Element","description":"px-datetime-entry date"},{"name":"fieldNodes","type":"Object","description":"Object of date and time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_loopOverCellValues","description":"Checking to see if all cells are empty\nIf a cell has a value return false","privacy":"protected","sourceRange":{"file":"px-datetime-validate.html","start":{"line":353,"column":4},"end":{"line":365,"column":5}},"metadata":{},"params":[{"name":"cells","type":"Object","description":"Date or time cell nodes"}],"inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"_fireCancelEvent","description":"","privacy":"protected","sourceRange":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"metadata":{},"params":[]},{"name":"_fireSubmitEvent","description":"","privacy":"protected","sourceRange":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"metadata":{},"params":[]},{"name":"submitBtnClasses","description":"","privacy":"public","sourceRange":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"metadata":{},"params":[{"name":"base"},{"name":"submitButtonValid"}]},{"name":"_isEqual","description":"","privacy":"protected","sourceRange":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"metadata":{},"params":[{"name":"source"},{"name":"target"}]}],"staticMethods":[],"demos":[{"url":"index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":53,"column":10},"end":{"line":156,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"language","description":"set a default for localizing","sourceRange":{"start":{"line":115,"column":5},"end":{"line":118,"column":6}},"metadata":{},"type":"string"},{"name":"resources","description":"List of key/values to be included for translating this component","sourceRange":{"start":{"line":101,"column":6},"end":{"line":111,"column":7}},"metadata":{},"type":"Object"},{"name":"formats","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"use-key-if-missing","description":"Use the key for localization if value for  language is missing. Should\nalways be true for  our components","sourceRange":{"start":{"line":123,"column":5},"end":{"line":126,"column":6}},"metadata":{},"type":"boolean"},{"name":"localize","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{},"type":"Function","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubble-event","description":"If true, will bubble up the event to the parents","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"validation-error-message","description":"String used to describe the current invalid state","sourceRange":{"file":"px-datetime-validate.html","start":{"line":43,"column":6},"end":{"line":46,"column":7}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Validate"},{"name":"is-submit-button-valid","description":"Whether the Submit button should be valid","sourceRange":{"start":{"line":66,"column":6},"end":{"line":69,"column":7}},"metadata":{},"type":"boolean"},{"name":"hide-submit","description":"Hides the Submit button when true","sourceRange":{"start":{"line":73,"column":6},"end":{"line":76,"column":7}},"metadata":{},"type":"boolean"},{"name":"hide-cancel","description":"Hides the Cancel button when true","sourceRange":{"start":{"line":80,"column":6},"end":{"line":83,"column":7}},"metadata":{},"type":"boolean"},{"name":"submit-icon","description":"Icon to be used for the Submit button","sourceRange":{"start":{"line":87,"column":6},"end":{"line":89,"column":7}},"metadata":{},"type":"string"},{"name":"space-between","description":"If true buttons will be set to `justify-content: space-between;`","sourceRange":{"start":{"line":93,"column":6},"end":{"line":97,"column":7}},"metadata":{},"type":"boolean"}],"events":[{"type":"CustomEvent","name":"app-localize-resources-error","description":"app-localize-resources-error","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"app-localize-resources-loaded","description":"app-localize-resources-loaded","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"px-moment-valid","description":"px-moment-valid","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Validate"},{"type":"CustomEvent","name":"px-validation-message","description":"px-validation-message","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Validate"}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-datetime-buttons"},{"description":"The list of preset ranges in the rangepicker modal.\n\n### Usage\n\n    <px-datetime-presets preset-ranges=\"{{...}}\">\n    </px-datetime-presets>","summary":"","path":"../px-datetime-common/px-datetime-presets.html","properties":[{"name":"__localizationCache","type":"Object","description":"Internal singleton cache. This is the private implementation of the\nbehaviour; don't interact with it directly.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":140,"column":2},"end":{"line":144,"column":3}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"language","type":"string","description":"set a default for localizing","privacy":"public","sourceRange":{"start":{"line":116,"column":5},"end":{"line":119,"column":6}},"metadata":{"polymer":{}},"defaultValue":"\"en\""},{"name":"resources","type":"Object","description":"List of key/values to be included for translating this component","privacy":"public","sourceRange":{"start":{"line":103,"column":6},"end":{"line":112,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{\"en\":{\"Presets\":\"Presets\"}}"},{"name":"formats","type":"Object","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"useKeyIfMissing","type":"boolean","description":"Use the key for localization if value for  language is missing. Should\nalways be true for  our components","privacy":"public","sourceRange":{"start":{"line":124,"column":5},"end":{"line":127,"column":6}},"metadata":{"polymer":{}},"defaultValue":"true"},{"name":"localize","type":"Function","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubbleEvent","type":"boolean","description":"If true, will bubble up the event to the parents","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"presetRanges","type":"Object","description":"(optional)\n\nThe preset date/time ranges to be displayed.  If not set, will have no presets displayed.\n\n```\n  [\n   {\n     \"displayText\": \"Last 5 Minutes\",\n     \"startDateTime\": \"2013-02-04T22:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": function() {return moment().subtract(1, 'days').toISOString();},\n     \"endDateTime\": function() {return moment().startOf('day').toISOString();}\n   }\n  ]\n```\n\nstartDateTime and endDateTime can also be functions, in which case\nthey need to either return an ISO string as seen abode or a moment\nobject","privacy":"public","sourceRange":{"start":{"line":86,"column":6},"end":{"line":91,"column":7}},"metadata":{"polymer":{}},"defaultValue":"[]"},{"name":"selectedItem","type":"Object","description":"","privacy":"public","sourceRange":{"start":{"line":94,"column":6},"end":{"line":99,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{}"}],"methods":[{"name":"loadResources","description":"","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":222,"column":2},"end":{"line":255,"column":3}},"metadata":{},"params":[{"name":"path"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__computeLocalize","description":"Returns a computed `localize` method, based on the current `language`.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":260,"column":2},"end":{"line":300,"column":3}},"metadata":{},"params":[{"name":"language"},{"name":"resources"},{"name":"formats"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestResponse","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":302,"column":2},"end":{"line":330,"column":3}},"metadata":{},"params":[{"name":"event"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestError","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":332,"column":2},"end":{"line":334,"column":3}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__checkLocalizationCache","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":336,"column":2},"end":{"line":344,"column":3}},"metadata":{},"params":[{"name":"proto"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"_usePreset","description":"","privacy":"protected","sourceRange":{"start":{"line":131,"column":4},"end":{"line":134,"column":5}},"metadata":{},"params":[{"name":"e"}]},{"name":"_getButtonClass","description":"","privacy":"protected","sourceRange":{"start":{"line":137,"column":4},"end":{"line":146,"column":5}},"metadata":{},"params":[{"name":"selectedItem"},{"name":"presetObject"}]}],"staticMethods":[],"demos":[{"url":"index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":50,"column":10},"end":{"line":147,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"language","description":"set a default for localizing","sourceRange":{"start":{"line":116,"column":5},"end":{"line":119,"column":6}},"metadata":{},"type":"string"},{"name":"resources","description":"List of key/values to be included for translating this component","sourceRange":{"start":{"line":103,"column":6},"end":{"line":112,"column":7}},"metadata":{},"type":"Object"},{"name":"formats","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"use-key-if-missing","description":"Use the key for localization if value for  language is missing. Should\nalways be true for  our components","sourceRange":{"start":{"line":124,"column":5},"end":{"line":127,"column":6}},"metadata":{},"type":"boolean"},{"name":"localize","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{},"type":"Function","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubble-event","description":"If true, will bubble up the event to the parents","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"preset-ranges","description":"(optional)\n\nThe preset date/time ranges to be displayed.  If not set, will have no presets displayed.\n\n```\n  [\n   {\n     \"displayText\": \"Last 5 Minutes\",\n     \"startDateTime\": \"2013-02-04T22:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": function() {return moment().subtract(1, 'days').toISOString();},\n     \"endDateTime\": function() {return moment().startOf('day').toISOString();}\n   }\n  ]\n```\n\nstartDateTime and endDateTime can also be functions, in which case\nthey need to either return an ISO string as seen abode or a moment\nobject","sourceRange":{"start":{"line":86,"column":6},"end":{"line":91,"column":7}},"metadata":{},"type":"Object"},{"name":"selected-item","description":"","sourceRange":{"start":{"line":94,"column":6},"end":{"line":99,"column":7}},"metadata":{},"type":"Object"}],"events":[{"type":"CustomEvent","name":"app-localize-resources-error","description":"app-localize-resources-error","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"app-localize-resources-loaded","description":"app-localize-resources-loaded","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-datetime-presets"}]}