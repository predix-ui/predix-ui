{"schema_version":"1.0.0","elements":[{"description":"px-demo-snippet is a helper element that displays the source code of a component\nand allows the user to click a button to (a) copy the code or (b) open the code\nsample in CodePen.\n\n### Usage\n\nImport the element:\n\n```\n<link rel=\"import\" href=\"px-demo-snippet.html\" />\n```\n\nAnd insert the element into your code.\n\n```\n    <px-demo-snippet\n      element-properties={{elemProps}}\n      element-name=\"px-modal\">\n    </px-demo-snippet>\n```\n\nThe last step is to data-bind an object with properties to the element (elemProps):\n\n```\n{\n  \"sampleProp0\": \"value\",\n  \"sampleProp1\": \"value\"\n  \"lightDomContent\": \"this is placed inside the component output.\",\n  \"parentComponent\": [\"<my-element show-option='true'>\",\"</my-element>\"],\n  \"siblingElement\" : \"<div>This is a sibling Element</div>\"\n}\n```\n\nThere are 3 special properties that demo-snippet looks for, and are NOT included in the output's attributes:\n  1. lightDomContent - the value of this is placed into the component between the opening and closing tags.\n\n  ##### example output for lightDomContent with the options above:\n\n  ```\n  <px-modal>this is placed inside the component output.</px-modal>\n  ```\n\n  2. parentComponent - this is an array that holds the opening and closing tags of the parent component. You may include attributes in these - just remember to use the correct quotes for attributes.\n\n  ##### example output for lightDomContent and parentComponent with the options above:\n\n  ```\n  <my-element show-option='true'><px-modal>this is placed inside the component output.</px-modal></my-element>\n  ```\n\n  3. siblingElement - this is a string that must open and close a tag.\n\n  ##### example:\n\n  ```\n  <my-element show-option='true'><px-modal>this is placed inside the component output.</px-modal><div>This is a sibling Element</div></my-element>\n  ```","summary":"","path":"../px-demo-snippet/px-demo-snippet.html","properties":[{"name":"_parentResizable","type":"Object","description":"The closest ancestor element that implements `IronResizableBehavior`.","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":41,"column":6},"end":{"line":41,"column":75}},"metadata":{"polymer":{"observer":"\"_parentResizableChanged\""}},"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_notifyingDescendant","type":"boolean","description":"True if this element is currently notifying its descendant elements of\nresize.","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":47,"column":6},"end":{"line":47,"column":57}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"elementName","type":"string","description":"A property that holds the name of the component\nfor which we are displaying the source","privacy":"public","sourceRange":{"start":{"line":132,"column":6},"end":{"line":135,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\""},{"name":"parentName","type":"string","description":"A property that holds the name of the component parent\nfor which we are displaying the source. this is used for the codepen import","privacy":"public","sourceRange":{"start":{"line":144,"column":6},"end":{"line":147,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\""},{"name":"elementProperties","type":"Object","description":"An object that holds all the properties for the element\nfor which we are displaying the source","privacy":"public","sourceRange":{"start":{"line":156,"column":6},"end":{"line":158,"column":7}},"metadata":{"polymer":{}}},{"name":"_output","type":"string","description":"A string - that is created dynamically by the options selected on the page -\nthat reflects the unrendered component code","privacy":"protected","sourceRange":{"start":{"line":167,"column":6},"end":{"line":171,"column":7}},"metadata":{"polymer":{"notify":true,"observer":"\"_render\""}}},{"name":"polygitIncludes","type":"Array","description":"An array of additional PolyGit includes required to make the CodePen work.","privacy":"public","sourceRange":{"start":{"line":179,"column":6},"end":{"line":182,"column":7}},"metadata":{"polymer":{}},"defaultValue":"[]"},{"name":"linksIncludes","type":"Array","description":"An array of <link> include URLs required to make the CodePen work.","privacy":"public","sourceRange":{"start":{"line":190,"column":6},"end":{"line":193,"column":7}},"metadata":{"polymer":{}},"defaultValue":"[]"},{"name":"scriptsIncludes","type":"Array","description":"An array of <script> include URLs required to make the CodePen work.","privacy":"public","sourceRange":{"start":{"line":201,"column":6},"end":{"line":204,"column":7}},"metadata":{"polymer":{}},"defaultValue":"[]"},{"name":"codeLink","type":"string","description":"Some components (e.g. px-vis) are too complex to generate codepens\nthis is a link to an existing codepen.","privacy":"public","sourceRange":{"start":{"line":212,"column":6},"end":{"line":215,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\""},{"name":"suppressPropertyValues","type":"Array","description":"","privacy":"public","sourceRange":{"start":{"line":217,"column":6},"end":{"line":220,"column":7}},"metadata":{"polymer":{}},"defaultValue":"[]"},{"name":"noIndentation","type":"boolean","description":"","privacy":"public","sourceRange":{"start":{"line":222,"column":6},"end":{"line":225,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"expandCode","type":"boolean","description":"toggle that determines if the editor displays at condensed or full height","privacy":"public","sourceRange":{"start":{"line":229,"column":6},"end":{"line":233,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"false"},{"name":"expandText","type":"string","description":"the display text for the expand button","privacy":"public","sourceRange":{"start":{"line":237,"column":6},"end":{"line":240,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"Expand Code\""},{"name":"hideCodepen","type":"boolean","description":"hides the codepen button altogether","privacy":"public","sourceRange":{"start":{"line":244,"column":6},"end":{"line":247,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_codeHeight","type":"number","description":"","privacy":"protected","sourceRange":{"start":{"line":248,"column":6},"end":{"line":251,"column":7}},"metadata":{"polymer":{}},"defaultValue":"0"}],"methods":[{"name":"created","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":54,"column":4},"end":{"line":59,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"attached","description":"","privacy":"protected","sourceRange":{"start":{"line":259,"column":4},"end":{"line":262,"column":5}},"metadata":{},"params":[]},{"name":"detached","description":"","privacy":"protected","sourceRange":{"start":{"line":264,"column":4},"end":{"line":266,"column":5}},"metadata":{},"params":[]},{"name":"notifyResize","description":"Can be called to manually notify a resizable and its descendant\nresizables of a resize change.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":80,"column":4},"end":{"line":92,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"assignParentResizable","description":"Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":98,"column":4},"end":{"line":110,"column":5}},"metadata":{},"params":[{"name":"parentResizable"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"stopResizeNotificationsFor","description":"Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":116,"column":4},"end":{"line":123,"column":5}},"metadata":{},"params":[{"name":"target"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"resizerShouldNotify","description":"This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.","privacy":"public","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":134,"column":4},"end":{"line":136,"column":5}},"metadata":{},"params":[{"name":"element","type":"HTMLElement","description":"A candidate descendant element that\nimplements `IronResizableBehavior`."}],"return":{"type":"boolean","desc":"True if the `element` should be notified of resize."},"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_onDescendantIronResize","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":138,"column":4},"end":{"line":150,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_fireResize","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":152,"column":4},"end":{"line":154,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_onIronRequestResizeNotifications","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":156,"column":4},"end":{"line":166,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_parentResizableChanged","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":168,"column":4},"end":{"line":172,"column":5}},"metadata":{},"params":[{"name":"parentResizable"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_notifyDescendant","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":174,"column":4},"end":{"line":185,"column":5}},"metadata":{},"params":[{"name":"descendant"}],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_requestResizeNotifications","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":187,"column":4},"end":{"line":232,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"_findParent","description":"","privacy":"protected","sourceRange":{"file":"../iron-resizable-behavior/iron-resizable-behavior.html","start":{"line":234,"column":4},"end":{"line":246,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronResizableBehavior"},{"name":"handleShowMore","description":"","privacy":"public","sourceRange":{"start":{"line":268,"column":4},"end":{"line":273,"column":5}},"metadata":{},"params":[]},{"name":"_shouldShowButton","description":"","privacy":"protected","sourceRange":{"start":{"line":274,"column":4},"end":{"line":282,"column":5}},"metadata":{},"params":[{"name":"_isMobile"},{"name":"_codeHeight"}]},{"name":"_onIronResize","description":"","privacy":"protected","sourceRange":{"start":{"line":283,"column":4},"end":{"line":286,"column":5}},"metadata":{},"params":[]},{"name":"render","description":"Attempts to render the current demo code snippet from its configured\nattributes.","privacy":"public","sourceRange":{"start":{"line":293,"column":4},"end":{"line":297,"column":5}},"metadata":{},"params":[],"return":{"type":"(String | undefined)","desc":"Unhighlighted, stringified code that was sent into the snippet"}},{"name":"_callRender","description":"Calls the render function debounced. For internal use to make sure we don't\nhammer the render methods.","privacy":"protected","sourceRange":{"start":{"line":303,"column":4},"end":{"line":305,"column":5}},"metadata":{},"params":[]},{"name":"_render","description":"Takes the current code from `this._output`, highlights it, and places the\noutput in the DOM.","privacy":"protected","sourceRange":{"start":{"line":325,"column":4},"end":{"line":359,"column":5}},"metadata":{},"params":[]},{"name":"_applyGroups","description":"Wrap our highlighter output in divs to allow each attr/value to be on its own line\n\nreturns new html string with divs","privacy":"protected","sourceRange":{"start":{"line":366,"column":4},"end":{"line":388,"column":5}},"metadata":{},"params":[{"name":"html"}]},{"name":"_fireOutputEvent","description":"This method fires a syntax-highlight event (meant for prism-highlighter),\nand returns the code, with formatting.","privacy":"protected","sourceRange":{"start":{"line":398,"column":4},"end":{"line":400,"column":5}},"metadata":{},"params":[{"name":"code","type":"String","description":"Stringified code"},{"name":"lang","type":"String","description":"The code language (e.g. 'html')"}],"return":{"type":"Event","desc":"Reference to the highlight event"}},{"name":"_elementPropertyChanged","description":"This method is called through a deep observer. Whenever a property on the\ndemo element is changed, it rebuilds the component string and renders it.","privacy":"protected","sourceRange":{"start":{"line":406,"column":4},"end":{"line":408,"column":5}},"metadata":{},"params":[]},{"name":"_formatComponentString","description":"Takes the requested element's properties, and the parentComponent,\nsiblingElement, or lightDomContent (if defined) and turns the result into\nan HTML string that can be highlighted and pushed into the DOM.","privacy":"protected","sourceRange":{"start":{"line":417,"column":4},"end":{"line":450,"column":5}},"metadata":{},"params":[],"return":{"type":"String","desc":"The finished HTML string. Will also be pushed to `_output`."}},{"name":"_printProperties","description":"Loops over a list of property names/values and converts them to valid\nHTML attribute key/values to be printed into an HTML tag.\n\nProperty names will be converted `camelCaseFormat` to 'dash-case-format'\nfollowing Polymer's internal rules.\n\nThese rules dictate how each property will get printed depending on the\ntype/content of its value:\n\n1. If the property is type Boolean or type String and 'true' or 'false',\nit gets treated as a Boolean. If it is truthy, it will get printed with\nno value (e.g. `trueAttr: true` will be printed as true-attr).\n2. If the property is type String or type Number (and not 'true' or 'false'),\nit will get printed as name=\"value\" (e.g. `strAttr: 'foo'`` -> str-attr=\"foo\")\n3. If the property is type Object (true or an Object or Array), it will be\nJSON.stringified and printed as name='{val}|[val]'.\n\nA few other cases:\n\n1. A property type Number with value `0` will get printed as 'name=\"0\"'\nand will not be treated as falsy/coerced into a boolean.\n2. A property type String with value empty string `\"\"` will not get\nprinted at all\n3. If JSON.stringify fails on a property type Object, it will get printed\nas name='[object Object]'","privacy":"protected","sourceRange":{"start":{"line":483,"column":4},"end":{"line":503,"column":5}},"metadata":{},"params":[{"name":"propList","type":"Array","description":"An array of property names in camelCase"},{"name":"propObj","type":"Object","description":"An object whose keys are items in the `propList` with values of any type"}],"return":{"type":"Array","desc":"Array of strings that can be joined with a space to print properties"}},{"name":"_tryToStringify","description":"Attemps to stringify an Object or Array. If it succeeds, return the output\nas a string. If it fails, returns string [object Object].","privacy":"protected","sourceRange":{"start":{"line":512,"column":4},"end":{"line":523,"column":5}},"metadata":{},"params":[{"name":"obj","type":"(Object | Array)"}],"return":{"type":"String"}},{"name":"_openCodePenRequest","description":"We need to dynamically generate the content that goes into the codepen\nthat open. This method creates a form element and a hidden field,\npopulates the hidden field value of what's displaying on the page,\nand submits that over to codepen in a post request, creating a codepen\non the fly.","privacy":"protected","sourceRange":{"start":{"line":532,"column":4},"end":{"line":633,"column":5}},"metadata":{},"params":[]}],"staticMethods":[],"demos":[{"url":"index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":114,"column":10},"end":{"line":634,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"element-name","description":"A property that holds the name of the component\nfor which we are displaying the source","sourceRange":{"start":{"line":132,"column":6},"end":{"line":135,"column":7}},"metadata":{},"type":"string"},{"name":"parent-name","description":"A property that holds the name of the component parent\nfor which we are displaying the source. this is used for the codepen import","sourceRange":{"start":{"line":144,"column":6},"end":{"line":147,"column":7}},"metadata":{},"type":"string"},{"name":"element-properties","description":"An object that holds all the properties for the element\nfor which we are displaying the source","sourceRange":{"start":{"line":156,"column":6},"end":{"line":158,"column":7}},"metadata":{},"type":"Object"},{"name":"polygit-includes","description":"An array of additional PolyGit includes required to make the CodePen work.","sourceRange":{"start":{"line":179,"column":6},"end":{"line":182,"column":7}},"metadata":{},"type":"Array"},{"name":"links-includes","description":"An array of <link> include URLs required to make the CodePen work.","sourceRange":{"start":{"line":190,"column":6},"end":{"line":193,"column":7}},"metadata":{},"type":"Array"},{"name":"scripts-includes","description":"An array of <script> include URLs required to make the CodePen work.","sourceRange":{"start":{"line":201,"column":6},"end":{"line":204,"column":7}},"metadata":{},"type":"Array"},{"name":"code-link","description":"Some components (e.g. px-vis) are too complex to generate codepens\nthis is a link to an existing codepen.","sourceRange":{"start":{"line":212,"column":6},"end":{"line":215,"column":7}},"metadata":{},"type":"string"},{"name":"suppress-property-values","description":"","sourceRange":{"start":{"line":217,"column":6},"end":{"line":220,"column":7}},"metadata":{},"type":"Array"},{"name":"no-indentation","description":"","sourceRange":{"start":{"line":222,"column":6},"end":{"line":225,"column":7}},"metadata":{},"type":"boolean"},{"name":"expand-code","description":"toggle that determines if the editor displays at condensed or full height","sourceRange":{"start":{"line":229,"column":6},"end":{"line":233,"column":7}},"metadata":{},"type":"boolean"},{"name":"expand-text","description":"the display text for the expand button","sourceRange":{"start":{"line":237,"column":6},"end":{"line":240,"column":7}},"metadata":{},"type":"string"},{"name":"hide-codepen","description":"hides the codepen button altogether","sourceRange":{"start":{"line":244,"column":6},"end":{"line":247,"column":7}},"metadata":{},"type":"boolean"}],"events":[{"type":"CustomEvent","name":"expand-code-changed","description":"Fired when the `expandCode` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-demo-snippet"}]}