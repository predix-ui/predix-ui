{"schema_version":"1.0.0","elements":[{"description":"The datetime components rely on [Moment.js](https://momentjs.com/) and [Moment Timezone](https://momentjs.com/timezone/).\n\n### Usage\n\n    <px-datetime-range-panel\n      from-moment={{...}}\n      to-moment={{...}}>\n    </px-datetime-range-panel>\n\n\n### Styling\n\nThe following custom properties are available for styling. Please also refer to px-forms-design, px-calendar-picker, px-datetime-field, and px-datetime-common for additional style variables used by this component.\n\nCustom property | Description\n:----------------|:-------------\n`--px-range-panel-border-color` | Border color used within the datetime range panel\n`--px-range-panel-background-color` | Background color for the datetime range panel\n`--px-range-panel-z-index` | The z-index for the datetime range panel","summary":"","path":"../px-datetime-range-panel/px-datetime-range-panel.html","properties":[{"name":"keyEventTarget","type":"?EventTarget","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":277,"column":6},"end":{"line":282,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stopKeyboardEventPropagation","type":"boolean","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":288,"column":6},"end":{"line":288,"column":65}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_boundKeyHandlers","type":"Array","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":290,"column":6},"end":{"line":295,"column":7}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_imperativeKeyBindings","type":"Object","description":"own properties of everything on the \"prototype\".","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":299,"column":6},"end":{"line":304,"column":7}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyBindings","type":"!Object","description":"To be used to express what combination of keys  will trigger the relative\ncallback. e.g. `keyBindings: { 'esc': '_onEscPressed'}`","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":315,"column":4},"end":{"line":315,"column":19}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"blockFutureDates","type":"boolean","description":"Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":34,"column":6},"end":{"line":37,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"blockPastDates","type":"boolean","description":"Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":41,"column":6},"end":{"line":44,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"__localizationCache","type":"Object","description":"Internal singleton cache. This is the private implementation of the\nbehaviour; don't interact with it directly.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":140,"column":2},"end":{"line":144,"column":3}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"language","type":"string","description":"set a default for localizing","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":74,"column":7},"end":{"line":77,"column":8}},"metadata":{"polymer":{}},"defaultValue":"\"en\"","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"resources","type":"Object","description":"The dictionary of localized messages, for each of the languages that\nare going to be used. See http://formatjs.io/guides/message-syntax/ for\nmore information on the message syntax.\n\nFor example, a valid dictionary would be:\nthis.resources = {\n 'en': { 'greeting': 'Hello!' }, 'fr' : { 'greeting': 'Bonjour!' }\n}","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":176,"column":4},"end":{"line":178,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"formats","type":"Object","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"useKeyIfMissing","type":"boolean","description":"Use the key for localization if value for  language is missing. Should\nalways be true for  our components","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":82,"column":7},"end":{"line":85,"column":8}},"metadata":{"polymer":{}},"defaultValue":"true","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"localize","type":"Function","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{"polymer":{"readOnly":true}},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubbleEvent","type":"boolean","description":"If true, will bubble up the event to the parents","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"timeZone","type":"string","description":"Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":64,"column":6},"end":{"line":70,"column":8}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"minDate","type":"Object","description":"The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":89,"column":6},"end":{"line":92,"column":7}},"metadata":{"polymer":{"observer":"\"_minDateChanged\""}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"maxDate","type":"Object","description":"The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":96,"column":6},"end":{"line":99,"column":7}},"metadata":{"polymer":{"observer":"\"_maxDateChanged\""}},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"fromMoment","type":"Object","description":"Moment object start date & time","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":32,"column":6},"end":{"line":38,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"null","inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"name":"toMoment","type":"Object","description":"Moment object end date & time","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":42,"column":6},"end":{"line":48,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"null","inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"name":"presetRanges","type":"Object","description":"The preset date/time ranges to be displayed.\n\n```\n  [\n   {\n     \"displayText\": \"Yesterday\",\n     \"startDateTime\": moment().subtract(1, 'days').toISOString(),\n     \"endDateTime\": moment().startOf('day').toISOString()\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": \"2013-02-04T10:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": function() {return moment().subtract(1, 'days').toISOString();},\n     \"endDateTime\": function() {return moment().startOf('day').toISOString();}\n   }\n  ]\n```","privacy":"public","sourceRange":{"start":{"line":209,"column":6},"end":{"line":231,"column":7}},"metadata":{"polymer":{}},"defaultValue":"[]"},{"name":"showButtons","type":"boolean","description":"Whether to show Apply and Cancel buttons in the components","privacy":"public","sourceRange":{"file":"../px-datetime-common/px-datetime-button-behavior.html","start":{"line":33,"column":6},"end":{"line":37,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"PxDatetimeBehavior.Buttons"},{"name":"fromBaseDate","type":"Object","description":"Reflects the date currently used by the 'from' calendar to determine what it should\nbe showing, i.e what month, year or year range.","privacy":"public","sourceRange":{"start":{"line":156,"column":6},"end":{"line":160,"column":7}},"metadata":{"polymer":{"notify":true,"observer":"\"_fromBaseDateChanged\""}}},{"name":"toBaseDate","type":"Object","description":"Reflects the date currently used by the 'to' calendar to determine what it should\nbe showing, i.e what month, year or year range.","privacy":"public","sourceRange":{"start":{"line":165,"column":6},"end":{"line":169,"column":7}},"metadata":{"polymer":{"notify":true,"observer":"\"_toBaseDateChanged\""}}},{"name":"hidden","type":"boolean","description":"True if the modal is hidden.  Must be declared as a property to reference (below) in IE 10.","privacy":"private","sourceRange":{"start":{"line":174,"column":6},"end":{"line":176,"column":7}},"metadata":{"polymer":{}}},{"name":"hidePresets","type":"boolean","description":"Presets won't be shown","privacy":"public","sourceRange":{"start":{"line":180,"column":6},"end":{"line":183,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"hideTime","type":"boolean","description":"Will prevent time from being displayed","privacy":"public","sourceRange":{"start":{"line":235,"column":6},"end":{"line":238,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"timeFormat","type":"string","description":"Moment format used for the time","privacy":"public","sourceRange":{"start":{"line":242,"column":7},"end":{"line":245,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"HH:mm:ss A\""},{"name":"_internalSet","type":"boolean","description":"Whether the moment objects are being set internally (=from this component)","privacy":"protected","sourceRange":{"start":{"line":249,"column":6},"end":{"line":252,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_fromTimeIsValid","type":"boolean","description":"","privacy":"protected","sourceRange":{"start":{"line":253,"column":6},"end":{"line":256,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true"},{"name":"_toTimeIsValid","type":"boolean","description":"","privacy":"protected","sourceRange":{"start":{"line":257,"column":6},"end":{"line":260,"column":7}},"metadata":{"polymer":{}},"defaultValue":"true"},{"name":"timeIsValid","type":"boolean","description":"computed from `_fromTimeIsValid`, `_toTimeIsValid`, and `hideTime`","privacy":"public","sourceRange":{"start":{"line":264,"column":6},"end":{"line":268,"column":7}},"metadata":{"polymer":{"notify":true,"readOnly":true}}},{"name":"_canApply","type":"boolean","description":"True if the range currently selected can be applied (right order and time valid)\nUsed to determine if the apply button is active (true) or disabled (false)","privacy":"protected","sourceRange":{"start":{"line":273,"column":6},"end":{"line":276,"column":7}},"metadata":{"polymer":{"readOnly":true}}},{"name":"allowApply","type":"boolean","description":"Controls if the `_canApply`, which controls the apply button, is true or false.\nfalse : `_canApply` will be false\ntrue : doesn't force a false on `_canApply`. It will rely on `timeIsValid`, `fromMoment`,\n`toMoment` to calculate the property\n\nUsed in rangepicker","privacy":"public","sourceRange":{"start":{"line":285,"column":6},"end":{"line":287,"column":7}},"metadata":{"polymer":{}}}],"methods":[{"name":"registered","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":317,"column":4},"end":{"line":319,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"attached","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":321,"column":4},"end":{"line":323,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"detached","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":325,"column":4},"end":{"line":327,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"addOwnKeyBinding","description":"Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":337,"column":4},"end":{"line":341,"column":5}},"metadata":{},"params":[{"name":"eventString","type":"string"},{"name":"handlerName","type":"string"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"removeOwnKeyBindings","description":"When called, will remove all imperatively-added key bindings.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":346,"column":4},"end":{"line":350,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyboardEventMatchesKeys","description":"Returns true if a keyboard event matches `eventString`.","privacy":"public","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":359,"column":4},"end":{"line":367,"column":5}},"metadata":{},"params":[{"name":"event","type":"KeyboardEvent"},{"name":"eventString","type":"string"}],"return":{"type":"boolean"},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_collectKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":369,"column":4},"end":{"line":379,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_prepKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":381,"column":4},"end":{"line":403,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_addKeyBinding","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":405,"column":4},"end":{"line":412,"column":5}},"metadata":{},"params":[{"name":"eventString"},{"name":"handlerName"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_resetKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":414,"column":4},"end":{"line":420,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_listenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":422,"column":4},"end":{"line":435,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_unlistenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":437,"column":4},"end":{"line":452,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_onKeyBindingEvent","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":454,"column":4},"end":{"line":475,"column":5}},"metadata":{},"params":[{"name":"keyBindings"},{"name":"event"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_triggerKeyHandler","description":"","privacy":"protected","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":477,"column":4},"end":{"line":486,"column":5}},"metadata":{},"params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"loadResources","description":"","privacy":"public","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":222,"column":2},"end":{"line":255,"column":3}},"metadata":{},"params":[{"name":"path"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__computeLocalize","description":"Returns a computed `localize` method, based on the current `language`.","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":260,"column":2},"end":{"line":300,"column":3}},"metadata":{},"params":[{"name":"language"},{"name":"resources"},{"name":"formats"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestResponse","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":302,"column":2},"end":{"line":330,"column":3}},"metadata":{},"params":[{"name":"event"},{"name":"language"},{"name":"merge"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__onRequestError","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":332,"column":2},"end":{"line":334,"column":3}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"__checkLocalizationCache","description":"","privacy":"private","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":336,"column":2},"end":{"line":344,"column":3}},"metadata":{},"params":[{"name":"proto"}],"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"_updateMinMaxTz","description":"","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":104,"column":4},"end":{"line":113,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_minDateChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":114,"column":4},"end":{"line":122,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_maxDateChanged","description":"","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":123,"column":4},"end":{"line":131,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_preserveTime","description":"Copies the time in toPreserve to dest and returns dest.\nused in `px-calendar-picker`, `px-datetime-picker`, and `px-datetime-range-panel`","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":139,"column":4},"end":{"line":147,"column":5}},"metadata":{},"params":[{"name":"toPreserve"},{"name":"dest"}],"inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"_localeChanged","description":"make sure the moment obj picks up the possibly new moment locale","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":93,"column":4},"end":{"line":102,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Range"},{"name":"_timeZoneChanged","description":"makes sure the moment objects reflect the timezone","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":106,"column":4},"end":{"line":117,"column":5}},"metadata":{},"params":[],"inheritedFrom":"PxDatetimeBehavior.Range"},{"name":"_validateRangeOrder","description":"Validation for the range. Makes sure the ranges are in chronological order","privacy":"protected","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":123,"column":4},"end":{"line":132,"column":5}},"metadata":{},"params":[{"name":"fromMoment"},{"name":"toMoment"}],"return":{"type":"Boolean","desc":"true if chronological order, false otherwise"},"inheritedFrom":"PxDatetimeBehavior.Range"},{"name":"ready","description":"","privacy":"protected","sourceRange":{"start":{"line":296,"column":4},"end":{"line":304,"column":5}},"metadata":{},"params":[]},{"name":"_presetSelected","description":"","privacy":"protected","sourceRange":{"start":{"line":306,"column":4},"end":{"line":346,"column":5}},"metadata":{},"params":[{"name":"e"}]},{"name":"_validatePresetDates","description":"Validates a preset start date based on blockPastDate/blockFutureDate/minDate/maxDate","privacy":"protected","sourceRange":{"start":{"line":351,"column":4},"end":{"line":399,"column":5}},"metadata":{},"params":[{"name":"start"},{"name":"end"}]},{"name":"_validateDateBlock","description":"Validates a date against blockPastDate/blockFutureDate/minDate/maxDate","privacy":"protected","sourceRange":{"start":{"line":404,"column":4},"end":{"line":411,"column":5}},"metadata":{},"params":[{"name":"date"},{"name":"today"}]},{"name":"_resetRange","description":"","privacy":"protected","sourceRange":{"start":{"line":413,"column":4},"end":{"line":417,"column":5}},"metadata":{},"params":[{"name":"rangeObject"}]},{"name":"_rangeIsSelected","description":"","privacy":"protected","sourceRange":{"start":{"line":419,"column":4},"end":{"line":423,"column":5}},"metadata":{},"params":[]},{"name":"_fromPicked","description":"","privacy":"protected","sourceRange":{"start":{"line":425,"column":4},"end":{"line":465,"column":5}},"metadata":{},"params":[{"name":"event"}]},{"name":"_toPicked","description":"","privacy":"protected","sourceRange":{"start":{"line":467,"column":4},"end":{"line":507,"column":5}},"metadata":{},"params":[{"name":"event"}]},{"name":"_areConsecutiveMonth","description":"","privacy":"protected","sourceRange":{"start":{"line":509,"column":4},"end":{"line":515,"column":5}},"metadata":{},"params":[{"name":"fromBaseDate"},{"name":"toBaseDate"}]},{"name":"_fromBaseDateChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":517,"column":4},"end":{"line":528,"column":5}},"metadata":{},"params":[]},{"name":"_toBaseDateChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":530,"column":4},"end":{"line":541,"column":5}},"metadata":{},"params":[]},{"name":"_updateFromCalendar","description":"if the change comes from the \"outside\" synchronize the calendar","privacy":"protected","sourceRange":{"start":{"line":545,"column":4},"end":{"line":551,"column":5}},"metadata":{},"params":[]},{"name":"_updateToCalendar","description":"if the change comes from the \"outside\" synchronize the calendar","privacy":"protected","sourceRange":{"start":{"line":555,"column":4},"end":{"line":561,"column":5}},"metadata":{},"params":[]},{"name":"_canApplyComputed","description":"can apply if range is in the right order and times are valid (or not shown)","privacy":"protected","sourceRange":{"start":{"line":565,"column":4},"end":{"line":567,"column":5}},"metadata":{},"params":[{"name":"timeIsValid"},{"name":"fromMoment"},{"name":"toMoment"},{"name":"allowApply"}]},{"name":"_getTimeIsValid","description":"","privacy":"protected","sourceRange":{"start":{"line":569,"column":4},"end":{"line":571,"column":5}},"metadata":{},"params":[{"name":"_fromTimeIsValid"},{"name":"_toTimeIsValid"},{"name":"hideTime"}]},{"name":"_getFieldClass","description":"","privacy":"protected","sourceRange":{"start":{"line":573,"column":4},"end":{"line":577,"column":5}},"metadata":{},"params":[{"name":"showButtons"}]},{"name":"_handleButtonClick","description":"when the cancel button is clicked and presets are showing, reset the presets","privacy":"protected","sourceRange":{"start":{"line":582,"column":4},"end":{"line":587,"column":5}},"metadata":{},"params":[{"name":"evt"}]}],"staticMethods":[],"demos":[{"url":"index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":142,"column":10},"end":{"line":589,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"key-event-target","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":277,"column":6},"end":{"line":282,"column":7}},"metadata":{},"type":"?EventTarget","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stop-keyboard-event-propagation","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","sourceRange":{"file":"../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":288,"column":6},"end":{"line":288,"column":65}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"block-future-dates","description":"Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":34,"column":6},"end":{"line":37,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"block-past-dates","description":"Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":41,"column":6},"end":{"line":44,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.BlockDates"},{"name":"language","description":"set a default for localizing","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":74,"column":7},"end":{"line":77,"column":8}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"resources","description":"The dictionary of localized messages, for each of the languages that\nare going to be used. See http://formatjs.io/guides/message-syntax/ for\nmore information on the message syntax.\n\nFor example, a valid dictionary would be:\nthis.resources = {\n 'en': { 'greeting': 'Hello!' }, 'fr' : { 'greeting': 'Bonjour!' }\n}","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":176,"column":4},"end":{"line":178,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"formats","description":"Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":189,"column":4},"end":{"line":192,"column":5}},"metadata":{},"type":"Object","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"use-key-if-missing","description":"Use the key for localization if value for  language is missing. Should\nalways be true for  our components","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":82,"column":7},"end":{"line":85,"column":8}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"localize","description":"Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":208,"column":4},"end":{"line":211,"column":5}},"metadata":{},"type":"Function","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"bubble-event","description":"If true, will bubble up the event to the parents","sourceRange":{"file":"../app-localize-behavior/app-localize-behavior.html","start":{"line":216,"column":4},"end":{"line":219,"column":5}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.AppLocalizeBehavior"},{"name":"time-zone","description":"Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":64,"column":6},"end":{"line":70,"column":8}},"metadata":{},"type":"string","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"min-date","description":"The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":89,"column":6},"end":{"line":92,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"max-date","description":"The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).","sourceRange":{"file":"../px-datetime-common/px-datetime-shared-behavior.html","start":{"line":96,"column":6},"end":{"line":99,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.Shared"},{"name":"from-moment","description":"Moment object start date & time","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":32,"column":6},"end":{"line":38,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"name":"to-moment","description":"Moment object end date & time","sourceRange":{"file":"../px-datetime-common/px-datetime-range-behavior.html","start":{"line":42,"column":6},"end":{"line":48,"column":7}},"metadata":{},"type":"Object","inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"name":"preset-ranges","description":"The preset date/time ranges to be displayed.\n\n```\n  [\n   {\n     \"displayText\": \"Yesterday\",\n     \"startDateTime\": moment().subtract(1, 'days').toISOString(),\n     \"endDateTime\": moment().startOf('day').toISOString()\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": \"2013-02-04T10:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": function() {return moment().subtract(1, 'days').toISOString();},\n     \"endDateTime\": function() {return moment().startOf('day').toISOString();}\n   }\n  ]\n```","sourceRange":{"start":{"line":209,"column":6},"end":{"line":231,"column":7}},"metadata":{},"type":"Object"},{"name":"show-buttons","description":"Whether to show Apply and Cancel buttons in the components","sourceRange":{"file":"../px-datetime-common/px-datetime-button-behavior.html","start":{"line":33,"column":6},"end":{"line":37,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"PxDatetimeBehavior.Buttons"},{"name":"from-base-date","description":"Reflects the date currently used by the 'from' calendar to determine what it should\nbe showing, i.e what month, year or year range.","sourceRange":{"start":{"line":156,"column":6},"end":{"line":160,"column":7}},"metadata":{},"type":"Object"},{"name":"to-base-date","description":"Reflects the date currently used by the 'to' calendar to determine what it should\nbe showing, i.e what month, year or year range.","sourceRange":{"start":{"line":165,"column":6},"end":{"line":169,"column":7}},"metadata":{},"type":"Object"},{"name":"hide-presets","description":"Presets won't be shown","sourceRange":{"start":{"line":180,"column":6},"end":{"line":183,"column":7}},"metadata":{},"type":"boolean"},{"name":"hide-time","description":"Will prevent time from being displayed","sourceRange":{"start":{"line":235,"column":6},"end":{"line":238,"column":7}},"metadata":{},"type":"boolean"},{"name":"time-format","description":"Moment format used for the time","sourceRange":{"start":{"line":242,"column":7},"end":{"line":245,"column":7}},"metadata":{},"type":"string"},{"name":"time-is-valid","description":"computed from `_fromTimeIsValid`, `_toTimeIsValid`, and `hideTime`","sourceRange":{"start":{"line":264,"column":6},"end":{"line":268,"column":7}},"metadata":{},"type":"boolean"},{"name":"allow-apply","description":"Controls if the `_canApply`, which controls the apply button, is true or false.\nfalse : `_canApply` will be false\ntrue : doesn't force a false on `_canApply`. It will rely on `timeIsValid`, `fromMoment`,\n`toMoment` to calculate the property\n\nUsed in rangepicker","sourceRange":{"start":{"line":285,"column":6},"end":{"line":287,"column":7}},"metadata":{},"type":"boolean"}],"events":[{"type":"CustomEvent","name":"app-localize-resources-error","description":"app-localize-resources-error","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"app-localize-resources-loaded","description":"app-localize-resources-loaded","metadata":{},"inheritedFrom":"Polymer.AppLocalizeBehavior"},{"type":"CustomEvent","name":"time-zone-changed","description":"Fired when the `timeZone` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.Shared"},{"type":"CustomEvent","name":"from-moment-changed","description":"Fired when the `fromMoment` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"type":"CustomEvent","name":"to-moment-changed","description":"Fired when the `toMoment` property changes.","metadata":{},"inheritedFrom":"PxDatetimeBehavior.RangeMoments"},{"type":"CustomEvent","name":"from-base-date-changed","description":"Fired when the `fromBaseDate` property changes.","metadata":{}},{"type":"CustomEvent","name":"to-base-date-changed","description":"Fired when the `toBaseDate` property changes.","metadata":{}},{"type":"CustomEvent","name":"time-is-valid-changed","description":"Fired when the `timeIsValid` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-datetime-range-panel"}]}